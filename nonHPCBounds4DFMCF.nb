(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    462214,       8618]
NotebookOptionsPosition[    451859,       8446]
NotebookOutlinePosition[    452297,       8463]
CellTagsIndexPosition[    452254,       8460]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Initial", " ", "time"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"begint", "=", 
   RowBox[{"AbsoluteTime", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.882273802551115*^9, 3.8822738162741547`*^9}, {
  3.896185744878428*^9, 3.896185752880234*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"5cb2e6f8-0bef-42eb-aed1-0958555aff08"],

Cell[BoxData["3.896941787165268`16.343298907474658*^9"], "Output",
 CellChangeTimes->{3.896872396410886*^9, 3.896874545924713*^9, 
  3.896877407900461*^9, 3.896879939459653*^9, 3.8968818526247873`*^9, 
  3.896882666661981*^9, 3.896885914390592*^9, 3.896886354221237*^9, 
  3.896956187197967*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"15a786d5-c067-4963-a20a-475caccc2003"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical Calculation: FindMininumCostFlow 4D", "Title",
 CellChangeTimes->{{3.718713698564654*^9, 3.7187137052744064`*^9}, {
  3.7475729787223797`*^9, 3.7475730185404563`*^9}, {3.8961857577511177`*^9, 
  3.896185762177107*^9}},ExpressionUUID->"182e4daf-f8e0-4ea7-b4fc-\
e4286a087ed3"],

Cell[TextData[{
 "This notebook is designed to take two distributions of sand in a specified \
box, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "init"], "(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]],ExpressionUUID->
  "b94a91a9-1409-435f-afae-6aaaa71a8553"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "final"], "(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]],ExpressionUUID->
  "f9a4e488-1a4f-446f-b8c5-a993b2051c74"],
 " and calculate the cost of moving the sand from the initial to the final \
distribution. Cost is defined as the amount of sand moved times the \
distance."
}], "Text",
 CellChangeTimes->{{3.7187137106772213`*^9, 
  3.7187138091258593`*^9}},ExpressionUUID->"2efdddf3-3d5e-4867-b561-\
434f57f2a2eb"],

Cell["\<\
The FindMinimumCostFlow function will output the minimum total cost of \
flowing moving from supply to demand. \
\>", "Text",
 CellChangeTimes->{{3.718837968909587*^9, 3.71883798673643*^9}, {
  3.7188381917295427`*^9, 3.7188382769472013`*^9}, {3.7475730726166506`*^9, 
  3.7475731381142893`*^9}},ExpressionUUID->"a01f8cd4-2c22-4b21-bf42-\
36c6be61d6f0"],

Cell[CellGroupData[{

Cell["Enter Parameters", "Section",
 CellChangeTimes->{{3.718713659939337*^9, 
  3.718713668392317*^9}},ExpressionUUID->"b54b99db-dbe2-4a59-82a8-\
75f2a4bddb4a"],

Cell["\<\
Define the initial and final sand configurations. (These will be \
automatically normalized below.)\
\>", "Text",
 CellChangeTimes->{{3.7187134100605803`*^9, 3.7187134589721775`*^9}, {
  3.7187138265382032`*^9, 
  3.7187138348340445`*^9}},ExpressionUUID->"e5fbb593-1277-4955-9272-\
ec016bd89a17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x1", "=", "0"}], ";", 
  RowBox[{"y1", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", "0.1"}], ";", 
  RowBox[{"y2", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z1", "=", "0"}], ";", 
  RowBox[{"w1", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z2", "=", "0.1"}], ";", 
  RowBox[{"w2", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", "1"}], ";", " ", 
  RowBox[{"p", "=", "1"}], ";", " ", 
  RowBox[{"\[Theta]", "=", "0"}], ";"}]}], "Input",
 CellChangeTimes->{{3.732030528018759*^9, 3.7320305301988163`*^9}, {
   3.733793701148775*^9, 3.733793752075521*^9}, {3.73379453747824*^9, 
   3.733794545885833*^9}, {3.7337945876704054`*^9, 3.7337946009734435`*^9}, 
   3.7489099147051525`*^9, 3.748909982229043*^9, 3.7489102241472054`*^9, 
   3.748912084949465*^9, {3.748914401723262*^9, 3.7489144045763044`*^9}, {
   3.7489147918774853`*^9, 3.7489147965147*^9}, {3.873990337461932*^9, 
   3.873990355564694*^9}, {3.873990878511148*^9, 3.873990914210498*^9}, {
   3.87555583102358*^9, 3.875555843913355*^9}, {3.875609105293663*^9, 
   3.875609107493991*^9}, {3.875609145886279*^9, 3.875609148480603*^9}, {
   3.875609202745201*^9, 3.875609216215477*^9}, {3.875609399538727*^9, 
   3.8756094011066103`*^9}, {3.875610311101206*^9, 3.875610321206208*^9}, {
   3.8756308759891157`*^9, 3.8756309051654797`*^9}, {3.875630979382516*^9, 
   3.875630981106518*^9}, {3.8757936773518553`*^9, 3.875793677490267*^9}, {
   3.875793740357883*^9, 3.875793760326046*^9}, {3.875793978051387*^9, 
   3.875793980718894*^9}, {3.876605412007324*^9, 3.876605412443317*^9}, {
   3.876923519352556*^9, 3.876923523288248*^9}, {3.87692415815628*^9, 
   3.8769241583366117`*^9}, {3.8778997462512903`*^9, 3.877899747719096*^9}, {
   3.8778998259834623`*^9, 3.877899826559716*^9}, {3.878055650837706*^9, 
   3.8780556611012506`*^9}, {3.882272349810952*^9, 3.8822723520872726`*^9}, {
   3.882272386850973*^9, 3.8822723888707447`*^9}, {3.8822727482469883`*^9, 
   3.882272748798112*^9}, {3.896263345457407*^9, 3.8962633547699213`*^9}, {
   3.896264128643277*^9, 3.896264179756754*^9}, {3.896344190423617*^9, 
   3.89634419324175*^9}, {3.896359028173277*^9, 3.896359031868949*^9}, {
   3.8963612326247063`*^9, 3.896361241000101*^9}, {3.896362009493709*^9, 
   3.896362030277398*^9}, {3.896362131694149*^9, 3.896362150165278*^9}, {
   3.8963671892730417`*^9, 3.8963672129856567`*^9}, {3.896371262154204*^9, 
   3.896371272436492*^9}, {3.896876148182659*^9, 3.8968761512978992`*^9}, {
   3.896876252020994*^9, 3.8968762522754097`*^9}, {3.896876437950761*^9, 
   3.8968764419320173`*^9}, {3.896876548144534*^9, 3.896876556293791*^9}},
 FontWeight->"Plain",
 CellLabel->"In[2]:=",ExpressionUUID->"7fbe2868-dd88-4902-a0bf-51594abd96b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa", "=", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], ")"}], "2"], 
      SuperscriptBox["p", "2"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["p", "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "2"]}], 
      SuperscriptBox["\[Rho]", "2"]]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bb", "=", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox["p", "2"]], "-", 
      FractionBox[
       SuperscriptBox["p", "2"], 
       SuperscriptBox["\[Rho]", "2"]]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc", "=", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "2"], 
      SuperscriptBox["p", "2"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["p", "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ")"}], "2"]}], 
      SuperscriptBox["\[Rho]", "2"]]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"finit", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "w_"}], "]"}], "=", 
   RowBox[{
    FractionBox["1", "\[Pi]"], 
    SuperscriptBox["E", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", "x", ")"}], "2"]}], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", "y", ")"}], "2"], 
       SuperscriptBox["\[Rho]", "2"]], "-", 
      SuperscriptBox["z", "2"], "-", 
      SuperscriptBox["w", "2"]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ffinal", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "w_"}], "]"}], "=", 
   RowBox[{
    FractionBox["1", "\[Pi]"], 
    SuperscriptBox["E", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"aa", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "x2"}], ")"}], "2"]}], "+", 
        RowBox[{"bb", "*", 
         RowBox[{"(", 
          RowBox[{"x", "-", "x2"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"y", "-", "y2"}], ")"}]}], "+", 
        RowBox[{"cc", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"y", "-", "y2"}], ")"}], "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"z", "-", "z2"}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"w", "-", "w2"}], ")"}], "2"]}], ")"}]}]]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.875609362452834*^9, 3.875609362464476*^9}, {
  3.875630944243865*^9, 3.8756309683511887`*^9}, {3.877898765566511*^9, 
  3.877898773577755*^9}, {3.877898810527088*^9, 3.877898813884079*^9}, {
  3.877898945411683*^9, 3.877898953479877*^9}, {3.877900724589119*^9, 
  3.8779007266535063`*^9}, {3.877900963948606*^9, 3.8779009689991407`*^9}, {
  3.896185792338686*^9, 3.89618579746931*^9}, {3.896362060533958*^9, 
  3.896362081629758*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"39d037e1-56a7-4255-9e5a-8655d5e22f35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Plotting", " ", "for", " ", "visualization"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ffinal", "[", 
        RowBox[{"x", ",", "y", ",", "0", ",", "0"}], "]"}], ",", 
       RowBox[{"finit", "[", 
        RowBox[{"x", ",", "y", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ffinal", "[", 
        RowBox[{"0", ",", "0", ",", "z", ",", "w"}], "]"}], ",", 
       RowBox[{"finit", "[", 
        RowBox[{"0", ",", "0", ",", "z", ",", "w"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"w", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.873990292424479*^9, 3.8739903286377487`*^9}, 
   3.8739904466766567`*^9, {3.874159135512912*^9, 3.874159135817031*^9}, {
   3.875555862705727*^9, 3.875555892757313*^9}, {3.877898966564402*^9, 
   3.8778989694436007`*^9}, {3.896185881000461*^9, 3.896185917142905*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"d5757a24-c2cb-474e-936a-e83d028cf1aa"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
OfQJ35f5a7b74X2txegTeFKCaX5d0WXMz4H3aJvjlDn3NtY7wDcUZ73Ssz+K
PoH/8+lJb3/ZB30CD7z8U6XvrF3oE7jxXus9fRvOYX4OfOG1ofNuBF/C/Bz4
uW8eKk79DqBP4Dbrlt9MeGiMPoHvevzhVMePMZifA1+xeNm+ZJv3WO8A97A7
NerYvrdY7wB/eLiv/E/TMMzP4Xsxu33dS95YvMU+BvC0e6vVF/4egj6Bvz32
oeDHHgv0CXxzZ/2Z9z+rok/g3sv+1K5ZFYn9BOD9FPIY0S7sD+D3jHQfnddP
3aGLPoEreWz8cTF0MPoEbt7q/KGK8rboE7hvq+92I27fwnof+KvywHsdrgxH
n8BDfq3KCvq5En0Cv99rzIyJz5aiT+DJ1m69+hzshT7hvv3EgdcM1l8YS/aF
6H4+S18OPHjcFHwCvxzqcq9dVZQZ+AT+wdhIxXr6TrKfQz8cf69790hV9Al8
u04l3fBlJdmfoQ2V5BWOFsA6xz4MrfboYWjj9mPYVwG+v9OJ7oVBm8i+Cm16
LffIxUe6ZP+E3rqq79Gh307CPoa8vsevkcNfZcN1BPnFJV4pQdeeoDfJH7eO
7L+6BTERKgnozWVp6zinoo7s7qPnWsn2zT6niZcUjVJjl6iGsJtl+mNLdNuq
/ve5jLJqres6mT5Yvqcim/RVjd2u8/223kNpv2viB+WN//XhP8Q658Xa5An7
VxHqrJ5qzEOtox+E3vZ2ZGsv/VIfoPgXvXH343dkT6hbttvteh69aTt1Gv5f
nKvPWXRlTmugt2OS96MaW3Umad/xJRvQm9Lwbn7/xemjZ14c4ngeve3116L/
i9O4b+DXZf+k79/OFg1ndG3bsyedEmJk+z+tJH9VWIduySLZ/s+X/7wlqbAn
wqs7iWX6Py//8+PUgf0+dlmuukz/R+JTTZUNWfn91IuG1rgfSnw6qbKZ42/0
SZObj/uhxOcjVfae17ga/35O+P51k8TfntXODMnxn7IP379rZ/UOb2pqz3pr
NYY/jRmA79/ZXfqJ/ovzQdD1DS5F59AbVThoyX9x3o58HOagqIjvX4nP5jgD
w9en7PCT9t8kPpvjXGYUsjlLps8miac5zqtWmbbfZfppQ3bWUbYBbdnOBXty
ZPs/XSSeFdjQg5/XyPZ/Wkv+KrL3rs483EOm//NV4lmRvaHsvfTRHWn/h/Os
xLrsS/qUUyrt/9yV7CfK7IPRixePpx8Q/R9lNvuf7efZuoVEP60t+zh9fOjZ
wm/ok/PcfB1Tfv1wu9cJ9LlO4lmBjTeftGLWp154feE8K7I3H2tcP6rhiz5p
iWclNqWtyZWU1dJ+2uAwPda/OU6m9PBGH5l+Wqclhtr/xbns58wzI2T6aVY3
qkucilqxjQNVk2X7P0MlnluzSo5ni3bL9H80JZ7l2ClRZ0dky/R/5CR/xaz5
rU8vknSl/R/Os5gtPVXksTlS2v/hPLdhzzoEh9Yd1iL6P/Jsxm+PWZV9Mc/k
+2mt2Ok5J4ZGV47B/Ifz3Jr1D/fa711ejT73STzLsTFZg/80xHuhT86zHDsx
c3WX367SftociWcxu7Ps9dRxutJ+2miJ5zYs8yd49BaZfhrnWZ4tNdhm1Vqm
nxZX+apJ17aeCX+0YIZs/+fA+ndMUdJvZktYWpBs/2dhzZe9AboNTKf8+hfx
Mv2fERL/f5n7KW1Pd5Dp/8hL/jYy7qOuiZxaS/s/hRKfTUzOg6IBfs526LNA
wkWsezvn2bUFG9HnfomfemZFrn7xvtvu6HOexMNvZvD0aYOP3THC/HyY5Hgb
mKSsx60LjYvRZ+s+Jm7jm+O81JSk5PNF2k8ruGhFNzX9Y0IarYKeyvTTrg6b
JPovzk/dVKzCZPppnGcRe37Kx1bfZPppSffD9xYnfWSmB9zPl+3/LM2+3mQb
8IV5UdfZV7b/o/L6wd4bTt8ZA/f6Neoy/R/OczVTkBAYK5bp/wyXeP7BXMjd
+Ul8Rdr/aSP5U8M4ftconJu8D31ynmuZ78vvV97pE4I+F0u8fWQ2vva9EqF3
GX22lfj5whTb73BU1XFCn9ckHr4zzxVXpToskvbThko8VzMRR0fIt6Wk/TTO
8w/GZdZdi1yZfhrn+SeTt3dik+iqtJ8WI5m/lsnwux4l209b8tzp77aiJEY5
1+GGbP+nuLNHo3PRA+Zlj+clsv2fh+dWNQXqZjPdegXEfpXp/3S/daRpfVE+
4zV7/91Umf7Pesl5KWYuqNTfqD4v7f8slfgvZdZe+RAweYK0/xO6KFjk2BxP
xvr+H6ftYtHbFgl/wJz9O1n/ZaYnelOx2STyb45nvVLghlW3pH2zJZLx+UxU
cHTcoSxp3yxpS6poXHM8NrG37pvK9M3kJfOUMlGf1bJk+2bx0z3dGpveMRV7
fmvJ9s1Oc5waknh1nGz/5+dYyTyUSWO/5bL9nyPc61IxkQeGb5Lp/5hwcVJz
uziGnZHp/1RI5smm7BeNOKP5WLrv/Wr67987KvxRnyDzV7fRz2TOJxXW9uy+
tC9e6MeG808911bamtFa2h+ruSk5X1SZ0/OuC2T6Y6e580sZHRirpiDTH/Pl
1gOV/etHL9n+2L0syfqhFMoe68r2xyK49UYtbKg8KdvnecatT0ojw6lJts9T
ryNZz9TAu3O0F8j0efpw659KS/9QHddR2ucJ494vVPVmrRmfXkn7PD8l83yh
WtX4Z1ffX4fennPvU2pjZ+WuwQvOo7cGic+flMHjc483j5f2c/px+wC1eu2/
zsl9pf2xGdy+QZ363tYtN1baH/tdLNlnKLUX27oOlOmPTeH2JWpYj3gn2f7Y
OW4fo262v20r2x8z5/Y9epBTq2uy/RzOZxOVdtp5/lqZfk4mt69SL+XS3afL
9HM4n3+pAR9mDEkwkvZzdLl9m/Lu4eryp10hXn+ncvs8tUVM6w2+aIL7207u
ukAN9FzYOeC8J/rM4a4j9JeRA7qM3OiGPjnPTdSQFL3Tq303oc+/Es//qJyi
wMLYbtL+WH/uukYt/JD1bFaktD/GeW6gakTzRynK9Md2c9dNavWYCUay/bEo
7jpLdXSo7i/bHxvAXZfp1l2t58v2czjPbeiEkZdc1WT6OTO46z49ant77dk2
0n7OKi5PoFef96LjxLWYH+7m8gq6l0bukSLlw0T/oTX9/vDJJf2312J+eIHL
W+jUqec7DlSYgj65+lSeDu47MnVRozX6zOXyIlo7YGp01klT9PmRy6Noa21N
+6nZ0v5Yo8SzHB3RXf/cwQppf0yDy9NoVieq90iZ/tgALq+jfdMUPGX7Y5Zc
HkgPm/Bkl2x/TI3LG+mpF0KDHsj0c/pzeSZdrvbLr32xtJ/DeVaiH8rna7ax
k/ZzpnN5LH36kXrO72BpP4fzrEDfTV1oaKDRH326cnkyHX0/QK54Tzj65Dy3
pdvM+PXvDdOI+TbXj1KmVY8qH/72qIboPyjTw31WzUnw+4z5IedZib66zOpj
sLu0P8Z5VqRPBt/s5HhB2h/jPCvQZ5PnUE9l+mPqXN1BD7d+F58s0x8byNUp
9JvgbC/Z/tgerq6hGx8/1Hgr089R4Oog+p37+LBwmX5OIFc30cF9lpw85ynt
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
kVbwQ88Qf+HpobZWy6XXtbF8/BuCS45/l7muxfPxDz9+5puHzHWNex+1Yhd7
MMNl82EdSfytWXHfSVay+TAXvxwrbxksv18mH+bil2OVCyjfH3rSfJiLX8xq
zjWYfnCaNB/m4m/DZg55bqkQMwTzYc6/PGvYxeZU7AszzNOu8/26gbuFedp1
Pv6dRTc1zjraYp7Wm49/+8STulc0a9AzxO83RPzDLd4bPf/l46+RY/vGHJHm
aRB/5hGq5ttTaZ72ko9fy3n01G0yeZo1H/+tJL9jsnka9xyjeqah3wQz2fpu
tWT+34x6nHOKlUx9ZyWZp4F5fnJGsalMfddTclx/GTOj5/X3MqT13W/uPhYm
d8yVAQfeSeu7PEmcTYzcBY3Ndu1WSe+3lHARa5C9wdJqCn6uJxrL9+uULwnr
Dm8+/sujJm2ZXrEfPa/k419yY19gNysTrDtG8/HnpOw3fD9Qeh+mFh9/Y4Ph
u+0m0rrjFx//5pk7wn7L1B05fPwXXt8w2idTd+Tz8afOnDJDtu5wkMTzkYke
fCFCtv/QTfK6X5i+f92dZfsPzyTzfGeGfj40/rpM/4HzX81ssR6hf2mQtP/Q
QzLPD2aLa0bqhYnS/kM9d78W8+PetMlLCrzR22I+Hvclm0ZrGl5Fbxp8POGj
A1y7jZHeb/mEj6dnSZXfkt6dsS6m+Xg6hf/M3fFEWhdr8fFkbt48Y6FMXVzH
xzPumPs6a5m6OFsyfy1z8X6+tWxdvFHyPkpidntqCPpdh7nnljAnMrb5y/a7
hkniyWaMvdd/vS/T7wrhn4uiY3iJSZfpd7WVxFnMPPGeOE+ls7TfZSqZp5Tp
MWZ0/IPi4+jNkI9nS+O1ymuud6T3W/Lx7Fxge622yg29DeDj6fkzZuDmZdK+
TRAfz32TpIqLMn0bER9Pq28rwhiZvo0hH89AxWpWtm/zmfvcn3HtNOSibN9G
UfK3nBqjIcs12VncPNRGBdl5NFjug7RiSuOr7OuqsnlcnNQoQZwK7CruuKiC
H7LHVUWp8q/7qkO5lvzERPRjx79u2B1H2y0WUj82/Ov+EfhXpQv51z0qOF8a
9Hr+dSsF51eTVpY8gOsB9fSR7HrQou25B3NRHgc0BP3At9x6o9any643Tf7+
8BrqaaDs+tRgh3DrmWolWM+q7DRu/VOHz8iufwX2E/d+oV6+kX2/iFhD7v1F
uQneX1VUOR9P0nTvWzNGn0JvCnw8a7uXOT19Jn2ewFA+nnOC97sqPYOP57Ng
f9Cgv/HxvBXsJ5q0KR/PG8H+o0V7cPsD9X6I7H6lxb7h9jd67QzZ/U2TLeP2
Q+ptsex+qMFy8TdSs2fI7p+qvM+/1EzBfqvATuf2Z2qFYH8WsS7cfk5pCPbz
KoZ7/lM9ZSfc/0UM32frR/QD3/Lx+z0XXF/ocj7+51Gy1yMFWpGP/5vg+qVK
D+PjPym43mnQM/n414fIXh816e18/JrXZK+nWnQYH39Zf9nrrxbLPT9KnrZL
lL1ea7Lc8w7b0OM3yl7fNdhNXD5AZx6WzQdUWbHkr5juL8gfFFju+YhytLog
3xCxA7n8hFYX5CdVzG0un6HFwnxGNIXvs6UQ/cApfPzTOgvyJfotH7+bIL9S
oCH+IYJ8TJVuw8e/V5C/adAn+PijBfmeJj2Ij/+pID/UolP4+OP3y+aT0N9W
plcFyeafmuxkLl+lF56QzVc1+H1DidYR5LeqvH9F2vO8bD6swPtXpBcJ8mcR
y8WvQD+fIJtvVzGc/7Z0B2F+Lkrh+2zHiX5gCh//9lGC/J+ewsc/QFAvKNAQ
f4GgvlClN/PxlwnqEQ3evyK9bp5s/aJJB/PxxwvqHS3ef1va1FW2PtJig7h6
it5WIltPabKvufqrOU7Z+ovvB6qp0lmTZOs1Vd5/B/oDI1vfKfD+VWixoB6E
76Go0KHrZOvHKobz355u6iGoN0UD+T7bZ6IfCPEbFwjqWfoNH3+yoP7l+4HN
8V8U1MuqNMS/XVBfa/D+VeiJsbL1uCYtz8ff/ots/a7F+29PTy2Xrff5fmCE
Ov3lZflX52XSPlUg1zegB2TL9g00OP9f1egngbJ9BlW2H9eXoNcJ+hIK7Aau
j0EbC/oY0N/uSD8Ole17VDGS7w+6daRPzhf0SfjPETrSh1rqB/53/6G6oA9D
B/HxGwr6Ngo0xD9P0OdRpSH++YK+kAa9kY+/WNBHgv52R1p7qGzfib//LUKd
FfrUosfx/GiBkPPHy8a1k+1rVTFVfJ7WefHr5z3f4v2cTF6L+WQVxe0b5Uz9
IuH4v/x9niqCeaAOraBO8s/Jh/hFvH9hn02LluP5lHZCzh8XTR4X+CPuv2Jh
HQn7oiIRPIfwruC5qSIRPF8xRcChn5lhnif8HFkEfA//OwtC/tZ8L8Fj+flZ
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
JZpgYDRgzTNyX6X+HDL8eqL9FXJfpfZ5GN/z0blL7qtUzLNl6ccDgsl9lfrU
w862dawhua9StFW3cTobg8h9ktpSeeu2W6YtuU9SdaOrH90bmUzuk9SKTa2/
+Vz+RO6TVLvLPomrLErJfZL6M/uOavvBIeQ+SS1Mq9dynNaF8NZIfcoyVEg7
bEpe96n4wuqF039eJa/7VM5P7xfvwn3I6z61Iz+G7vc2nLzuU8esb1raG2wn
r/vU0IDlvsWLNcjrPlW24M2wKu0t5HWfSmxFHx0//wR53acCgl5dmPdkL3nd
p4Zp/63ev2Yged2nbP6V//z58gR53aeSJmwLMxrzmLzuU8vixvYK+cOS133q
sl6/R1H3d5DXfaq1QWWtRh1Zl4nprz+7v7r1Vp7wLKaz1k35W/ZsB5nH0ifW
9CyJfjaXzGNp7TD54EmdnMg8ln4Sbv9if6E1mcfSD3s/sj59pJTMY2m/db0W
Wc0bTeaxtJ3Xw7wTPVeQeSzd5ZC971mHiWQeS0/PrFt1/30tmcfSWRsPz031
WUHmsfSvYSkmC88eJ/NY2uWr5cB3VkfIPJZedOGx/sCRNmQeS0cPdAjSenSP
8KxIvzd07tfuZwpZl9GRY3t81J01nKzLaCrpfKmOtgrhWZG2OB/rGbJSh6zL
aL26lXVTlv8h6zI63N66Yeio42RdRtuszim5+KOWrMtoa+rJVPetXcm6jH5+
yHOs6+xWhGdF+lZAr9DdidFkXUb7fZu1O7ypK1mX0fcLLxgWn5tE1mX0YGOf
9Zs8rMi6jA6o0tP50fUvWZfRoRVpLnMVd5B9Bvqz3JHSpwXzyT4Dbd4j32Xq
gEyyz0AfdC5ue+b9ZbLPQFd8OZp9z4kl+wy0wp72dnOOniD7DHTluV+XH+UZ
kH0GOmniAfG+4ECyz0AvVPta3uZ2EtlnoCvNe0x6+fM02WegY9eavBx7ZzzZ
Z6Drnponzhl1g+wz0Hvm2Hwz9P9I9hnotxvjl+/3ekv2GehROsoGvzqfJPsM
9Dfty9c22XU2Ifpj9Jnx0bn3Ld+aEH0weuw/f6PbH4aTfTA6tY458DjKmuyD
0RudJw4/GdZD6LOZR/jlL4n/mkz2wejsPuGtPp/VFPps5jN888YlBZiTfTD6
jDqrP3ZLH6HPZr46OM5Gt2sW2Qejf1g5Lbo51ILsg9HuGloODzpuJPtgdM6x
OWEDH64g+2D0vONz97w71Evos5nnNpQ8mrkh2HjMiWUVSU5d4HjZ/f4Hhzyc
r2B2cNj9p05F0v5hIxMWacb0MA/2mbryv/sdgfexX1O1aFatee9bGgY3nOSQ
m7LZmcNq/C1mSZ4zVYP9w1mp296H3am2MNxc/WiIbRrypzPLRs8J0rC85ZN/
0l+3FcTJesyz39DPJ8pCf1HHzD62SsgvPxKt3lHW2WKW5HkNHZFHHDUxLz41
31zV7V5XXVtpn/AN8/6MvIOb2dPKJQZORd2Qj69Ysvmb+hZTr+mNk5Kc0A9b
9XhXyjftF8bcfcm8n//6fvxzUDlv6sgtPeeXi7ecMVdZ5H2yKKk98sKNPiG+
R1wsOG9i5HmD8jyyGtQsR28ZuHJ9UR32A50Pum8ZmrbJctLYrMb+tjnI9x68
tvnYvWOWtyV+FGnghr17+K9wP2txMuZghb9uR+SLel/6563eYM49l7MT8sNs
cva664PMO0r8dEMuWvyq2qRHb95PT+Tjj5hr/K19ZdLI35/NcUX2Of+cUk/J
OlFB/tqw86GwpLcWnIc2yAMuP+1bp7PbUq/LmacBur+xL1c2XuXvn8wiS1F2
ZPBNpyLkRlt/dInTFVFvxn5+Oj4A7odXZMUOE+J3PDpgESI53k7I66v3Rhl6
Jptzz8fsinysd9TjLVGxZtzx9kR+TmW4/QHxalPuOWsd+DjF7BT+uaDccckj
X9TOaZFL8VNLLck6b8B+l6leofwcryGU3TDLk33xd/fE7H2/tflbwqfx8cN9
+2K24d+4kaoKQ/n4uyIPMHper3ZPh4+/B3LTpW7VM3YW83G25eNpZE7zz9VU
knj+h32hnjN/tq/NXE4ZStZVBfKz0Z4H+rt6USWSeOD7Ao1MXLKP982Oe8y5
eHogX97LOqpbzigz7r7GJuyH+PDPmVSXePiMPHJ4wgy6IIqfHz7HrGEyzQNF
b6buMNOW7D/S+jfFqnyS9++1Zisk+1UX5D9zyy50UUsx556TJa1P+86MOzap
b7ZFgWT+dshP/buUev74RculknnkkC/q3/3rievWVJ5kfA30GajvlmEKjp/P
UYZdrhr0gf2nmZdHrLd79OgJ1Vbyv+F7HOWUO/88w13ZpgYBsC81c+Xf4Vsb
Q3dRPyT7sxLyL7vGrqp1HUkZmhZMwn2pmbvNdf09ShRhWSUZL60Ht5QF+owV
51twz43thnxa19CVm7Y9NV8tOS5pfTegYZp5aoinWS+JT/BWQ92d8kbzgHyw
+XLJeHXk7hsujT8+/6oF9xy99shVo6/It2/nacn5FCP/tXVtj5w7val7kn2g
Duu1QeqM69GSfdR0ibcc5I2LWnWNj47jP0eH77nUUBr8cws5b4rIle9tuGR2
2ILaIeEdkT9zVJ88OS7acqTEWyfk5fZH66/veWNRLfHWDbmp6IVFuxu55py3
nsi3nBq3quDLEd4PeGikSnvNXTDzlLPFA8lxqSDf8FI5ZcQYW8tpEj9tkGsq
mY6+vPa95TXJfvsb66/V1iP65YwaR7U775GZgPtVI2Wq0pGpinGluOcLw/d6
Gqk7/HMF76wO62qL+1hznbXwiZ9SSpAl56ETco/e+iWb8h9YcB66ItdfNXWZ
p9cdc2799ESeVplXRK1xMbO8dWqlzD5GjwjUbIwX11o8lByvPPLlRwdVFtoE
WIZLntuI+xj9/JRVTOH335bLJOcX9zH6jPPs2w0zx1Dc86khfjF9nH+OH3dc
GlK+4ti7RZ+PWXDHhfsbnaiYk+w397A5d1y4v9GZIjlfP/exfPywvynS4jeO
M0Zp9Lf0y767shD3N0V6stkJvWkvz1jSkudDVSAPMoj+orWvzpKLE+JRpP35
5+ClSuLURF5wZAO9YZmVORdnD+Sbbpbo5X9oMHXdYpTZiPtec54cPGhJ49GR
lt0k5/0z8sfFX0/2iA/kXxfmV6Gn88+F415XC/nQvt6va9qfNP1ZuT7kX9N3
zCcre3okvI/StOTzEJbnbIHapr4NY/2NifyNXdjpqaajv7Mxd7/Ld+yjiky5
55tdF+5vzKgu2962c04Hjn3UnY4u4YvT71P8PMh388890xeOp3omeOUrZT+h
PIVx0l7qt6a6nbltzHmQ3g/zgn8eGvH5NW31TydpRclUGA/HRTP8c9I8hfkY
rXd1gs7qdyK87wXiiTlSrCw6nsnXg7BuRaK9K3oqlQ5/BBzr+HEhCW/rL2bx
//utOfASvt/4hhg/Wzg+BXixcDy+rh//uobC6yPlNDrZuM3NKCLOcmpKahzz
U/Ee7KvwOQJVSVn73hh1nYi/nNrQsX76ya8PKSvJ/EU4T9UjBZurNQ/Izyko
G49xYeoDkqg6ou+az/ddiT48Ne5S9ZpN+y5RjcRxbeSPi7+eYjypf0Zp5G6K
IfvzVO/MmqpnugnUbcn+U4H8yuUDT0rGpjfvW5LrCx7vHjO2oT7Uh/w8hSr2
n/z3zuDTEA8enwl/Xri6qQHnf7PIYNuTKH+qXBgnU+BUsmWIwQVivEhkMVn3
aK3dCfCD3I7vMy8ixm/hxwt+V735/ZgWs8A/1wbut9RGPu/3w28Ka5caC35v
vZm3rv5bmbLGyEzwe+vNfOfZefWVd23MBb+33swdptGfT//qaiH4vfVmPumq
aLPhimvC31tv5ic3zVtRMA/uA+TXbTMvmTK2aJfFQEvB760388/8eMHvrTfz
8/z8gt9bb+ai6Vw8gt9bb+Z657j4Bb+33sy7/+COV/B7683cK47zJvydehV2
tqrLuerqNaYCn8387cn6rGUryoQ+m/m5mU+0PXclCn0287Y+DllepelCn818
ossVn925J4Q+m/nDQ+NuD/+kZyn8/XoVlmrT48uxLoeEPpu53YPnx+IHXBD6
/K+O48cLf79ehR3nzc0v/P16FVZpGxeP8PfrVdgYPn7h79ersOdncccr/P16
FZbtKPCGHLwJPSuyemsvtjvHPCc8K7JH05dvLU8dZyL0rMi2N+5VMCWlu7nQ
syJ7aJBH0Z7aQRZCz4rssqJjUz6mNRKeFdleHV58GxISRHhWZDX3nA+9ol9F
eFZkf/2iilZXtKeEnhVZY3680LMiu5ufX+hZkZ1bzMUj9KzI7hrMxS/0rMjO
N+GOV+hZke26TuANOXgTehaziZfqTRo39DQTehazdgrdm84HHiM8i1nlKv3Z
aQZrCM9i9npMoVn3vdsJz2JW/3egfOjPiZZCz2K24kPeCqfkMsKzmDVf8n1f
7gYL4romZtPL55ylBi8gPIvZPfx4oWcxa13JzS/0LGZ/8fEIPYtZ/1gufqFn
MWtSzR2v0LOYtY8WeEMO3oSeG5nIxOBdYd1mEZ4bmRuOacopbk8Jz42Mmd3x
/OWR4YTnRiZpr+OpjsPiCM+NTJfxeoHjXdwJz41MSu4ujcxbmpTQczO/qJW4
1nkz4bmR6aE57Ut1tT/huZH5wI8Xem5khuZx8ws9NzLBfDxCz43MeDcufqHn
RkZuAXe8Qs+NDJsk8IYcvAk91zA1t+JPNQa7EJ5rmOMu579+EFcRnmuY/BfX
Tv1KTCM81zCj4te7FOjlEJ5rmGGec70OsBGE5xrm1sdlt1WfmhGea5hZ+Q29
sgqPEZ5rmDQ/Udj9wQmE5xpmPz9e6LmGMf7EzS/0XMOk8vEIPdcwr/j4hZ5r
mOR87niFnmuY4SkCb8jBm9BzOTP3embp8NgjZkIuEhWaJNQF5xwn/JczYWvi
TH8ptSH28+ZXWB7ieGeoqqnwvJQzm95d9+wZVGAu5CKRwbv7/pfelxHnq5x5
Gro19fu7DxZC3vyvf+4hw8U/iPNYzjy4kJZ+xOq2pZCLRCP+KXk51qYT57ec
ETetWlkwegYl5CJRcPh2jS9qC4nzXs5ca70pe2HiFYKLRM86jojdr5ZErIfm
PFBl1qbPU58Q66Gc+cHPI+TN/9S4eYTrpJyZw8cp5CJR57NcnML1U854XOQ8
CLlIdI/3IFxX5cz5MM6zkItEUbxn4XorZ0LKufMo5M3xlHPnUbgOy5m6BG5d
CblI1M1MsK5wPLGucDysK2LdUkv4dcuPRx7Bz0OsQ2onvw6J9Uax/Hoj1hWV
zq8rYv1QrVs8L+XUbJ4T54Vy588L4Z86wfsnPFPneM+ET0qUKDhe5HC8xP5J
/Wl5/6QutLx/UkUt75/UyJb3T2pky/snldby/knZtbwfUnTL+yH1oOX9kPo/
+yGV0vJ+SI1qeT9ED8T1nQpp+fpOPW75+k6NaPn6Tt1o+fpOdW/5+k6xLV/f
qdSWr+9Uz5av79THlq/v1LCWr+9UaMvXd+r/XN+pP3YtXt+phJav7+iNyFfp
7JbzVVqz5XyV7t1yvkqfajlfpYe3nK/S71vOV+khLeerdFLL+Sq9vuV8ldZr
OV+la1vOV+ltLeer9LSW81V6d8v5Knoj6i9aq+X6i7Zuuf6ivxi1WH/Rq1uu
v2iLlusvWr7l+otu03L9Ree1XH/RfVuuv+gVLddftEHL9Rdt13L9RRu3XH/R
8i3XX+iN6CfQw1vuJ9DnWu4n0Ptb7ifQad4t9hPoQS33E+hdLfcTaNWW+wm0
Xsv9BHpMy/0EWqvlfgKd7dJiP4EOaLmfQB9ouZ9Ah7bcT0BvRB+Mfsr3wYh+
F33lf21deVyNyx8+OOhEx5Ylcu0kbpJLy1lmbOVHKEsScm2lXFddlBDZs4tU
CCVLqERKsryvCtm3K5E1SWUpHNcSx+8w877zzpz6r+dzPvPOzDnvM893ncpq
/V1wVPX+LuhUvb8L9qje3wVnVO/vghnV+7vgmer9XXBl9f4umO9Wrb8L2lfv
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
k9mfYuAfvCvwRbelzPyLwSzsN8DjQAGvf2Du/u/zhHtkGop4UFN9cNOcs8z9
78XA+kNuOy9ex3y/xWBt38jCg9kVzD4b1usecdK94DCzDzoQET3zx7I6Mcw+
6MCl/LRWo+cmMvugA/XnzEw933Ahsw86cCVN9sjiciNmH3RgYPiQJd/X+wk4
FPA/cN8Jeh8M+nzirC4psZDZBx2wu5TRINX1KLMPOrAhdebc97piZh90oMfB
zneLNjxi9kEHplaNDnjnGsPwqh4sn3h6qfuOQGa9evCx7g/n6D4DmPXqQdNt
zvGl9+8z76keuKicD8+P682+F6BvfOyQDqZBzHr1gMN9J+j16kHG4xW/O47b
yqxXD1Z4j7rTpXces149sE7u6veoOc++X2BoJ8tXERYhzH27cvh63Fltqvwj
w59y+N+1BZ9Tzqxl+Qf+s/WvvJHj3jH8KYc3/1Xstb3Xl5m/HEbjvhP0/OVw
9gyr2Y9aRLG8BE0CYp85XlvH8hI0dTT9vNTEmeElBbQ+FvTIzrwLy/OQL6/U
x8THsjwPi/peL+zY/j9mPqTvBD0fBax55dnQgJn9WD6Hfw4ra6tVfHOin6uE
xXuqXn3f2Js9T2HAscdDhu8T+rkZ952gx1fCnp6WdYMab3OixjHorpc3S47+
7DuBcdGPt7r2oKqfcVs8jjAffo5l1huPcw5O1Od/ntc3fPMqUkPF+3oE3Gl3
2aafcVt6HAW/f1Rxq1k+e8R7oAT8e4CXzqH1BxU9voIPzlo9urxTCTO+gre6
EN/tav1IRlco+HGmTqtHlrdhnms478o9o7I6f2CeK+cn37nSbPKN/gxfyfkX
T+deeG/mydzvLOfDNtvUn+xhz/CPnI/p4e9Xt8YrZj5yfsDVE5ouPVYxekDO
J53e3/hL6Fdmn/XctYBL18HM7gyv6rlOZk18R31eyMxTz30LmT188IgIlme4
iqy9Y3RDp9PfrwHPKjmYWUv5DzN/PXfTbMMz7eueLJ9wfpuPHPbJLWTmr+cu
htetWl3uxvIJd6Tv75FX+65i1qXjXMuP8WZyd/a84PYmJt7buiWOPS+4tCZW
w2Y8PsaeF5z+Lyutynw1w586rirB9cj+2R0EnhT9aRVd9WEf7GLY84Jbtd3L
s1P8dPa84ED64/RUawv2vODiH9Z0TlNvZM8Lbuaq0D8uLjrPnhdcr15DfsiS
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
ByxOAFI=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
o11nN/8HRECJAA==
            "]], Polygon3DBox[CompressedData["
1:eJwtmgXYFdUWhuef7dnn/KhICAgW2J1XvTbGxe7OyzURWzExECxAQhQQCWmL
kBaQEJAOaZCUkjDAxOR+L99+Ho/M++89c+bsWXutb601de54+OqH8izLWut/
u+jf7qUsu0D/viReUZ5lXcXni18QfyXuJv6P+EXxMvF74nriJuLl4mMraF7Q
9fS3i2OWzSlkWW0d762/TdF4T82/VPyK5q8S9xJfJn5VvFr8u+afJj5P818X
j9V4I/FHGv9HPE78hPhj8Q7xGPHj4g/Ff4sHi+uL3xH/IG6ne5gu/kLX+0I8
UOO3idtr/FvxJ+LbxR3E34kHif8r7ij+XtxDfKG4qXileJvu7wTx6brey+I+
Gr9C/LrG14hXa/w48REanyHeLD5SfJL4JfGHmn9dWu8N4nUaP1h8rMZfEH+k
8evFbTT+jXil7v9N8URxL/FPmv8v8Zma/6p4k/gI8b/ETcTv6/xrxG9o/jrx
KJ1/hvhJcVPxSPHp4idy388Hmn+tuJV4vfgbXe8U8fG63izxRvG/xSeIZ4u3
io8XnyZuJu6t8y8Xv6bzvxb3E98oflO8STxAfKv4bfEW8cfiG8RtxRvFG3S9
k8XH6XozxX01fqW4ucbXpu8/XHyixl9kPcTHig8XTxcfJ3tbr+M9y7KsTlHP
WOP6L6uiv92r8SkC/TnbU3yfuL+uf4v4LV1/s/iPgtfjfI03F28RHyU+OXi9
Omm95ooXiI/Wd2Xic/TPReIWGj9Bf3tf13pMf9uqa/+o80/U8Rkaf0XjHTV/
pXia+FDN/SvZ43ad87nGfyl4P52l8Xni2zXenvUSDxbPEb8oHqL5HcU/aP7Z
4n9r/EvxbRp/m98jHiS+U/wu9i8ekp5XXfGp4rniUvTzuTLYnr/VPT8s7qvr
/yn+XvyIeInGj9H9lmn+uexlcUuN/1rwfj9bPF+8veD9cY54ofi3gv1HXfEC
ca7zzxNfIn6D/aF/99Cz2qi/rdTxWn2qiDeJ1+j4bs3vouN3dTxM8wvR++Wy
YH/DGqzQ8e5lXhueB/Zyof62VGNXiF/Fn4g/EO8oeH9eIF4ivkbjLbAv8Yfi
a8UtxS3EH4mvF7di/4j7iW8Rt8OexQPF/xRs7/XEi8U3p/3ZVjxAfKv4LXE7
8SfiGL2fLw/2j+/osyz4mW7RWt+j8a467qy/DddYMXp/XBHsf3eJ3p+XBvvf
A2TM1dN67aHjvwr2n//R+CKN36X5ncWdxEPFLcUTxGPFk8QH6pwaOv8l/W1f
HffV+H46vlnPf7bm7BDPE2dp/p7iu4S3BPuHQ8RPiu8X/ySuJr5bfGuwP/sn
7Zcdut5EcVXxnVw/2B9VF98jvi3Yv+0lbiD+b7C/YLN+xT/JXy/Uv9+Kv9Nn
kY7/1PyJOv5R1x/P/k2/b5t4nHim5qwRf6/PYh1P0/rspeNqOp6s8b81f4b4
d82fIJ5c2GlCWVWNNyD+CD5nL2t8rHhSwXGxssbvEU8s7FyarBK2Kv5cTPzc
Q3yXeB+d/4D4jmB/t6/4QfGdwfFm/+j9dndwfNlP/JD4ruD4c1DR69VZF90q
/k7XP0t8isbniHeN9qfXBMfPWuL7xf8L9me1o/fvPcHx7+DoeNlQ/KO4UnR8
vCHYv+4eHQ+vDY6/FaPj4XXB/nyP6Hh4fXB8qyG+V3x7sP+eJ24qHqb7PVH+
4qDoeH2fxrcxX7+nJHtrwjPV8fiS7acfi6b5Q0q2ry655+NPThWfq/NfI57o
eofw+zTeiPgRHS/rix8nXooPwn7wwcRX8YHcn/hRcRPxZPFgXa+6vm9AdLy8
W+NPEv/EB2CP4keIn+I62LP4YfRBdDy4V/w08SM6Ht0lfoL11W+qpd/3gfgv
8fkab67xZ/V9ub5vqn5fR/y/xoviaeJ3xNPFJfHAaH1wj/gpnmfRvm15sD9e
qfnjNP6DxvfV/OXiMewH8d7iF3T+F+JBml9NPDd6bw/V+PHiQeKjxQ3Ez6BX
xPuKbxQ/JH5WPF7cnxiq+et0/WkpPh0ofib6+/tpvKp4Vcnz2R/7iXtrfB/s
Q/ygrre+5P31h/ggjW8QzxT/KT5YvFE8W/x37ni4RjxF/Ku4jniteKr4N/EB
4ra6/mLxhODxhuJPxN3Eu4kHR+uR+zX/WX3/p9H6sVFuPXSfeKC4q+bvqvkj
ou3r8dx6Yki0nntA3FjcQDwAe9T8Cpo/LFpvIZKf1/hw8Unih3PrtabR9ztU
8/fS/KHR8f9BjT+n8a9Ltr9fxLU1PkXcNrOei+Lp4k7iGeJy8Uzxe+K5ue/3
cV1vpLivrl8JbV0yb9J4TfFjGv9U3Ie4Kl5Y8vp8nft5Lij596/O/fyWljx/
Y+77XSb+TPytuJZ4nri/eKW4svhtXX+ZeHLw83xHvAr7FR8mnl/yeq3S/CoV
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
A6uChUI=
            "]], Polygon3DBox[CompressedData["
1:eJwt13fcjvUaAPDHi4cX1anEidJpn/ZQacsuRMkqIUKRfUIdK7LKzC6rrMrM
lp2dmexdtpQmbfpen/v94+J3fe/rd9/Pc7+/9Vxdv0WV5hmpVGqDyCnW5U6l
hmVPpXbDj+T106nUNjaFnWZL2GtsO5vKvmdL2etsJevJPmfDWBX2ORvKdrEP
2Qssdy612j+zra5lyovzR8Uy9a+xkZmp1CrtXtrr1A1X/7TrW9lk9h1bzNqx
EuIx8Zlrr7s2St8R8ou0S6jzX2qFL7fa9X6SL9hoVlPNFvE/dlhcnC2VKuKz
HFW3Wp5b7FE3SM1pdlD+lbhQ3b3sgOgiPyK6qqsgP6hukfycZ2xmb7HdbDY7
y9awLmwnm8l+YatYJ7aLzWJn2Gr2Brs2Pp/2y/wb8aOa42Ktdh6xz7Uhataz
kfID+k5lL7ET7HOWV+xnQ9kxtibeudjLBrMdbEb25O8Rf5fObAMbxQ6yafF8
tpGNjnfAprPG7DBbwXKKnWwAO8SWy3OIHaw/+5p9Js8utrN+bA3rL9/ifmPY
s+wrtoxliG2sLzvCVsrTMY7YO+wkWyfPF9+ZDWNfsknyb91vEWvL5omirCG7
mZ00DjapG8eOsjmspZqPxJWsNLuUfaluNLuElWOaqdVsjMal7AlmqKTWsA9Y
AVaZ5Yk5xN5n+VkF5nGptWwc+zd7huWLOcfGs8tZNXYB28hmsltYbXYN+5qN
YhezMhnJPF3ln7GsIHua5WXr2QRWiNVgF7JNbDa7jdVl17HD7EN2BSvJLmFb
2APsfrHYB27j2rvm0WT5f7TLqyugbru6KexqVpEVZDvYI+xhsVTfdq6N0HeS
/Crtx9Vdpm6buo9ZEVaW5Wdb2VR2HavCCrHd7CH2oFjifm1de8/9psmv166q
rrC6Peo+YTeymuxKto/NYP9lz7EibD+bzm5g1dkVbC9bwh5hLdi97Be2OL4H
i0Xxnlij2FyfoSmbwtqyG9R8Ku5lL7Fb2Sl1C9h97GV2G/uW3cxuinr3aOHa
IN8jr4GzLRYl8aX/8snnq7lH3kjfW9g3+o5k/2KlWA62km1xn4nsBJvPWqu5
NcaLmO9ac9cGesZm7fHax9TNVdfC9S/YBHaczWOt2DdsPbsg5jobzm6P8SIW
uNaSD3a/OeHaL+h7vboj8V7YHaweu4EdZXP0eYVNZm3Y9WoWiYdYM1aU/aRu
P+uv/Rnb41p+72ApK6n9KnvQtd9j7LpfEzaJvcqui3VelGZt2cPsT3XLWCnW
hj3E/mB3xucTC92jlWtDfI9Z2o21P85I1tVYXxfGWGNN2d3sR33nqWvGprJ2
7EY1s+JdszrsWnYo5pG652J8svrsklivxFtsMevNqsr3qpvP/mDrWXe2SjzN
3mTlWaZ8tajCurEKLI+8j77XshfZjWyn5w5i97PX2KPsO9abXcPqZ/09Yl4O
ZMVYO/YIO83Ox7xiP7EVrI98rLpnYnyyWjEm2blYC2LPYctZ79gD0sm7/N27
vEv7brFJtI7vxorGOI59Op2sIX9nJvM45vM7nnE3a+1+xdzvuM+ykldgHVnp
mBLy38U0dojNZO3jfep7GauUtebEevouK8O6s4rsbzaClWM9WSV2jq3Qvzzr
wEqxjDiXiBdirrDn2OXyvvrexBqz29lBffuzO1nLrDUixvgAdhdrxe5jx1g/
djNrwu5gB9hg9gB7nRVn37OcuZJxEuNlS+xp8pHqHtfuxSq7dj72ClY15h57
nuX1+aawumwMe4kVZH/HHsdOZe15Ma7+EnPjvMAWsm7yqfrWYx+wJqxwbGie
vSr+llljMs4509TVZ2PZK6xQ7I2sVqzp7EV2KZvM6rDRrBErwP4Un7AjbDbr
KP9DTGeH2SzWIXJ9X2TjWFN2RZw30sla81tmMmdj7k5UV4MNU1dX3UVsNHuS
9WVVWQ42nlWL+c1qswtYdt9tc+xhWfMyh3x9OlmDf81M1rdY5z7Q9yk2QF2N
eCVsAqvOhrI67EL2PqvM+rPqLM0+Zs+zkawBy89GsYqsD3smazyvSyfr8tnM
ZC+IPWGtuiFsp7qJ6uqxMawS68eqsZxsjajJ3mZV2MXRVzzLemc9I9ac9/Qt
y3qwJ9lfxtBX/E02j3VjT8oPie7sU9aDVY49IOYmW8UGseflO9PJWTqbA03J
WFvFjnRyNo9DTpy349y9wnPfYMszkvW8gPe8h3dkM1hH9rh8l2jPprP2rKz8
a9GNzWfdWSX58Vjv2DLWj9WQF0snZ/OTse+JHzzzJBugvVLdQHW15CdiDmdP
9pT4LHG+36f2U/ZnRvIbpwfbzxawv9hG1pMdYAtjvWKbWC+2nP2fLWS9WBl2
UHRlc9mbrGLUiSdYe1aSZZMXzpX8TjgQe3zMT/c6xntrL1XXV111+WHRgy1g
PdlT8qPibbaE9WHV5JP0r81GsYbsMraHzYnxzNayrvF9RWc2i3Vm5eW7RQf2
CevAysl/jjHNtrFxrKn8tBjONrARrEF8Ds8ozGqxq9gXxtX3/F22kY1kDWN/
E53YTNaJPZG1N8QesSh3sj8MNf6Ha5fQ7qKunLpf3W9bOjnjnctMzpBxltye
Ts6R5zOT34Xx+/CHGOdsk76j9G0kH+Z+j7E3WFl21v1+irnEtrKx7BX5EHWP
sk5Z+0yc9b7lg9gaNoTVkZ8RY9kONoE1l58VH7K9bDJ7VT7T/RqxiawFu4qd
EgPZajaY1ZZ/JwaztWwoqyv/JdYdtp2NZ83kv8V6wvZnJL/f4rfLDM9oyCaw
5qwI+zXWY7aPTWFt5EPVFWedWRl2Js7FrAEbz5qxK9X9KEawzRnJ79/4jfgP
BF0xZQ==
            "]], 
           Polygon3DBox[{{1588, 1587, 2284, 988, 989, 2285}, {1746, 884, 993, 
            2287, 1592, 1593}}]},
          Annotation[#, "Charting`Private`Tag$4151#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFmnW4VFUXxu+9zHHPrBEUkFJSSlAEpFuULgUVBARBQRQQVFAUURQVsLAD
uzuwu7u7u7sQARHl+73Pe57n+2OzfrPvmZkz5+yz13rfRbP95o6ZU1VRUfEF
/1QjHh0VFROziooepYqKjsQzK3ldqKi4JlVUXAr3LVZU7MT8WfA+zHeHL4T3
gzvBZ8OT4MfgLnzm/cT2jBXMj2e+JXNlRiUjY34y8zsw3wE+A54AF+BJ8PZw
dXg63BneHJ4Gd4K7wRfAU+Gu8PnwFHhHPrchY3PGu7xuz/yf/LC34Xbwb/B7
+j74L/gDeCd4A/w+3BFeB7+jz4L/gNvw+UvhMcy1hZfBe8A7wCfDe8H7c70W
w2dznc5inA535FptzzHL4T31PZxTR8apvN6M+X2J7ZjfGp4P7wofwnvmwEfx
Gb/zejzcirgV79uSEYwLOL4R86cSt+V10/yaHsPr35i/l+Pr8LomozrjfOb/
Yf484gw+/zP4AGIt/lZkJMZR/O1H5u/kvfPgb+Bb4JPhDfCT8Cn55zwFb+L8
ftY153dfxvw2fMalxE91P5ivRjyI77gY7kNcwtiBYxYROxEbaL3pnHndlriQ
eCSjNXwE8Q/eP4H3tiauZkyEtyPOLvq9M4n7M3owvznxT/62D9ym4HPZmlFg
nMY5tdH1Zr42r7dg/FfpWGL8Cz+te0n8iXt9DsdnVb4+C+DvmV/F3z9hdIEr
iZ9p/cEZ8SvGCLgB8SfGHnAz4puMXnCR+BFjV7gm8UvGcLg+8QvGMLge8UfG
GLipfgfXtDvchWt8IOfxC1xBfIu/9YZLBZ/n51rbHLMI/gS+jvkT4W/h2+BR
8O3wkfBI+DZ4gc4XvhU+Au4HXwEfpM/O/IwfAO8MXwnPhIfAN8GHwYPgG+BD
4D7wZfAMuC98OXwgPBi+ET4U3g1epfUMj4Xvh4+D94LvgxfDe8L3wsfC4+AH
4OPh/fT86J7yGztwT9oz2lR5vXTI+ReOG8gxWxHfYGwHF4ivMVrpuhFf1b4D
/8f9fQVuAW+EX4Kbw+vhF+Ft4bXwC3AzeA38PNwUXl3Nz18FYxOvX2e+NbGK
+CyjMfwrxzxT8LP5M/wc3AT+Hf684HuaiB8zOsObmF+rawQ3Iq7RfYK3IX7P
6K91SuzBNVkJ7w//pusL1yX+zBgA1yb+qnsD1yF+rXsDl4nf6N7oGSF+p/sK
1yCuY+wONyb+p3sDtyRu1P2AmxP/1X2CWxC/1VqBqxP/0tqCGxIP49y+hm+G
D4W/gm/SPgZ/Cd8IV8Gz4O7wlvBR8CC4Aj4I7gpv0P2GOxD/ZkyF2xP/0d6q
vZRYg+MXwAPgLeAj4YFwET5EuQmuBs+Ge8Al+FC4H1yG58H94YAPg3fWPsY4
UM8asZL5mXA3nUvJ1/xq1l495o+HRzJfFz4OHgHXh5fAo7TXwR/CV8EN4BPg
3eA6mfPCcLgWfDQ8ROsUPg+eDNeEF8KDtUfBi+Ch8Jl897HwUp6DKzLv8RcS
T08+ZhLneHfmffQs4oGMD5i/UvsQ/Ax8GjweflG5SWsKvgteCB9Mru/F6+35
nF2IdzN/tPYq+B54EXwC330zfCLxUI4fqnzO8afBR8DD4Avhk+Cx8H/wdOVv
ju8D/6B7CHeHP4TXwsfDMzimH8cfCe8Nd4WP5m+3w98xN5P4ka4/7zmO+Uu0
JxC7MH8tPJv5CfBL8DnaR+GH4BO0ruEn4ZO1p8JPK1fCo+Gn4FO0puB34EsK
rndehs/VfYffhi+Gp/N9Z/P6Y85nOPFhXQfm94XfgC+Ep8Bvwiu1ZuG34Iv0
fMPXwLPgWfoM+BrtDXl9cpq+O3O8WPsl4xj4Bj0fRe9tQ4p+rfnrs//nLeWs
YQWvjTOZ3yoza+7azPVDbz2bRb/3DK2jovdwfea+Ja+X6mXuLfEi5m/V+eZr
72piC76neZXfXy/Pmw3hdlWusVRf1a1yDVEjrzU2q3LuXMj7f+LYuziH5fDf
8BPwkfAP8B3wXPgL/V54Tp7Lrtd6g/+CH4aXwuvgx+CjM9cbd8OL4T/g+7U2
4NXwA/Dx8J/wg/ASeA38ELwMXg8/rmsG/w7fp7wBXw/PLTifKK+oXmmY/0Y9
V5O5Vmfo2eNaTYUvhzcvu66qmf/eyGsz5YXG+fyvlX5em+a1rq5Tk7zeUg2j
+Q55LdMw/y7FRvm11Wc0zq/plXxnsyp/97iCa8tHM1/3Wnn91j7PiTr/Jvn8
xkqfl2rHtvBtmf++itgz83M9j8+bVvDz9XDmekz3WDWbrkG7/NxW5e/V83AV
42C4l+5d0WtYv0XfVT/PkVov9fIaS7+lTn5NauXrRudWP79ubfN1XTtfYxt4
3vbhO8bzmQOI1zE3h++aDb8Cnw/34tjeVT7v6QXXLQ/y9+75fLcq15s9GNsz
+jL6Vfna7V2wHrkvs07pWeXrOTQ5/9bje2cmP0etiq4le+b15EHJv70l84ck
1+2ttTfCh8PbFa179F2dGY9kPgdd23sy1/4XEXsn5+IttU8m5/qa8M7JOb0W
3Cs5524B90+uc2qrJkrWJlWqnZN1TaXuW+brofvZL//NnfNz6ZL/du33txDn
F3yduufXUNwrv25LkvVOWz7zOPhEuA28NFn7bA8vT9Y1O8DfwK8rL/N8/BGu
F5Ujvk3eGwfBPyTvt0Phr5P3z4HwZ8l7+C7wp8l5qj/8efKevCu8Nrmu2ANe
l1xv7An/DL+v3ApX45k8PM9HykvfMX+7ap7kPXkw8wPgIXBdzvn75H1+CPMT
k7VYM+ZHJ9c8DeE94HF6puExyTVSI/hwxnV8x9781mHJtVB95nZPrp22gYcn
13UN4BHJtdbW8IRkzdsUHp+sc5vA+8EHwC3gKck6d1t4arL+bQ53S66H18Dr
kzXaXsrdybXfVsz3TK73ahRdu6iG6QVfCp8Dd9NznXldaP1fkayduzN/VbKW
7wlfmayve0jDJev6rvC2vKcP732ceGeyjhjK/MpkT6ALfG2yLugHn5es6zvB
FyT7CZ3hu5L1yDD47mSdMhy+J1kvjIBXJD8v7eF74TvgkfDDydphN/iRZE2x
O/xosnYYDT+UrClGwU/Cj8Bj4KfgR7WW4JfgZ+Gx8Mvwc/A4+BX4ee0T8DPw
47rO8NPwY1p78KpkjTNYNUuyJhqkdZGsg3aGb0vOLwOleZN1caloXSctUIY7
J2vJ0D4KnwLvWLRuVT45ndgxWS8keS/JOrQIn5LsP7STDk6u+avD7ZM9jc10
r5M9jUz6O9kPqaa9ItkDKcDTiq4jprGed03WF3WY+ylZS06Bv0zWmJPhG+Gr
9GzCbybvydqrb0jWjLvAtybv2wPg65M1Zn9pWPhVeELRfoXyp7TsNWE99ifz
H3HMuxyzD/wx/F6l68m34dfgifDqZF08VfeO93WC/0FPfcX8p/C+0s3J9fCI
kuvTtfCj0i/J2mQM8/PgGdqH4cOStUBNeHCy1t7A5zwQ1mOqY1XPjtYzq/oh
WeP/rdoquZ5vU3J9pZpqMfP3M3+19knmbobPVY6A70uuD9uVXO/dwvl9y/c8
kFzf7sj8SHgXeCN/H5XsIfwLD4J7wuvhWfAUeHOOfy7sK5Xh6cn+SRGenayn
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
            "]], Polygon3DBox[CompressedData["
1:eJwtmnXAFdUWxe/9vnOYM4OE3QEWEiotiAIqKSINgkhjoGCAYqDSGIgKBgZ2
JyrmE7vzGc/u7kTE4q2fa/4433fW7Jm5c+fss/faa99GY6cMmFxTqVRu1p+g
/6lupTJUk82EJ6VK5apYqWyr+XYaV2u+UqNjje2cd3H0fHONSzS/VGMdzbfU
WKb5Ecl2zltH9z5BuFa4hcYMzQ/T2FTzi2SvK/sw4aerlcoi3fv3olIZlVUq
g4T/En5UuI7+Fzp/rY6dyT2T5xUdG6f5URpVzc+SLdP9co0VuuY7nXOIbCdp
BNnbacwqP5/zt9E4XPPjNJpofqOuL3TtedxHOGmcr/lE2aPmdTQO1vxYjZoa
XzNd8/F6xrN13sn6vLP17McJz9Dn3y38rPCDGjdo3kPn/Chbb11zq/CxOucr
4X2FbxM+Tvhr4UN1/kHCUec/KbxA9j30WY2F19fzHSL7SNmD8BOy95H9duHp
uv4b4V7CtwhPE/5SuLPObyP8rvDtwgOEewj/IPyg8GjhwcJ/Cz8mvEr4J+FT
dP/FwlOExwuvI/y08HDh/YV/0/kPCw8T3k/4V+GVhd85729J9FocpWPHyHaT
znlI5x6g0VfzVTr2kGxHahyh+bU6dr9sYzSGaP6Pjj0u22SNSZpfrWP3yDZF
+HDha4TvEz5Dn/O35rk+84LS5y7T/0Y19sVJ5Xo1ivb1RzO///2Ef9G9Hsn8
vvoI/1z4HQ/T/fes8bt/LPP69JX9V9mfF75XeEi0v66n8/fV+afo2Li8UnlH
9qc0nyD7P7LvmuxrjTUma/627E/KPp7nlv3xzOu3v/Aq4aM1pup+N+vYw7I9
p3GP5oNlXy3bT8LvCZ8kHPTZi4Tr6t7baxyt+3fSaKl5K41TNG+gcybofrsL
zxVuq3usqdX+1j12xTcKv8MthZsIH1PYd3gnvBt8GF8epHN+k203jT91fWsd
21O2VzUe0vwg2f+S7W5dW6/Ge2aGjr0i+0rZR2r+p+z/0f8OsjXXGB/8TG00
3zn6WafqnBN0/E5d86Su3SM5dhBjDk3e48Ql4hN7f8fce/s+HWsoW29du6Pw
DhoblDFmUfSeZ+930T3b6t7v6bzl5fqcWXVMIh7U0fmZbLvp2IG6d1ONZrI9
oHusK9s0XXOi7HfJ/jS+o+NNZd9J46boeAfmeD2df3v0d+Uet2o+RNeeUfUa
3SF8XfSz8szXl/F2oexthR+KjpM8W2uNFZrfr9G+xuvJuvI+L9H5uwk/qPl/
iTk8u+Z/6Fn3zvxdPuSZhXcX3lX4DdZYeD8973Lh44W/FV4m+zzhnXT9m8Jj
NXrKdqKOncH+1fkvaH5e8P2HC78ofH7w+g7R6KD54cQ0nb+G+Bgc418QPl5j
RtU55khdO6zwOvEOpglfGMv9qnF5tD9fxN7SPerrfe6n83fWfLSOTdK9Rsj+
kuYXBPvfKTo2VXgzXfu8cDfZrxOeLPsnwrdnvh9r9bnw5cLzhZsKvyW8T3Is
IiZ9TPxLflby4rPszeRnZd2eE16p62/U+T2Ffyr8fa7VfIqOnSDbAOG2utch
wkcLv5v5XUzUOWtl6yL/ekb4XJ0zS7i78CvCFwkvEO4h/KrwxcKnsRbCrwlf
Inw68V74deFL8SueX/hl4QuF57EWwv8Rnssa8j6E/yu8VHi+cHvh+4VnCx/P
/hZ+QHiO8AnCewg/Tu4lxpFvhN8SvlL4LOFn8LHgd34k/iG8p/CRwicKd9L5
j+E7OnYyNuEnhBcKn0r+E35T+Arhhfin8KPCpwvPEO4q/KzwYuHZwh2FHxE+
TfgkPlv4+dIf5wrvJfyc8BLhOdi1XlcKHyb8kfAVeqYFws30/t/mfNmvED5U
9g95fxpba96fPaRze2t01vxzHbuH5xXuIvyF8L3C+yfH55OFv2d9iFnCnwqv
KPxOJgjXi35XvYT3FP4MjiDcX9ffJ3xqMD/omxxv4RDfsf7J/OFI4c+E++n6
bsLfCT8ATs5Hpwj/wPrJ3kL4NeEbC8egc6I5GLGpk+wtZX9T9lt5fuF9hL8V
vh9/Ed5Z+HVyNu9HuL3wB8Rk3r/wLsL/I0fx/MLdhb8nFpHLC8eoS3VsuWw3
a5yvebvo/XSb8FLhDtHf5xbhC4TbR+/PrnrGy+Fuut8H5AvZrxfuHv39TpZ9
F32X5cJfCD+QeX93i37/KzKvZ5foeMYz8CydovnQXZnv3zmaL90pfBm5LJp/
3SG8THiPaH62h0ZDPctecIbMHIX4sE/0+lwpfJpwc+F32PvCZxPfo5//OuFz
hFtF+9f1wucKt472x2uEF5GLhd8nHiQ/z8HBmJxH7lsq+7vwueTnmyj7e8K3
6voLif+yfyp8tfBZwrtE27sKtxN+X+ffUTiGEktZg7HaKx9njt9HkCPrOt9e
XHUOg69/IPvb7I/o/fcRMYzYG73f3s8cDw6Jjl/vZd7PBwvPLHwOe5OcwbVv
ZY5fY6PjCXyI+DUuOh68kTn+jY7e/69njlejovf7m5nj4ZjoePKj8DfEWuGz
hZsLb0Nu1mdeUfiZiK3EEJ61tcaOmr+sY9cX5jxwnyeElxWOGcQOYsqHmb8z
sYeYwrtoodFI82d07EpykXBj4WeFrxJuJry18FPClws3Fd4KLiN8mXAr4R2E
XxK+rvBnvEN8iv7sH4S/Jh8LLyocg4nFxPCXM8doYjUx+qXM74hYSYzl3fFO
idXEWN71meS44DX5NnMOIBfAEeAK7TR21/wVHWtXmBPC7Z4P5oq8c2ItMZm1
+EXjh6q53WL2oPDHxKfofPWp8Ifk2+j8w5oS6+G8rPV3Gl/CDaLjPc/0hfCx
0c/6ufBHwlOi89P3wl8JT4/ON18LfyZ8THS+4zPIdfgIn/2lxieaHxWdL78S
/pTcG50v+X5w3xeoIYRbCm8v/CI1SGF+/S25S+efU5iD8t37RXNT+DDvdmB0
rcea4BvDo9eKNcHXDoheKzgia9M/mjt21lgvOOYSe5/JnF8HyH4s+VFjXdn3
1rG+st0m3EC4KzGJtRLOhTsJ92DvZuYPw3T9dPa/xh/i562IAZk5PL6zbzS3
p6bAd3pH1xrUZOT/XtG1WieNIjiHkcvwiW90v+ZV+0p74e9qnWPINdRkcPWu
0bUa8XGF8N7RtR01Glx5r+jaraNGCva5bpn55nmaN5H9MNnuja7XO5b8dzU+
J/tMzc+T/XfhX4VnCZ8vvEZ4lfBs4QuE/xL+XXg+3Fn4N+Gfya/CSwrXaw9H
19TzFN9+lf1H8reOnSv7WuE/hU8nhwn/DYcVXiB8sfA/wn8InwbvFv5TeLXw
POGlvHvh34TnCl9YuG6A+3co+XkH7lnrmpzanHNuC94DXNssN78nh5JLl5Xv
m/ffpMyn1L5tZT+88B4mVo2I3tvE3HOCfYJYfGPm2rmN7JMKx0y4GD5HLO2Z
XLuQU8mtrCm+9WrwWrOn4aLEXPb6II0DNP9Rx7rINlR4hPDP5MjCn3FQ8Jry
2RM1DtO8qs/vjT9obCV7Px3rk9nHB2j+dbDvsycGCn8TvFfIuXCxr4JzMTl/
eflOT9TzDpF9uOw/sUcK6yPUHrU6p4/wdOGThNcXHlp4j50U7KPsvYM1Jmle
I/u+2IVPEF5XeHBhDkttv2E0t6WmoRZaL7rWOVl4lvAmwgcWrj9mC28qPJLP
Ej5VeCPh4cIzhGcKbyw8Qniq8HThBsIDC+spBwr/QgwonPOXlntiQnL8+5/s
U6mT5MsTeUfB9zw/sx7VqKyhxuv8CcJ9gp9hCd9XuG/wM18ofAjvPPiZL8oc
Q2YFxwRiCzmb3H247lnR5+2c2/+oj9jfE2Q/VLgiey/he6LrefQTdJQ2sjch
12h+g+zjMtdCa4V7Ft7z/YNrTmIBPj0qmDPi69RoN0dzYGo39MFxmv+pc3rI
NlJ4jPAa4W74nvBY9pJw98Icnlrx92Buf6hGP2oDHbskcw1JrZZF15bjNHoF
+8xCnidzLZNk71s4Bt0UnFOITegO6A+sz71lTLgzmJMQK35O1qfQWNBaqCGp
Jbk/vklMujE4ZxGrHhFuITyKPS28ZzJ/pdZHH5mZXO+3iNY70OhuCM7BaHfE
rLuCcxixDI0G7vp2sHZDzLw5OIcSS4mZtwh/XnUsJWdSa8LRyKUVfV79Gmt6
aHvE7N6yfRQcy4mxy4NzNLGXGHh7cI4nNhIz7wjmNMRSYh657Z3gWHh3tFaF
JrKijMHXB3MAYjN2tA/ql7ui9chjZKuref/CnO/qYE4KFyRnXxOskZHLyWF9
NP8kOLfBIahd4bRwC2ry4zSvH12rTxM+Xrih8CDhI4SPEs6F9xeezDXChXC/
wjl4X+GPg3MzehbaDGt0quZPkVNlmyx8WGZNkb2BxjM/WUNAS0ATQRuZk6yV
dozWm1ol83n2EtoknIdanxhALIDToAXAoeE6cMargjklXBKORW0NR4d7kfPQ
qtEsyYVwLLQAODfcC025Y3AMJZZ2T66/pgTXF3AQuMVbwdyEPbFL8B5krxBz
mwZr1FyPpjK63M9oLfQLNi/3C3GNGLBDcE4hNmydO/6iOaE9EZN3Co6JxOoi
95zP4LPg2D/VumaFe7Nm7YNzDmvZPLneH6hjL8m2s/DpwoPhjIU1mMs0f6Nq
baZZsh40QMdelK2JPm9J1TmN3NY0OVYRs17g2ZJjCTEFvYkYuGNwTiI20hOh
N4LGSL+koe53cNWaEP6G5jy35PdwtfVyx1O+w7/+l6yF1ZT9mQ1y5ys0NvIP
mgHaARoAvYatcvtvD9aksMY9r+T7aN9oVDODNQe0K2qSH0o+R62yTu54yZqy
tuvnfpe7BedDcniT4JxPbl83dzxvF5y/GuSOz62C92f93PG4ZfB+QWNoHJzj
yfU7afxTdYwcq+9XL7cv7Rq83+iB7K75EVX3RjiGjXuyN9EctgvuYaBFrErm
SnAm+As1+djgGplaHY6wSfCehTvAWTYNjhFwmZR77fiOfNc893fFB/HFLLev
ssas9W7Jvk3OQi+lZ8V35x2Qq9rLvljzkfhY4Z5Hs3J/0AtZWe4XfJrc3zH5
WccE61PtkvWCA9nzhXsuzYN7RPRifpW9WdUcHa6+Orl+g2MSX3fQ884t/ZVc
S89n++AeC70gNK0tgnsyaF27JMdidOpXyEXJ+sYg4ZeFt8nNf8iR5MqdcnM9
vj+5mxhGrLsmOraR41i7K6NzX49y/QeV7weOs1lwD4nvT8+nTbBmRi+oUW7+
BYeBy6CZbV6ej5a2fW7uwv4jt2+Xm9vAaeA22+bmRnAeuE/j3FwIzgR3QkPb
tnwetDU0vS2De1xofSvK58M/yCWb6/pjNd+HNSjMwW4p8ynxeIvc+aQbORwu
o/f3vvC1wfrKgOS9yJ5n7x+UnKvIWfAr+g8Lo3uc9DoHazys+YLg/hA5mlw9
R+dEnXtMci+E/EH/B80HbQjOgBbEOQ8G10hciwaF1okGhjaFJk8sGBqt1X+T
ORZOQzOs63FryQ+woWmhzaFRoXWFst/6bZlvByb3e4g5xJ5Byf2h+cH9M/YI
voLPwPfQ7NHu0aDoJdFTQC+ipqG2QYOjV0o/Cm0ODY/+FP0xtD00O3qn9PTQ
8tAY4aZwVPgje4i9hMaI9ovmhhaMRogWhwZI75Qe311l/qWXQg02O/n90lur
lv2mMcm9Zb5zKPkYvRo4L/keTROtlpyJ1gl/PzdaU0PLI4eSS9Es0e7QPOlN
oCmihY5Oftf4FL5FvXNbdI+B+gw+TO+Cmu345Bps42BORm1Gv/oD1jZYn7ki
uvdYt+ynoFmiLVP/UKujmaJdozmjpW6Umw+j4VPv4JPXlPyKWqBlMnfhtwD0
U/FJfJM1ppfJGrPW+AC9U3og8A16PPRG2APXlvwM7XHj3Py6c3B9tGFu7gEH
oV7bMnd91F14dOEeE70mahJ6i5vl5oN7Bddbm+bmZ12D67GRubk2PUN6h5vk
5nNdgusvNGW0czR8tOa2yXrtCDhV4R7tpSW/Qr9iT3aoukfIXoWDUwPgA/jC
gcncjGu4Fg6HBoBP4Vujc+8V/If+ODmV3EpOp/ZE80X7ReNFG+Y3Cfw2gfWj
10vtS62OP9FPRM+9M7qfSK8MzZteHj1ltHB61Py2gp40vWt6yGcF63H0lrkn
seOG6M+if85vN+ArY3L3fNHv0LzQvuhpLwv+jvS66S/Q66SnNip3v5WeJTnk
IOE2yXr4cF3zmq7tkLwX4YRwwwNy1w7UCNQKxFRiKzF0ZuYcRC6Cs50Jv9H1
Q6vOYeQyOBpcDU42C39I1haI4cTyjZNzBTGcWI7mgJb2ZbAWsUly7iOnkFu2
TM6NcAq4RRPhaVX3uOjfNEjuB60T3P8gxhPr8dG55IfkXEKOg+tsJNxTeKPg
/is+3bHkM+TGLZK5CzmIXLRjci8Nf+b3FvWT+0V1g/sxmybnJnI2ubtRcq0I
J4Ab9Mutv1JDUUv1z11LUSNSK8KB4cJw3Hn6/OG5azNqVmrXusn94hhcr6fk
fvnaWuujcAC4AJx6QWYODLeAY8wRHpC7FqWmpbYdlLtWpuak9twmmbvAgeBC
Q3NrX9SM1I4Dc9fC1NjU2lsncyU4ElxpRO7amhqXWndw7txLvKSWHZa79qQm
pTbNkrU2+BB6b71kbRONk/7Yusn+UD+4HwaHh0vAKdBydk9lrySYS+6auz7j
Nxrop/g0vk0P5zziR+7YSoxFH94hmQ/BYeGy1ICsV53o2rBl7lxGTkOfJWYR
u4hpaEvEKGIVMQ3tCI4N16ZGQDtqkVvf4zcx6Kv4zF7l9dTKzWW/qurf0KDP
EmOJtcRAtKkhybGAPc5eH5ocK4gRxIqGyf3OesG/F3iVPRtcky7W9a1z67/8
JgJ9e/3k/uT6wb+vWC9Z60bz5vdH++fOJeQUavUNkvuHGwT3p+C4cF1i8FLd
f2QyHyHmEHs2TP790obB/cg2ufVlND20PXIEuYIaaH7mGohaiJryNPhi8t5j
D1LrttL1d1T9mxP0/b65a2c0BbSFkeX7nFr6AxweLg8nv1h4v9xaAjU3tTc5
g9xBzLtA9jy5/1YN7vcQy5uU9Ry/ddhO9olVc164Lz2k1bXu0dJb+l32jlVr
5ugta5K1c3oA6A30oFbV+jcd9Kboef1S6x4tvbA/kvVc/B39I+TWWxsF62Os
KWtLTOO3IawRa4VGg1ZDjCPWEYPo/TZO/j0YNQ61Dnvq7/L3QPRW2EPsJXyG
XjN77N/Prlpb/kfX96qas8Bd6uh5hlWtAaAFxNy1IfGTWoGYR+xjz9Kbrubm
4sRzagd8DF/Dx/htDz6EL+GD9D7xEXwFH6OXTQwmFuND/DaGGpXvMr7cL2uT
uRQ1IrUiNSu1K/Uc2k8ld+1IzUjt+Hfyu+KdoVfX5tartwnWI4mhxFJ66Gih
NclaBTU3tTeaPvXq48H6YG3y2qFpoG0Qc9eW/QJ6Vf/21Fmrsj+ARki+Wx2s
HVaTa3nqX3oHMdmX8BF8pUh+ltrg/mdI9h18Bt9pnRzL2OPs9TrJeg8+iW/S
U9pW+LngXhM+jW+TI+htoqmgrVAzns65ybVc6+DfF+Jz+B5rjFbLO+Jd4ZNo
uX8l65X0wOgH8Iw8K3uI3i33aF2uF79d/D8Bp2ow
            "]], Polygon3DBox[CompressedData["
1:eJwt13W4FdUWAPAD3OsNVGxASRGQ7pLu7u4LSiOlAgKPVEKxUUB9KshTER+i
8p5gNyYgoIjY3Shdgr/1zfljfd+s36y1Z845M3vvU3r4xB4T8qdSqT0iUwzK
TqWucnBrRiq1JV8qtTcrlbqcncVqs5FsMhvMRrDb2NvsM1aVlWTDc1Opm+VL
xQXsCzUFRD11LVifnFTqBnXr2ZNihfrK6oqzPMeL1CwWF7MfnT9bNNfbiZVm
h+XFRTc2kF3KTsrLiN4sj9V1jb7Gm8fmi+nGLazuO8cFRRN17dWdzz6X5xN1
WXNWkH0ozxAVWB1WjZUy3pXGuUV+qzjM9qg5XiCVOiHqO1eU/cDOEs30dlRX
hH0vP1M0ZR3Yeewz+Wl9dVgzVoWVcI1hxlkiv0lcxL5SlyUaqGvFyrC/5ZeJ
PmxY/EY+b22949jDbB0rqy6DVWJD2Jj4jdS1ZLPYRraZVVR3CRviuvPk80VT
dSPZ7eruEPOcG6ruarZcvk3vt+qKsz/kF4q2rAc7l30iP+Kz1WSN4/szXju9
U/g1YrLxarJubIn8VXVb1J2jd7f8kN4arBE7i+1i+1hV1iA9XvvM5LeN3/gv
43Vg17EH5Q+JpawG68hukD+v9xW91VkHtoA9x15mhVzjY/kB16jOGrIhbLy6
e/hW9g0rxQ7Ji4mubAA7m30U96C3GruCVWLF9A51DzfKF4p+rA+bq3azug9Y
PffSn93J3mFbWW3Wg93MXmdvszqsJ1vK3mDvsMuMd0peVvRlw9mF7Et5pqjP
WsZzpbeF3pnsGfYsK6cuk1VmQ9lYdgn7TX6+aM26scp6m6ubwZ5mm1gt1p3d
xF5jb7EBegezRexltjP9DvbLTJ6feI6O5SbvUrxTS/ktYpCaCnovdtxSzXXO
zVVTnw9gd7F32TbWgA1ky9h7bDs7oPc9+VHf/bF4l1xjIBuibjF/Rd0udeXZ
mawWG8Emsf5sEFvIXmI7WEl2UH6J6ML6s1mssklyQ/xOYoS8gnup43i8ujXq
Hk/fy/sZyVwQc8KaeCZZY3Wj+IPqnlHXljWIuYTdyzawLPaB/KS+sqwGa88a
qRvJH2BPs46sCRsdzzjbyDqzZmwsW83+zw6yHfJscQWrxzqxpurGsFXsf+wM
n+O0vI4Yxa5i2eq2yk+5l3KsJuvCWumdwB9lz6fnv0/l54hCMZf7vE1YVXXP
xhqibo26k+wX50uJ7qwzO8L2ys8VLVgTdp+4N+Yt91Re/+54f9WVdnyV49ud
u0N0Za3ZRL2P6X2BZeg5Lq8uhrHBLMX2yy8XA1gfdlrvX/Lyoj/rxU6xP+Xl
RD/Wm51gP8tLihLxvrp+pvFOOK4hhqsboq4AOyavJvLYIJafHZVXFVVibtOb
jx2I9UQMVNdXXTfXaONzTGJr2YusO2vLJrPH2UvsENspzxENWV3Wm3VVdz17
ir3JjrFv5EVEB9aaHWffyouKjqwtO8q+lhcW7VkblsO2yVPx3bBa6Tkr5q7i
OcnavC03WZdjfS6Rk6xV21kRx4Udd9Y7V++smMfZ2awVm8quibWMXcg6stls
BrtbLIs13LnLnNtlvOXye2KdY2XZR+wu+Z2x/rMybCcr5Lig4+bGm2K8Cc7n
sgKsARvHRsU+ghVlXdl8NjuecZaP1WNj2IiYx1kuaxbrE7uaFWYXsU5sDpsZ
6xHLYU3ZJDY+vj+Wn9VnY9lIVpQVYV1ijWL/YmeybNaETWTjYs5m57P2bCab
Fvsmdh5rx2awqbGuskKsNZvGpsSz5nd7S/6Hd7Ukq5Rev2MdL5aTrEFbfVc3
yBfEHJ+TrPUfsKycZNNXV/9ovVem9xyx9yiZk+zlPlR3hmu8q+awa5RRV835
TPYOO8guZVVZDz1z9WyOtZAdivdD3Rb5n+pKscrxrrK32X5WmlWJ/ZDec/S2
4dPZtbE3Y+eytux6dl1WsqeMvWWpnGQ/tsP9rZSviPWQlWMfs2Ku8bu+C0Qb
vd3Tc0fMIQtjTjafL4r9ltin5iLRTl1P5+ewms5vjLUr1nDj/s1+VVNa9FDX
Jd5VPsf5TfH52EHWjI1mq9gn7PP0XmpUZrInib3JaffXko1ja+R71X0V8zi7
nj3NfmZ/sBZxL7FOsjvZY7E2xvrDerBF7CHWXO8YtprtYV+wJuxKdj/bxfaw
hiyPrWQfso9iXWDT2VPsJ/Z7XJeNZQ+zT9mX6Tnxp/RcH3N+Y5/j4XhmYm1S
+0zs/XOS+e9Iet6M+bOVukZsmPP3yneo362vMRvO7mM72Sext8hO3u8Rucm8
EPNDF3UzYnx1v6jbx9plJ/NjzJNPxDwoz1O3zPHd4oRzp9UN47Pkj6j7gu1n
fVlvNodtYu/HvMG2y/PHesFqszx2rboH2G72K7vCNYayFWw7+5gVZGdkJnN9
zPmd3Xsfvb3YbPmz6t6L7z72Eax3RvKdxXfXktVig9ldbG38lqwGG8juYI/G
mucaM9lG9iv7M541ddXZAHY7eyT2SKwi68kWs1Vxz6wS68WWsNXxTLJqrD+7
jf2H9XSNeey5eDfZYVY7O5mXR+Ymc3LMzXWyk3l5VG7y3sX7N4Fd6p1ZFfvv
+A9jrF6si+PpxttgvDfUleOXx38Ntow9GNdV15lNiz0Ee521UTeJrWVfsx9Y
P7aIvcKOsBPxW7KF7OWYn9hx1p8tZq+yo+wkG8huYq+z4+xUrKFsAXsh5jF2
NNZkNjv2L2wfOxDzmvvrxKay9ew11kvdfPY8O8COsP3q3ojfx7xWKfbj8gHq
lqh7jR9jf2cl/39vZC+xF0VmQXNwdjJ3jc5N9kCxF8rH3nT+N+OV0FuRVdLb
UN21fB1boKYjm8Y2sB/Zb+pa8bosjy1n/2Wt1U1kj7Gv2HdZyX+mqZnJ//D4
P17AvUzVW95v2SGeq9h7yaeJtdGbmZybLq+XnezTxrjn+431b1HeeFWiJyPZ
M8+PvVrUxjPBVrju+vh9Wf2YL9hK9mTcs94J7FH2JfuetWWT2ePsG/Yja8+u
YU+w79jP6XcwizVmjcQW9zTRNVazhvIJseeXt1M3ha1j37Kf9P4DPS4Fqg==

            "]], 
           Polygon3DBox[{{2098, 1314, 1472, 2403, 1938, 1939}, {2346, 1338, 
            1139, 1138, 1455, 2171}, {1934, 1933, 2397, 1422, 1423, 2398}, {
            2164, 1445, 1084, 1085, 1446, 2165}}]},
          Annotation[#, "Charting`Private`Tag$4151#2"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[
           0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
          "Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rlKXVEUBuDl9Q4O96ptCCTYCTE+gRZRRMI1RA0iaiGx0+KaUguxSKGF
tYH0+gTmBUweQBLHOCNWDgFtjAP4bRDOz7c2B9Zee5/TPD41UKmKiK/yIKm+
lVNZy0U0cZ2vecQ2XrGDj+xlMR8xypec5Bu2yoy6mwsc4Dd+5gq/8Afn+It1
hYhzVhvgD+/kOs1THbHBDDfTe24xy23muMM8d1ngX9Zwj7XcT/15wHoeppl5
xBKPucXL1Nf+J7yXG/luvt9c5E/OcpUVLnOMS+zjPLvYKdPqFk7wBUfSDCyn
3u6tnRd8ywO+Smd0B2fpXqVR/ss/Gc5ENHCIJQ6yyE+sZz/r+JG1/MAalqll
vKeto4e59E2YTbPSseMdPbFtcfX8HzwBuEQ9PA==
        "]]}, 
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0j1PU2EYBuDHWrGa4IIgg7ZWRQV+ANGZGF0lBuZq6CYxRmcS7C+QyAIh
0ckw6VC/+NQQRxgIow7GDWoppbbaNF4nDneu517O8573nHxh6u7DYxFRknOp
iPNKDzscPBkxzBHe5C3e4T1O8AGLfMynnOEzKZkXOcslvuJ7vuVXbnCX2/zJ
7yxmIrrszUpF72W3lNMRv/R3rCbP4QE/sMaPPOQn1rnMI65wVRrmNf7mOpvc
YIuf+Ydf+JcvTkRk7MxJW+/jGQln29drzvqNP7jFHa5zk29Y5ku+5nMucD65
E/M0n/ARJ1ngOMd4m6O8wft2hZ39MqSf5WnpcsZBPc3rTPFa8uF4lZ3jEQNs
8wpbbMplc4OXWGc+eQ9eZJU5VpjlHi9wzj2cSv3/H/4BZjxJtg==
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1474, 1793, 782, 1473, 2404, 1691, 1475, 2405, 1692, 1476, 
        2406, 1693, 1477, 2407, 1694, 1478, 2408, 1695, 1479, 2409, 1696, 
        1480, 2185, 2502, 1481, 2410, 1697, 1482, 2411, 1698, 1483, 2412, 
        1699, 1484, 2413, 1700, 1485, 2414, 1701, 1486, 974, 1702, 1794}], 
       Line3DBox[{1488, 2186, 2503, 1487, 2415, 1703, 1489, 2416, 1704, 1490, 
        2417, 1705, 1491, 2418, 1706, 1492, 2419, 1707, 1493, 2420, 1708, 
        1494, 2187, 2504, 1495, 2188, 2505, 1496, 2421, 1709, 1497, 2422, 
        1710, 1498, 2423, 1711, 1499, 2424, 1712, 1500, 2425, 1713, 1501}], 
       Line3DBox[{1503, 2189, 2506, 1502, 2190, 2507, 1504, 2426, 1714, 1505, 
        2427, 1715, 1506, 2428, 1716, 1507, 2429, 1717, 1508, 2430, 1718, 
        1509, 2191, 2508, 1510, 2192, 2509, 1511, 2193, 2510, 1512, 2431, 
        1719, 1513, 2432, 1720, 1514, 2433, 1721, 1515, 2434, 1722, 1516}], 
       Line3DBox[{1518, 2194, 2511, 1517, 2195, 2512, 1519, 2196, 2513, 1520, 
        2435, 1723, 1521, 2436, 1724, 1522, 2437, 1725, 1523, 2438, 1726, 
        1524, 2197, 2514, 1525, 2198, 2515, 1526, 2199, 2516, 1527, 2200, 
        2517, 1528, 2439, 1727, 1529, 2440, 1728, 1530, 2441, 1729, 1531}], 
       Line3DBox[{1533, 2201, 2518, 1532, 2202, 2519, 1534, 2203, 2520, 1535, 
        2204, 2521, 1536, 2442, 1730, 1537, 2443, 1731, 1538, 2444, 1732, 
        1539, 2205, 2522, 1540, 2206, 2523, 1541, 2207, 2524, 1542, 2208, 
        2525, 1543, 2209, 2526, 1544, 2445, 1733, 1545, 2446, 1734, 1546}], 
       Line3DBox[{1548, 2210, 2527, 1547, 2211, 2528, 1549, 2212, 2529, 1550, 
        2213, 2530, 1551, 2214, 2531, 1552, 2447, 1735, 1553, 2448, 1736, 
        1554, 2215, 2532, 1555, 2216, 2533, 1556, 2217, 2534, 1557, 2218, 
        2535, 1558, 2219, 2536, 1559, 2220, 2537, 1560, 2449, 1737, 1561}], 
       Line3DBox[{1563, 2221, 2538, 1562, 2222, 2539, 1564, 2223, 2540, 1565, 
        2224, 2541, 1566, 2225, 2542, 1567, 2226, 2543, 1568, 2602, 1795, 
        1796, 1569, 1797, 1798, 2603, 1570, 1828, 2544, 2289, 1571, 2227, 
        2545, 1572, 2228, 2546, 1573, 2229, 2547, 1574, 2230, 2548, 1575, 
        2231, 2549, 1576}], 
       Line3DBox[{1580, 2450, 1738, 1578, 2451, 1739, 1582, 2452, 1740, 1584, 
        2453, 1741, 1586, 2454, 1742, 1588, 2285, 2455, 1743, 1819, 2283, 
        2456, 1813, 1816, 1744, 1805, 1799, 1815, 1823, 2609, 1745, 1822, 
        1821, 1827, 2611, 1746, 1593, 2457, 1747, 1595, 2458, 1748, 1597, 
        2459, 1749, 1599, 2460, 1750, 1601, 2461, 1751, 1603}], 
       Line3DBox[{1602, 2561, 2241, 1600, 2560, 2240, 1598, 2559, 2239, 1596, 
        2558, 2238, 1594, 2557, 2237, 1592, 2287, 2556, 1829, 1831, 1830, 
        1591, 2288, 2610, 1826, 1807, 1809, 1808, 1590, 1810, 1811, 1806, 
        1820, 2606, 2286, 1589, 1818, 2555, 2284, 1587, 2554, 2236, 1585, 
        2553, 2235, 1583, 2552, 2234, 1581, 2551, 2233, 1577, 2550, 2232, 
        1579}], Line3DBox[{1605, 2242, 2562, 1604, 2462, 1752, 1606, 2463, 
        1753, 1607, 2464, 1754, 1608, 2465, 1755, 1609, 2466, 1756, 1610, 
        2607, 1812, 1757, 1817, 1814, 2243, 2608, 1825, 1824, 2467, 1758, 
        1611, 2468, 1759, 1612, 2469, 1760, 1613, 2470, 1761, 1614, 2471, 
        1762, 1615, 2472, 1763, 1616}], 
       Line3DBox[{1618, 2244, 2563, 1617, 2245, 2564, 1619, 2473, 1764, 1620, 
        2474, 1765, 1621, 2475, 1766, 1622, 2476, 1767, 1623, 2477, 1768, 
        1624, 2246, 2565, 1625, 2247, 2566, 1626, 2478, 1769, 1627, 2479, 
        1770, 1628, 2480, 1771, 1629, 2481, 1772, 1630, 2482, 1773, 1631}], 
       Line3DBox[{1633, 2248, 2567, 1632, 2249, 2568, 1634, 2250, 2569, 1635, 
        2483, 1774, 1636, 2484, 1775, 1637, 2485, 1776, 1638, 2486, 1777, 
        1639, 2251, 2570, 1640, 2252, 2571, 1641, 2253, 2572, 1642, 2487, 
        1778, 1643, 2488, 1779, 1644, 2489, 1780, 1645, 2490, 1781, 1646}], 
       Line3DBox[{1648, 2254, 2573, 1647, 2255, 2574, 1649, 2256, 2575, 1650, 
        2257, 2576, 1651, 2491, 1782, 1652, 2492, 1783, 1653, 2493, 1784, 
        1654, 2258, 2577, 1655, 2259, 2578, 1656, 2260, 2579, 1657, 2261, 
        2580, 1658, 2494, 1785, 1659, 2495, 1786, 1660, 2496, 1787, 1661}], 
       Line3DBox[{1663, 2262, 2581, 1662, 2263, 2582, 1664, 2264, 2583, 1665, 
        2265, 2584, 1666, 2266, 2585, 1667, 2497, 1788, 1668, 2498, 1789, 
        1669, 2267, 2586, 1670, 2268, 2587, 1671, 2269, 2588, 1672, 2270, 
        2589, 1673, 2271, 2590, 1674, 2499, 1790, 1675, 2500, 1791, 1676}], 
       Line3DBox[{1690, 1804, 1803, 2605, 1689, 2601, 2282, 1688, 2600, 2281, 
        1687, 2599, 2280, 1686, 2598, 2279, 1685, 2597, 2278, 1684, 2596, 
        2277, 1683, 1792, 2501, 1682, 2595, 2276, 1681, 2594, 2275, 1680, 
        2593, 2274, 1679, 2592, 2273, 1678, 2591, 2272, 1677, 2604, 1801, 
        1800, 1802}], 
       Line3DBox[{1833, 2146, 2290, 2612, 1832, 2718, 2049, 1834, 2719, 2050, 
        1835, 2720, 2051, 1836, 2721, 2052, 1837, 2722, 2053, 1838, 2723, 
        2054, 1839, 2724, 2291, 2613, 1840, 2725, 2055, 1841, 2726, 2056, 
        1842, 2727, 2057, 1843, 2728, 2058, 1844, 2729, 2059, 1845, 2396, 
        2822, 2060, 2147}], 
       Line3DBox[{1847, 2292, 2614, 1846, 2293, 2615, 1848, 2730, 2061, 1849, 
        2731, 2062, 1850, 2732, 2063, 1851, 2733, 2064, 1852, 2734, 2065, 
        1853, 2735, 2294, 2616, 1854, 2295, 2617, 1855, 2736, 2066, 1856, 
        2737, 2067, 1857, 2738, 2068, 1858, 2739, 2069, 1859, 2740, 2070, 
        1860}], Line3DBox[{1862, 2296, 2618, 1861, 2297, 2619, 1863, 2298, 
        2620, 1864, 2741, 2071, 1865, 2742, 2072, 1866, 2743, 2073, 1867, 
        2744, 2074, 1868, 2745, 2299, 2621, 1869, 2300, 2622, 1870, 2301, 
        2623, 1871, 2746, 2075, 1872, 2747, 2076, 1873, 2748, 2077, 1874, 
        2749, 2078, 1875}], 
       Line3DBox[{1877, 2302, 2624, 1876, 2303, 2625, 1878, 2304, 2626, 1879, 
        2305, 2627, 1880, 2750, 2079, 1881, 2751, 2080, 1882, 2752, 2081, 
        1883, 2753, 2306, 2628, 1884, 2307, 2629, 1885, 2308, 2630, 1886, 
        2309, 2631, 1887, 2754, 2082, 1888, 2755, 2083, 1889, 2756, 2084, 
        1890}], Line3DBox[{1892, 2310, 2632, 1891, 2311, 2633, 1893, 2312, 
        2634, 1894, 2313, 2635, 1895, 2314, 2636, 1896, 2757, 2085, 1897, 
        2758, 2086, 1898, 2759, 2315, 2637, 1899, 2316, 2638, 1900, 2317, 
        2639, 1901, 2318, 2640, 1902, 2319, 2641, 1903, 2760, 2087, 1904, 
        2761, 2088, 1905}], 
       Line3DBox[{1907, 2320, 2642, 1906, 2321, 2643, 1908, 2322, 2644, 1909, 
        2323, 2645, 1910, 2324, 2646, 1911, 2325, 2647, 1912, 2762, 2159, 
        2160, 1913, 2763, 2164, 2165, 2648, 1914, 2326, 2649, 1915, 2327, 
        2650, 1916, 2328, 2651, 1917, 2329, 2652, 1918, 2330, 2653, 1919, 
        2764, 2089, 1920}], 
       Line3DBox[{1924, 2765, 2090, 1922, 2766, 2091, 1926, 2767, 2092, 1928, 
        2768, 2093, 1930, 2769, 2094, 1932, 2770, 2095, 1934, 2398, 2827, 
        2154, 2156, 2096, 2158, 2401, 2828, 2157, 2155, 2824, 2097, 1937, 
        2183, 2184, 2835, 2098, 1939, 2771, 2099, 1941, 2772, 2100, 1943, 
        2773, 2101, 1945, 2774, 2102, 1947, 2775, 2103, 1949}], 
       Line3DBox[{1948, 2665, 2341, 1946, 2664, 2340, 1944, 2663, 2339, 1942, 
        2662, 2338, 1940, 2661, 2337, 1938, 2403, 2834, 2182, 1936, 2660, 
        2148, 2166, 2168, 2167, 2826, 1935, 2162, 2163, 2161, 2823, 2397, 
        1933, 2659, 2336, 1931, 2658, 2335, 1929, 2657, 2334, 1927, 2656, 
        2333, 1925, 2655, 2332, 1921, 2654, 2331, 1923}], 
       Line3DBox[{1951, 2342, 2666, 1950, 2776, 2104, 1952, 2777, 2105, 1953, 
        2778, 2106, 1954, 2779, 2107, 1955, 2402, 2830, 2108, 2175, 2399, 
        2829, 2170, 2173, 2109, 2153, 2780, 2149, 2172, 2178, 2343, 2832, 
        2177, 2176, 2181, 2831, 2110, 1956, 2781, 2111, 1957, 2782, 2112, 
        1958, 2783, 2113, 1959, 2784, 2114, 1960, 2785, 2115, 1961}], 
       Line3DBox[{1963, 2344, 2667, 1962, 2345, 2668, 1964, 2786, 2116, 1965, 
        2787, 2117, 1966, 2788, 2118, 1967, 2789, 2119, 1968, 2790, 2169, 
        2120, 2174, 2791, 2171, 2346, 2833, 2180, 2179, 2347, 2669, 1969, 
        2792, 2121, 1970, 2793, 2122, 1971, 2794, 2123, 1972, 2795, 2124, 
        1973, 2796, 2125, 1974}], 
       Line3DBox[{1976, 2348, 2670, 1975, 2349, 2671, 1977, 2350, 2672, 1978, 
        2797, 2126, 1979, 2798, 2127, 1980, 2799, 2128, 1981, 2800, 2129, 
        1982, 2801, 2351, 2673, 1983, 2352, 2674, 1984, 2353, 2675, 1985, 
        2802, 2130, 1986, 2803, 2131, 1987, 2804, 2132, 1988, 2805, 2133, 
        1989}], Line3DBox[{1991, 2354, 2676, 1990, 2355, 2677, 1992, 2356, 
        2678, 1993, 2357, 2679, 1994, 2806, 2134, 1995, 2807, 2135, 1996, 
        2808, 2136, 1997, 2809, 2358, 2680, 1998, 2359, 2681, 1999, 2360, 
        2682, 2000, 2361, 2683, 2001, 2810, 2137, 2002, 2811, 2138, 2003, 
        2812, 2139, 2004}], 
       Line3DBox[{2006, 2362, 2684, 2005, 2363, 2685, 2007, 2364, 2686, 2008, 
        2365, 2687, 2009, 2366, 2688, 2010, 2813, 2140, 2011, 2814, 2141, 
        2012, 2815, 2367, 2689, 2013, 2368, 2690, 2014, 2369, 2691, 2015, 
        2370, 2692, 2016, 2371, 2693, 2017, 2816, 2142, 2018, 2817, 2143, 
        2019}], Line3DBox[{2021, 2372, 2694, 2020, 2373, 2695, 2022, 2374, 
        2696, 2023, 2375, 2697, 2024, 2376, 2698, 2025, 2377, 2699, 2026, 
        2818, 2144, 2027, 2819, 2378, 2700, 2028, 2379, 2701, 2029, 2380, 
        2702, 2030, 2381, 2703, 2031, 2382, 2704, 2032, 2383, 2705, 2033, 
        2820, 2145, 2034}], 
       Line3DBox[{2048, 2152, 2825, 2400, 2047, 2717, 2395, 2046, 2716, 2394, 
        2045, 2715, 2393, 2044, 2714, 2392, 2043, 2713, 2391, 2042, 2712, 
        2390, 2821, 2041, 2711, 2389, 2040, 2710, 2388, 2039, 2709, 2387, 
        2038, 2708, 2386, 2037, 2707, 2385, 2036, 2706, 2384, 2035, 1427, 
        2150, 2151}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{577, 783, 2404, 578, 796, 2415, 604, 2507, 810, 618, 2512, 
        824, 632, 2519, 838, 646, 2528, 852, 660, 2539, 866, 674, 2551, 879, 
        2451, 687, 891, 2462, 700, 2564, 904, 714, 2568, 918, 728, 2574, 932, 
        742, 2582, 946, 756, 2591, 960, 770}], 
       Line3DBox[{579, 784, 2405, 580, 797, 2416, 605, 811, 2426, 619, 2513, 
        825, 633, 2520, 839, 647, 2529, 853, 661, 2540, 867, 675, 2552, 880, 
        2452, 688, 892, 2463, 701, 905, 2473, 715, 2569, 919, 729, 2575, 933, 
        743, 2583, 947, 757, 2592, 961, 771}], 
       Line3DBox[{581, 785, 2406, 582, 798, 2417, 606, 812, 2427, 620, 826, 
        2435, 634, 2521, 840, 648, 2530, 854, 662, 2541, 868, 676, 2553, 881, 
        2453, 689, 893, 2464, 702, 906, 2474, 716, 920, 2483, 730, 2576, 934, 
        744, 2584, 948, 758, 2593, 962, 772}], 
       Line3DBox[{583, 786, 2407, 584, 799, 2418, 607, 813, 2428, 621, 827, 
        2436, 635, 841, 2442, 649, 2531, 855, 663, 2542, 869, 677, 2554, 882, 
        2454, 690, 894, 2465, 703, 907, 2475, 717, 921, 2484, 731, 935, 2491, 
        745, 2585, 949, 759, 2594, 963, 773}], 
       Line3DBox[{585, 787, 2408, 586, 800, 2419, 608, 814, 2429, 622, 828, 
        2437, 636, 842, 2443, 650, 856, 2447, 664, 2543, 870, 678, 2555, 988, 
        989, 2455, 691, 895, 2466, 704, 908, 2476, 718, 922, 2485, 732, 936, 
        2492, 746, 950, 2497, 760, 2595, 964, 774}], 
       Line3DBox[{587, 788, 2409, 588, 801, 2420, 609, 815, 2430, 623, 829, 
        2438, 637, 843, 2444, 651, 857, 2448, 665, 975, 2602, 976, 984, 2606, 
        991, 992, 990, 978, 2456, 987, 985, 2607, 986, 705, 909, 2477, 719, 
        923, 2486, 733, 937, 2493, 747, 951, 2498, 761, 965, 2501, 775}], 
       Line3DBox[{8, 1480, 23, 1494, 38, 1509, 53, 1524, 68, 1539, 83, 1554, 
        98, 1569, 240, 113, 1590, 258, 241, 1805, 128, 267, 1817, 143, 1624, 
        158, 1639, 173, 1654, 188, 1669, 203, 1683, 218}], 
       Line3DBox[{589, 2502, 789, 590, 2504, 802, 610, 2508, 816, 624, 2514, 
        830, 638, 2522, 844, 652, 2532, 858, 666, 977, 2603, 871, 679, 2610, 
        1000, 1001, 994, 995, 883, 2609, 692, 998, 999, 997, 2608, 896, 706, 
        2565, 910, 720, 2570, 924, 734, 2577, 938, 748, 2586, 952, 762, 2596, 
        966, 776}], 
       Line3DBox[{591, 790, 2410, 592, 2505, 803, 611, 2509, 817, 625, 2515, 
        831, 639, 2523, 845, 653, 2533, 859, 667, 2544, 1002, 872, 680, 2556, 
        993, 884, 2611, 693, 996, 897, 2467, 707, 2566, 911, 721, 2571, 925, 
        735, 2578, 939, 749, 2587, 953, 763, 2597, 967, 777}], 
       Line3DBox[{593, 791, 2411, 594, 804, 2421, 612, 2510, 818, 626, 2516, 
        832, 640, 2524, 846, 654, 2534, 860, 668, 2545, 873, 681, 2557, 885, 
        2457, 694, 898, 2468, 708, 912, 2478, 722, 2572, 926, 736, 2579, 940, 
        750, 2588, 954, 764, 2598, 968, 778}], 
       Line3DBox[{595, 792, 2412, 596, 805, 2422, 613, 819, 2431, 627, 2517, 
        833, 641, 2525, 847, 655, 2535, 861, 669, 2546, 874, 682, 2558, 886, 
        2458, 695, 899, 2469, 709, 913, 2479, 723, 927, 2487, 737, 2580, 941, 
        751, 2589, 955, 765, 2599, 969, 779}], 
       Line3DBox[{597, 793, 2413, 598, 806, 2423, 614, 820, 2432, 628, 834, 
        2439, 642, 2526, 848, 656, 2536, 862, 670, 2547, 875, 683, 2559, 887, 
        2459, 696, 900, 2470, 710, 914, 2480, 724, 928, 2488, 738, 942, 2494, 
        752, 2590, 956, 766, 2600, 970, 780}], 
       Line3DBox[{599, 794, 2414, 600, 807, 2424, 615, 821, 2433, 629, 835, 
        2440, 643, 849, 2445, 657, 2537, 863, 671, 2548, 876, 684, 2560, 888, 
        2460, 697, 901, 2471, 711, 915, 2481, 725, 929, 2489, 739, 943, 2495, 
        753, 957, 2499, 767, 2601, 971, 781}], 
       Line3DBox[{601, 973, 974, 602, 808, 2425, 616, 822, 2434, 630, 836, 
        2441, 644, 850, 2446, 658, 864, 2449, 672, 2549, 877, 685, 2561, 889, 
        2461, 698, 902, 2472, 712, 916, 2482, 726, 930, 2490, 740, 944, 2496, 
        754, 958, 2500, 768, 980, 2605, 981, 982}], 
       Line3DBox[{769, 959, 2604, 979, 755, 945, 2581, 741, 931, 2573, 727, 
        917, 2567, 713, 903, 2563, 699, 890, 2562, 686, 2450, 878, 2550, 673, 
        865, 2538, 659, 851, 2527, 645, 837, 2518, 631, 823, 2511, 617, 809, 
        2506, 603, 795, 2503, 576, 782, 972, 983}], 
       Line3DBox[{1004, 1221, 2718, 1005, 2615, 1235, 1033, 2619, 1250, 1048, 
        2625, 1265, 1063, 2633, 1280, 1078, 2643, 1295, 1093, 2655, 1308, 
        2766, 1106, 1321, 2776, 1119, 2668, 1333, 1132, 2671, 1346, 1147, 
        2677, 1361, 1162, 2685, 1376, 1177, 2695, 1391, 1192, 2706, 1406, 
        1207}], Line3DBox[{1006, 1222, 2719, 1007, 1236, 2730, 1034, 2620, 
        1251, 1049, 2626, 1266, 1064, 2634, 1281, 1079, 2644, 1296, 1094, 
        2656, 1309, 2767, 1107, 1322, 2777, 1120, 1334, 2786, 1133, 2672, 
        1347, 1148, 2678, 1362, 1163, 2686, 1377, 1178, 2696, 1392, 1193, 
        2707, 1407, 1208}], 
       Line3DBox[{1008, 1223, 2720, 1009, 1237, 2731, 1035, 1252, 2741, 1050, 
        2627, 1267, 1065, 2635, 1282, 1080, 2645, 1297, 1095, 2657, 1310, 
        2768, 1108, 1323, 2778, 1121, 1335, 2787, 1134, 1348, 2797, 1149, 
        2679, 1363, 1164, 2687, 1378, 1179, 2697, 1393, 1194, 2708, 1408, 
        1209}], Line3DBox[{1010, 1224, 2721, 1011, 1238, 2732, 1036, 1253, 
        2742, 1051, 1268, 2750, 1066, 2636, 1283, 1081, 2646, 1298, 1096, 
        2658, 1311, 2769, 1109, 1324, 2779, 1122, 1336, 2788, 1135, 1349, 
        2798, 1150, 1364, 2806, 1165, 2688, 1379, 1180, 2698, 1394, 1195, 
        2709, 1409, 1210}], 
       Line3DBox[{1012, 1225, 2722, 1013, 1239, 2733, 1037, 1254, 2743, 1052, 
        1269, 2751, 1067, 1284, 2757, 1082, 2647, 1299, 1097, 2659, 1312, 
        2770, 1110, 1458, 1459, 2830, 1123, 1337, 2789, 1136, 1350, 2799, 
        1151, 1365, 2807, 1166, 1380, 2813, 1181, 2699, 1395, 1196, 2710, 
        1410, 1211}], 
       Line3DBox[{1014, 1226, 2723, 1015, 1240, 2734, 1038, 1255, 2744, 1053, 
        1270, 2752, 1068, 1285, 2758, 1083, 1442, 2762, 1443, 1444, 2823, 
        1422, 1423, 2827, 1434, 1461, 1462, 1460, 1425, 2829, 1453, 1451, 
        2790, 1452, 1137, 1351, 2800, 1152, 1366, 2808, 1167, 1381, 2814, 
        1182, 1396, 2818, 1197, 2711, 1411, 1212}], 
       Line3DBox[{1016, 1227, 2724, 1018, 1241, 2735, 1039, 1256, 2745, 1054, 
        1271, 2753, 1069, 1286, 2759, 1084, 1445, 2763, 1447, 1448, 1449, 
        2826, 1450, 1432, 1440, 1441, 1439, 2828, 1435, 1436, 1438, 1437, 
        1433, 2780, 1426, 1456, 1454, 1457, 2791, 1455, 1138, 1352, 2801, 
        1153, 1367, 2809, 1168, 1382, 2815, 1183, 1397, 2819, 1198, 1412, 
        2821, 1213}], 
       Line3DBox[{1020, 1229, 2725, 1021, 2617, 1243, 1041, 2622, 1258, 1056, 
        2629, 1273, 1071, 2638, 1288, 1086, 2649, 1301, 1099, 2834, 1472, 
        1314, 2835, 1112, 1463, 1326, 2831, 1125, 1466, 2669, 1339, 1140, 
        2674, 1354, 1155, 2681, 1369, 1170, 2690, 1384, 1185, 2701, 1399, 
        1200, 2713, 1414, 1215}], 
       Line3DBox[{1022, 1230, 2726, 1023, 1244, 2736, 1042, 2623, 1259, 1057, 
        2630, 1274, 1072, 2639, 1289, 1087, 2650, 1302, 1100, 2661, 1315, 
        2771, 1113, 1327, 2781, 1126, 1340, 2792, 1141, 2675, 1355, 1156, 
        2682, 1370, 1171, 2691, 1385, 1186, 2702, 1400, 1201, 2714, 1415, 
        1216}], Line3DBox[{1024, 1231, 2727, 1025, 1245, 2737, 1043, 1260, 
        2746, 1058, 2631, 1275, 1073, 2640, 1290, 1088, 2651, 1303, 1101, 
        2662, 1316, 2772, 1114, 1328, 2782, 1127, 1341, 2793, 1142, 1356, 
        2802, 1157, 2683, 1371, 1172, 2692, 1386, 1187, 2703, 1401, 1202, 
        2715, 1416, 1217}], 
       Line3DBox[{1026, 1232, 2728, 1027, 1246, 2738, 1044, 1261, 2747, 1059, 
        1276, 2754, 1074, 2641, 1291, 1089, 2652, 1304, 1102, 2663, 1317, 
        2773, 1115, 1329, 2783, 1128, 1342, 2794, 1143, 1357, 2803, 1158, 
        1372, 2810, 1173, 2693, 1387, 1188, 2704, 1402, 1203, 2716, 1417, 
        1218}], Line3DBox[{1028, 1233, 2729, 1029, 1247, 2739, 1045, 1262, 
        2748, 1060, 1277, 2755, 1075, 1292, 2760, 1090, 2653, 1305, 1103, 
        2664, 1318, 2774, 1116, 1330, 2784, 1129, 1343, 2795, 1144, 1358, 
        2804, 1159, 1373, 2811, 1174, 1388, 2816, 1189, 2705, 1403, 1204, 
        2717, 1418, 1219}], 
       Line3DBox[{1030, 1420, 1421, 2822, 1031, 1248, 2740, 1046, 1263, 2749, 
        1061, 1278, 2756, 1076, 1293, 2761, 1091, 1306, 2764, 1104, 2665, 
        1319, 2775, 1117, 1331, 2785, 1130, 1344, 2796, 1145, 1359, 2805, 
        1160, 1374, 2812, 1175, 1389, 2817, 1190, 1404, 2820, 1205, 2825, 
        1428, 1429, 1430}], 
       Line3DBox[{1206, 1405, 1427, 1191, 1390, 2694, 1176, 1375, 2684, 1161, 
        1360, 2676, 1146, 1345, 2670, 1131, 1332, 2667, 1118, 1320, 2666, 
        1105, 2765, 1307, 2654, 1092, 1294, 2642, 1077, 1279, 2632, 1062, 
        1264, 2624, 1047, 1249, 2618, 1032, 1234, 2614, 1003, 1220, 2612, 
        1419, 1431}], 
       Line3DBox[{1214, 1413, 2712, 1199, 1398, 2700, 1184, 1383, 2689, 1169, 
        1368, 2680, 1154, 1353, 2673, 1139, 1338, 2833, 1467, 1469, 1468, 
        1124, 1325, 2832, 1465, 1464, 1471, 1470, 1111, 2824, 1313, 2660, 
        1424, 1098, 1300, 2648, 1446, 1085, 1287, 2637, 1070, 1272, 2628, 
        1055, 1257, 2621, 1040, 1242, 2616, 1019, 1228, 2613, 
        1017}]}, {}, {}, {}, {}, {}}},
    VertexNormals->CompressedData["
1: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
w0tPzCo/audA8FsCgnuaZXdhoLTmpM94UQRvzeUspOH7hL4Tln9r8UobEh8z
Ea5SzAXQxSsiHMej1BA86SxNFPfuSMWD215hxXMTNj4P9khPahnfppB/aUu/
B7zhL0kY0dbv29km/2qvZaoY94aPxBrYjCL5P45XHD5Q+j9u9Tb7SP6PWeLs
50EK/0dYg/mqYVQ9jvWZz752Cv/ncqEvfb1/BJ49Qc8JF77h/3yKZOngfCMA
9SVdS05w3PB/Ms5j9u/e6wyFe/Sd+TnjDzn9fT9WGDFfcg9Vh64ddP78syIC
klhew1l8ebixtMEYV7y5tElFFjQ9voZXWogLHbTTwNQedQv0aTOA1t/vBy8V
XuYYqkJ3P8CsFNK2IHwOO5RTHeCRQlvvphNsVd34fpuDv66w+Pi7KkKrBy7N
Hd7w38T0eqJUqFwVTLwlRuh5N3y2Ea+suwHHJOXxzb7pKRR+WsO7qTqS/zOw
4spD6f/0zbotcCaK4YL3jkVQ+j8BcVZGeFkF/ECrq4Qdhf+j0IdKmg2lgyYW
9mJWPm74PyduPZUw4X8Bddn6lQjMhkFLf/2fBlNXN4u0bsi9bPR1hNsEJLB3
zceYbvO6L7OjADLxxKNErWhgpoF4Mi5+PVpxhRYFOg9kxPq37oHdwvLI/YzP
sDF7mFYB5sDg7tmJthIo8PFafIkRZsu8ahWMGyQr0Nh8Blq/rh00wjvwChWi
xx7T+Zx+sOGnKbHV7/VtmlV8tiNIkFC0se9LdNKLDJGaVfjiVudCu3PDT+tn
OWRVmZYv/5Mp2nqOwk9r45teto1VxGqjcgYp/R9v+/2pJP8nVsnAl9L/2TvT
v/eh23O8VAS8f5TC/7laNOc1hTGDaA0EvsXLbfg/8SPKC2ebf0FNtzjQzqd+
Qt/M13Sra8yabSgVh3/T8wriaZTgn61H3pLw36NO4LQaCzy/neWgrasuvEpr
5kfqM3tupkzvfagHZr7drpm0sYUDaAt9SfuXus+MXtfpmYBfKS5E+TUbzO2+
9r1GIm8uJNpfTsccn7ArCN2ZA3H0rfEJGylilNwjgBETiP8uHLjhpzl4GBTO
qFmjF5kupns2b/hpyy1ebsuwlaLtihovP4WfVjo50kfy0648KvhO6aeFruw1
Ivk/lafiTCj9n8P27UdI/s9tubtslP5PhHHUETPeRnxoo/u5Wgr/h/ki0/WB
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
bI/CDuOuipwi/Nc3r1lo7ddqfuLGqD6Oa+PsOUx7XgeFnUN67CNYznX+CW4Q
DwloScGMlvtN0/pTalHHOPF+fVUOyxJzDj91bnbu56uCFdoshBV5Tb5y7Xeo
ntPWp4SX/DnB178v+2EKv6L7Yju/sf2K6gG7/6swO7FQCJrtJPOor6fb+WpX
TKHjxOmHyjuPQP06ArYID7BRv1HJpucJlGMe+1P7RzSUtnDVf8MCEUjUf3nh
umgN8GGf/veYM5XQno63Yc+jiICUjcpBWB5Yfh89jsjvm/IiyacRnvTUrJgC
SpYzUYj+C5Zk/fY+9yKnonrwJf9VWNDa8ywJM7rgz4kn/lprf8bVa4/KtFlw
Q/KaPLTn9U3Xvp5wvx7zeJ1/DtwHA6b/61ydg0G3ul4QrZIiD2wjrF8PFc04
7o3bCa5fN2tcuho79wVdr/xDnrsrZ9T5JkjIfnUOBp1GBv1XhMejxweLCfdn
Q+/PeP2o9iXi9oDE+MFpIpDA2NPysbAFCG/sErY+sguf02DR9/EULJ8908zb
+ARQPjjb+P0PEXc5gFc1Ae4nFVkUY2D9AGpKJ1n//l3fOGB78OvtSbzzHeuF
24mur9o/+jvJRA7Yhlu/LjGU9+fXf52Y9eur8ZbNgrWC/YniuNV4i1XUfAD7
n3of3/oKKd5Ctkzmw9cLxYlXhTnYSfF2utIAvr741eu7U6iDFG/G/yb94HgA
YnXJ8eD5ersiEm/HBO2G4fgBcjRdSfGz06XIAYm3MXvWz3C8ASt2vaR423Dc
/0G08APASXBXk/wpP6A8fdpMGMYF9TXkeBO+PEXSz2ZF1n/XmxJvZpVnae15
lsRLijenLVeKaO1fjTfvdeddjbfEdf5ZzYd3zuzshX+/6PpqPvw0IX4F/r1j
qfpZQpB8mMLmJgjnB3RfFlNyPswuiJ2N3ZuMX80nlpR8yEHM8YTzDxBMyYds
JrGkfOj0Y0cVnK+A3hJyvrpU6k7Kh3SxGuNwfgOkdWJJ+S2w2ZqUD0Mp8ysE
KPMrtsSS86FdUs4YIv+iK44k3xn9hJQPsxTNKhH9ZkSyfv6mIgskH2YeeOKB
2IOh5MNQR19SPlQNjFtj/2o+vMu2XZb2vKv5sHGdf+SmDpPyocM6f67Wd5Nf
PVlwPULXV+s7XZnNZrh+oXpGhZNJ9f3u6EMhuN6h+3Lv7OhB6nt6HEcYXB/x
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
hXNV65+vGVw8F9E6Xt1/3USSwbt6RdLsAt7aE637Z472HZxVVSfcVbRgz317
Cu0TfP4R2LGfuwjxtgdemz8dor4Xlsl0c05lLyjQ0hy8/zT1fUk6yj8q256V
Y9lN0PcBN83/5wDL41vT8tbI31bY/A7zuQtXFQSs0Z/7J7RgRlUdl2Xstcae
WzXVpyQYvLFqOZFr7Pd/sHQcV+GMsZtde96f+VLAC6yIMv/LlDV+y0zzP8aH
y6hsmbgnWHMwFl3/ZzUzbXNesOLzyR/Xpxy5UFwW4/WI0b1gssrYwmyvjyT1
fbfFUtv5Qx/nqmvdNKb/pFPnZi9mir8TcKwnHBIqKzl1nPr91tm5x7J52DNg
+60fqTF+puASxT9Hr9mk4HITwR5b83sE+1Lwwkfy+qo/dcotquvzukFlfXJf
Z1Znhsjjzc3Xyq/I1m2B9ePBqLX66Zyf28D24AqYTIpo7aHjEWaB7cfapx5a
Y3+C2S4e14JJzJhA9JrzGnC6q+zAZSh/+LjOb9H0OVbnBZXW+01b7lUuppSj
yvpb8GaX2TlUfpHdfHwEDKq4H+AT8mTJGZW3esr0PKNdr1rLc/eodt9R1J65
x6XMl9vNCd87LUp5TlDfj9Pa1N0/YSYGKp1UL3WiF0LjKryw92BKSBn403Rw
atyLAHJkUngq8zG7zbcYoEYPz7sN4jsgO5XIZVo/+97x1i6ykYNyPl34iqzv
N995EZYHGjwK1sjH8x2cfxJShl+vP+up81HYHvyPSIVCWnv+VbW9udRujhNK
DC+ktT+u4ppDersetvur/przPi/l5lYq5cDYfHu51m/hF1eGwCCl9X47LUfk
/cBjXLVH8JO+gasKer3++t42SI/uqYiOXzQR1C9D5Rtbhdvt6J5Wz698zUwE
QtB9//ha7Vn8l01Iy7ILOHk9AbXza7ems9WMByiY9elhouIV8A0lrlaysy5y
2m6A5nuEu0JxTFDRAWHS+o99721F3upAkYcNA9O7LKDvM7unFmj8LOB1ucnV
4ga0AkVubYHXZ8XsTWB5QCPsy21E3naOLM+VQ68M6weWKPpfUPQDYnTfLWc8
8LJV22No7VkYHKJf+JeNS8t66Udrv823pFxbuqfYxtZva867tCJV+Y7HGBN4
d3Ct36DSZ0+je5TW+20u+Z+MDSayCqM23I+1uILK//ZV6iD4cVT+XVmJqgui
fg9I6FrHdHFTX7WFHU/V0IEKdN8Z6Jzx6xtDBJya2rbkq9TnB5SUNz+RzcgH
n6dtn1McfgTqUL5HrPpBs1LmKBYKiQnJ2pMnA3HeVSN9H0HZqF9bSO4OZH2G
ANwxuQ/9FNWSz/1H9fP3+MTWpqUsaNrzdkHiHyLwiDCrAcsDv4llKog8kz1Z
XvNzvA+sH4h/ffM5op9I0X+kMvmnTEY+XmC33DytPQsW5kktN4ZwbFv4ttPa
H8ln7VbU1Iddf970BNxTK0wkJiWrpW+N3yC145V+HMrr/aZpUP430ry46lVr
qGDNTepzHfMrf8a/M0lVLqz4ijwaXkHlwdaJEx2VC9VSssXl2CdvaeJ5/5u5
ZiawpTXHoGIntb5Iil3YFveqEzz9ue+D47MXIPEZOa8yPn91Ja7eAsr2t8qs
yT4FfThlqY3gx43laTVd755Br+VFvXty0iHP+zzQv0kicN5+Xh5D/IdL+PY+
rbOqDkq0CTzPmUQEpl0ri2F54Dx7nRcibz7IT5L/+G/lAKwfKO3VT0P07zAn
6w/x1SqIfdWJL1E3/0hrz7zv1MJsMxNeSlbWkNZ+czuOxDeVC1j4vGW0511Y
ARQizIsxSyu+Amv9pkv8xiSlvN5viytvGuKuvqraQKey5n3DZ1l5Zb/Cuyh/
u6J9xfJKw915tmOVzHR+Gl4aLNT8v+J0GTyks/p36ep6TPw1P4uwLQQWOr8d
9GYDqJ3WdoZ80/9Wv3f1ErXnr+/F7rTTu0BYXrowcpz6vOgKRm96eT8ln1K/
c8S/8PlcktkoqD3h2bvPDQL1lcnfI+g6axFAnP1FkU+rsuweJ607Grnyu310
hfxnGqV8thhA1l5um78iz+M9VRvMZ/ODGEjy2Oq9rfuyIIR/G9rbdFG5Buoq
3nPmskMBdGvhRO9IDoxnOVJKP0HNyFw1FntbTvzlcz8k7W2JwKR++ZWpy/vw
aq5nj7+KbofcLGa13sD95533xdWwHuDe9VAdRE9n1lOSnqEjnNmwHmBVT72a
jxSiRxn+n64fXYEH2OOHEDsl/5LtjLj9sQK2k/L7xlbvm99PstNX26Xnsdko
Xmdivh/xgwHFD+/Pav8H+wG/6gdrih9WVjZAqad34df7mZ7u3Y3fy/vx6/0c
H89nZx62BcdCR7eN9jomxIte+PVvJ279dTQw4HaPufoKsz6uDA1qp4jhXZj/
jaukiRm2Y8r/G1dNl6oPofcV0LhiomsnxS0cz2veh2WiayTFJ4yfcbAeFN8l
UuIQ9koGbD+KlxnoAkjxBq9fg/2A4veuNHojJK6wE57NsD/xq3H13oQcP0ts
x3nh6wI43CBfF+1R8vVa0iKvpy2R14Mo1wU7Mf8a0bN6XVj8foKI/+dWfD1o
902m+Hm9nWYUf/7veZNJflt/XnNK/rxk9+04nAdQeVa6GVL+ZKZTeZUwvILi
3PeU/KkgK9sH5xMq30WHI+XPjlZxczj/UN8j7vYi5c/grSGdcL7Cr+Yrzhxy
/jxV4xoB5zeA7zQ5v227Pwsi+fMc76QTnA+BibY9pHx4j76XlA/3eU+GI/IY
C7L8Y19TUj68tzXkLa3+zX5DpHzoYCd0kdYeT0o+XG8/h99RUj78Xz+cIeXD
9X5gf0Ku7wOtt8vgOoXKb6tRJtX3kqxKabhOofJHKPXdxU7iCVzv0H3ZLS+S
6nt6PP1s0lXq3B5W2+vJSH0XZhcfguspfrWeFpvkVyD1fdaVPhGuv4Aspf6+
zysn1fe6q7yicL0GXnlor6nvYll/i+D6DoTtTSDV98ILvaT6To+TEUHknTrJ
8g2Wf72Q+l5py5uA6Oe9R9a/ZaSTVN/X28NJZ0yq7/2tf1iTaezPodT35qpd
a85bkaBGqu//4zc6VVJ9X+83W0q/ykK3Ewv3Xaj8Zr9kUr869lHpANx3ofIu
QiKkfvVDa9hNuH9D9+W0FCP1qx9alY/C/R71+aisZ45Iv3r5o4Ip3B/iV/tD
PnHQFulXb5++mAP3k8BqP9mHXTiP9KsSRUEqcP8JCDL/t6ZfVaFnvgf3q8Cu
9ChSv2p+1N8Y6VeHU91VEXl1FrK8qHieNNKvZjuFpCL6Syn6DbP6R5F+9fLH
G2vs2U6XRepXP7S6rLHfjdKv2hjsWHNeh4fSpH71f/xWE0LqV9f7zU6XjL92
nBUsvzo7h+aHzRyGkwj+Emn4Tx3GEag8vpibhL9a5UKTYTxCnSfgPUTCX7Nb
7C7A+AW1k2NqkYS/CgrkTGG8g/KKTwWuiiP4S2CIwxfGR/hVfCRPwV8FMUqS
MJ4C3Nfjrx9flgpt5IB7g2T8pW7+8wKCv9bL5/AlzyH4K3Ivzxr92+ZVSfiL
XyLTitaeHdVZJPzlnNFwidb+ZxT8tf6826dESfjrf/x2++oSgr/W+43dO4zE
J5wKmn0IHYxF5dmsyXyC6+duVhgXo/LPHueR+ISxkwtZ3pLU90DZTr1dQvgE
fnaxABiPo/YUJzV3I3zC2737pGH8jtrPMN+jjPAJysWavx/6meJX8b4hI5lP
0C59ulxtX4pfzyd85HmNqc/rxq/yCU56ZqEIn7Benp2XzCckmY7P0urfTOET
8jq+HKK1h3NSlMQndLfO+NPa772Rj8wnrDtvBZs9iU8If/17rd8eLGYjfMJ6
v6mr1jojPFiRGGTHr0l973i8ckIf4bs20t2p4eS5iOpv6A8wRPiuk4l9oThr
6nNceXGlJL7L9CEDd87bU6j9ARS+61KG1H7zp9T6sph5/TrCd2nmsN/ed5r6
3uuqP5N+CDZi2E3Q9153zD+0R/iu9fLBCjl9CN+lcZtnjf4SCt+lfO37Flp7
QmoKDBC+S0lPKIrW/smFr0cRvuvyv8A1531izE/iu1gico1o/cOhc/Y9s0OK
InNt/oGB3CiUD9chjsk6lztX2TNq/sncRuXNphK1OibpvKv1jP68GbSk8myf
LHSGv6qoE9jGN7P910nl5RIbOJKOD3YRPmXtV9VLoeKUd8n/JQYCe0F/FeXE
oFO0PKHfye1bzxFUJn1kBdioPCGD38NZo7kunJ4B1+OlHqoeRjoPzk4xDZyg
oEyQAx113toLMWnJ8ANhWA01nd0JcVHU5w2cKyaPbSvBKE4L8CgUlaLnqpHj
xb778Fy5PGs0XDuB+p5R4v1F+vemzEoFRlvvtAkvo32px+J2hpqeuWpdmZsf
lpOo/Fjhu9fnG23rCUV/P54xAqh82kl7p0FGhTPg44qTJ2bcqPzbfSm6say0
RHDKkc3+nmUp6Ef5fe12VmHe+4EeZIttbhJ83g3uMyD/HjfSnU99VdOO2/B4
oyfdMepz75trLsW6XBTHiUMJ9Ac4qc9FYK/FTinOmGETk+/uBRlMUTtb6Ybu
Fu/Rw3BrTIw252iifrgdOqDMXsSu/Fnk14KyNj3qB0GDjy2CcmKgz8eVQ797
D6DXy/CpUsTxC2WgrUvc6e2qBFDjGdn+3sIXd+5fYIDq3AS9v9PtgJqEE0j5
efbtt/06aaHgAavNFx4ck4MYD5aT8jl7K75U7fMLXKvbE+/vIdTve7KIPQmN
HRzF+sYk7xhLHaLOdb+x90pL5ifMuJVAU75IF2r/dB/vY3n5GGXubFNGgX1B
1O+VVPyKe9TOBGGeCO6OD2CEfCMOk+vsfuj6VisdSO9MzIsdxeZQbpjqMaTP
nLa6YjbovAyKhTI7a8dfhwZmTn9pRc7Fo2607H8Od0X9n4ltihZ13pFC0MIr
f23si09aIuX+AGpnxe+gixndGzHYgncjwRunUXvEJ75rx9XcglQ/YRcSn92F
5PRknTYiOI5Q63vruj7kdz90AarNhHZXjMcenCMC3G1v6/8NpWMzdDbvxjlE
oPrfvkzVVC23wOxlwEaLdh1F/dB8bsG4yjcJY3Tsc5SLgxe6nr4Gv/9EcZP5
Gtzthsb5/Bp8XYviuI41OLqzchVHj1PwMj1p/WnVKl6uQXExvyQtLoblniHv
Y8P/baF9L/sbFf8mXqDBvzVrcK4HinNrTGnxrGL1Kp6lO0eLW9NQP9DRSdHg
U+p8Rfhfv6g4tKaCZt2Jijep+PSKZeddBjMOwvw6XCZoE2lxcDMPOL8OP4aH
6LhyfB4CfUS8SPiRS5r8XsPL/Y0Ylo/OkGvvf5EITrTO3n0T+R4l41U5pT/1
FZDJ6+U7Bn65QJbm7N+SZiIQfkJjs9uhfIhX4MdWBv92YNoSMtD5MwkY2V4t
fvU4Aph2DLyt9uIKUAdaH/gI9/nzir84PaV0AIvrhBOi8L4VYaN/keeF7qXK
DxX8rcXrOvmT8KZSPvn3yzTyTuHgvz+42XXnOqcYETz7bwy7Hm+2OkOHp8JT
Mevx5ql3c52A2RQh3GRC6JYr9f2O2dz2rjTGavBtf69p6NlMvDPlfShL1l0P
rHhPQCstJYx+mgAw1qh/AFkfONw6G/3+ATR2LNRBaSoO0OP69PPTIhHIYiwp
2sSYDrX5nwr/aVYLfPnv6TaNXBinyOEuy5zUA8ZS7i0836sItFcFXUDO63Wb
ted5VAP+5rbe6SsLKfiEO+R9A5o3Bb46/BcXLKbvxBRAfb/g5p1npw/ITWFd
ovVgvEV9nyUphePLkRuZmDgDJnnaOVQVBFkDQPQGeFMup05RwQVfuoov9FvG
Ba6xQY8kts09jGQBHslUkp7r2PY3k0fmhTGUNQrS3+S3BV5rB+CQ95Lsoray
hmbcgiZf2h45JPAQkL+2PPl5mQhUqLD9kWHIwbsXKeIlzsbik36R9Zu7ROhL
mX3GlTI/OHTDlfpcrsT7GwV67D3YznKOM/rs1O8YWnu4KVT5hmHClHWcXByo
fUKr6qeDHYdegIvyRy9gdMrxj2rJ+s3qeU69qdsCbU+Q9I0W3g24VmaTnnNI
vX+rwtZUB8IfPfmJ090K+CEJSSF4Z8lUfceScjauW7yrSjMoHrXHLvySoUVA
CrbVLr0p/Ggwao+QjWeirKURRvb81RHVcgC1B2uDOURYrAQVRCotYxXr8eqO
ZHvwtSM8DnYMUDNjeBM2fQfgqnKdVF+qrMsC/xXoYe9JJ9CtFFD7dmtCXnXr
PQ5MRpvU3YPN1L79V9fgFh24/vrQy7Wr+ZbixSj1d7xiuV1MPkO5IlOalXcf
tf8scGbwHzBlrljfDywNmpP6qPX3W29S5nvUrpvvUfZ1ZSHtRQ6QTEiyfzzR
BtQ3S1tUcxKBh9/SbiD6rd7xnm0VXkb7MY4OgHQ/d32fxpGS8a8f7k8COUM0
aeWtWke03jBI4olfTTReRbdT/iYCd0zzhpbxHUh+9sye3oMXPVpdmz09CdDl
3RiG10n5NntaAn/Qw5e07k+RZ6Cj00fkxSjyC7mofCgiL06RJ+9PmtNRT5vP
RefbrKXjsqGn3oUj+M4yyKNgU1ZABxEIbPIk/X67uNXj4d8vtItwkvz7teE+
GtXRAJklHz9Y/KYRmn/oGruNkQgszzrzIHkvU4CVG8570L3CHlLeE/5eeu11
eC20WLatr6SjBeLf8Obg34VJQJLDthTWD1SfVCPpfyijQdLvrrhwHrYHWLzd
T7KHz5CdZI+DIdMReF+gGJA/hOy7peIiaV8hYjwW3hcY7qxE8i00mh1N2pfr
gYcHvC+Aj255h+x7QPMBad8GZjob5Ly7qiLfw/qBsm4Jkn4lbkMcci7+Qgdx
WD+Q/DKTpF9fI4VkZ2nFCVIeM41OJtkJgexqiD0ukKsIIn+/P5gkr5L4xQk5
b8jHFWRfwEehl7Qv8wquv1l7BRc4X8iB424APhnuosdFEIFFNs7HF8tqIC7H
Sd69PoXAo6QTfvczYDxYqiUO1xegz+c7qb5YK/AvIPWle/OmGFgekJxn3onI
Z9kHkOTZT2bTibI3AswNXt6lw3WAFXcT3T1+IjBqX3L6hE8MsNl0z9AkNgY4
723fvmMJXsfCPvbLAE6z7tH9tz8TcO+8d72YSASC22+b/X6TCkyL/7s6HhcC
fNH3Mt/7F647WkYiiD0fo+PDYXugp0v7Sfa8p/YD+2n5cH4/fuX3d3KR9Tyz
3ys4Da4HjWa/icBv74yRdsVN+F/WDKbvCNT5D8m3L1/Rve1WmS4UoPuihDqH
oeH41MVvX8Pw/IaBqcOnssHLlPkGOxKOsgpeOImX6Xj327fHEJ1v0M93WmjX
8GBlufkAq95u6pyBGxrGc+LVB6sTdPsYTspT5wn05h7Zb/xxFs+Yoj4YGMIF
hca0kfL/0nOdGuvdJfjAocNhVRY14N4Usv6x77smylqO4sNO62h3vT2FzuOd
eS6jwWMiVbUyFOJquoP63n3AFW7MJ5fr1dIcVUXlv23RfQPF+Hk3TYQQPvuV
6H1u90b71aYjWQ8e6h0HggWl8/FpJpCb2A8f5P137+t3fUR6OICBj0HMt7ft
gDi8d5HyKoNkpFgDXyH+xFajO5d+lYAp7ZS6qU0ck+MRwjOwujtKhFOfqz/w
3KtaKdeu6qJoltv4T2pfGu8njSkuL66+GBstJkN4gNrJzfImAG9SR/jus31r
ncFz1E6dZx1niuYegCpBauHhYgHgLOX99NO3piZVb/kCOpusoK0VkZCH5a7W
ILjPkXZmSSnxNQAObv2UGHfQGhKUFmFF3p/6v8a+PJ6K8PtfEiqVrbQQqWwh
W7Z770zIVpYKZWkhIUuRsrXYsoeQPVla7Eqy5d47Y8vSosVSskZRyRYh62+4
Y6bu5/v9fT//Pq95Pc95npk5zznnfc77NLw6MHREdjWocY31ZOKN1fD0dWjp
/GN6ox/1xvsAWowKGZIFblAEes7sws91MhaekV7WKGfGcGdj8mxWK98cs9uP
zPEB3qXRgeerK2gb7nLxf0e507Ux2yPtPs6HTLATvyjzmcrXrXZQZqYEm2dL
GfeJbWkF0JPmCPNTMpGQyHfaumfOhN0VUVKH3R/Vl6fPiMMW0Qd8F8fjj3VT
722PB99OBdbMc5bALdf7i063D4M2V/VvX62PBO3X8sSa2sXDNsIM+o7IfyfO
oyqnY3sIBLkPb6jdpganzHd+W7R/LuQrdGl6VgGyAwPSrn1PoOlQ2rq93flq
Mc2zpP7I7XrPi3E+0pYGML7NZpKY2W5x8Or1Vmxf50JGH/80vUH26JF7vKNh
B3YOXrdO2ig0v6XcGa38cTrQGXu+Wa8qPNy/mxoqPq4YdD8Az3O4KnJft/8J
VLh/3EJX3RwaH6DJQ6l6Xy3rdQA+xej+Yo/aLHRsf03sUt6jBtG/iyMODizZ
qTz8xBK+d/VIxlfELkqXesmgoegCah2bqL+ccBr+uuLneBfyvDefKPGuzhDw
LO9L6fuHryHOVyNL8w9Fh3btsxMCBvqeMfUZ4PXX41dcTSekBUkLvdR3mbx4
/TUv0BUCJ3cTnIhnJJv/6nfPs9fYfLFuesXW0tejf9VN9wMMtYv11z/s83P+
rr/+/uTpUt00mZrzT930pijLpfroB85T/9RHy5+n1UEzsP9bB52H1h2zj/1b
d8yI1hcfpqsvFkXriKfo6ogPovXCE3T1wjVoXfAUXV2w0fss/REuP3Ipf73d
mVy8/3Loc4FvYkfzQbGYdgmdj1RQNDKE40TJMCi/ZtA6bpMWOZUglN57UBx7
3rio5fXcr2jKz59Xt4pevI7ZaaUnJN+Qq0/CmiHfpu9254IU9scqvxB93vvo
7Z71TGEgYHQklXwxCkw+XqHSirz34aGcci6G8bJnEj1udoVdmJ12LzQu7ttZ
FUpt8qW9/F5S2PwCDRYBl7iOUEV1uC49Ej6A2aXpm46HFMUQYNvbeyXbZPzA
UyUlbxMW8WKNnVT9UjOQvZBXQ1fQHuRLuu25WBcsJJlgbCnJA6bovLZyzd4I
vlXkWOLPTBmBbhKcA8pmWztY7K1dMXk+Ewp/VPg3kpWaxs/m6ddi57AlbGz0
oGQv5fGJ63YjnriftT7WzcN2UxH18Fem55Z3CzE5z9bH8ZeXjkFXVO3237yi
At63Dny6uO7jjwnV239zgOtOeuXxU4RBV+GRpfrEqJxT1COcDUDF7b1hLpPv
AeliWn67X5suf/tVdcD3bbtP3ku8z3JR/g2T0F0MZbnSMfxxDmNYfDWspvRo
0iYd8px2Yc03hQO4v3Cl8k19kRlldehR/qA6Y0z+6fyaF1f5paimdYmrDeJl
MPmloaiuNV3vqX8aJELyeFtxfHOwN9CHIwpiliMp9hf1Ak9/0uoBOweMPZW2
5wMPTzjE2zS+ANrResCLwnfXPlqwAzq2fgh75ITXA1q+uqMyot1LElOoG+/g
w+sBTfs+iB4P4SXdcVRqNBLB6wFfscYkvux9WPbFrWOlrOM97H29F5WvoMgU
k0+mrm/czlqC7Xc6MXb3nXuRlLqp79pM/jHYfgNkrhjxO+hSdZx9vpJ6jmLz
UxrfzMmNdlAPuJcn13vhdXy3dSkl882boPjpWcujX/F6Pd83ktoPtOQAk28J
z61M8Xq91aYWH/bPjZA0VJoarhzA6/Wa+pJWBWqcI9mnwCHNAXi9XnHvmsmk
32nEsyOrWFre4PV6jE16+rIidwkr5/qmvlPwer2taF/pa2hf6XtoX+kilFdB
3O9fXgUjt59J9i7BMIvh6UHWHnNwxZpxb5NFPYPm94rR8Srwi9D01avRf/UV
D8qr4Ijmu7qi+a5HJVI3VE7dBueEOacPg+5wycLvYzrI/W6F9hOpo+snwon2
6WCi69PR9sylSVw+vazayCMG8eOw5y+i/TLM6PplTNP8QSCprMxM3asYWvYH
V6D9Ke7S9ae4z6lu+CaYjZzw2rsD8Sux+WvPmFUu5BtQ/KVVNRE/FNOrDGif
iDS6PhESFRu3IP4s6O45upP0kAe2RP1ZoqXmH8pMGSB+pIGM+L/Qsv+bj/Zr
OErXr+H5upQf+8xNyOaZRZyqpSC2L8LEaidz3zTKtpzvg4jfjcnz/Ky8+Jxy
DrXOmWcS8dMxebai/RSY6PopnLjS+xjx98FZSztmdlcLGNxG8/dPV0PyDVUc
YPaBTx9uC/PClmh8QDEOnH4jUQjEw72VhMOl0HI8wQLtd1BF1+8gwe3pLNUr
nKzBcjfE2Q7HHYJdBxiN1jZTfpWy2RiuLcLkVwv6OS11sptq8yFV8vplnGes
JPFmpCxjLrQ69v1ByeNx0HKc5CjapyAK7VPwHO1TwPTn3crQ9BugZL2jmcSO
GNjV789SvCXoS+WsdKEpOM+WL+YpYAWLKdPiM8BlzcIdl9aAokJbd8VGssJJ
aDxnlRT5KSB6HWhOU/qqqOAMLcd/tqP9Bebo+gs80D2+Uv16BrnGiOnt3/z2
rHuOHhXaN0IRiTaY272vHNuv10V5/xdyf6iaoCE/ky/e78aD7axedtRziMLb
8ufCdBq0HNcCtC4nyhw0gLVSbm3K5leEcwppcbDGOFq/AG26fgHtt8uGbn+K
Blllwt2VRuJh1vT2pTgbS7TECYvN2qBkwxUubx0Qtq+nxeWicljkH6ykAHrs
1+xCj2dAy3G8/Eb/PeDJEZLT/BTxxuUmTM5vaF8Ac7q+AIoNuTOjt+6T6fN8
hK9RiVPzPyj0+UITl/evE58f/4/8sZiMM5pP/lRAFo4+S/lLy/HMU9/E5d2l
DsMf4kiGoi4w1BtMi3+y7JstzttwF7bltTV7v9UIXsUQEvRk0W99d4ibtcMJ
ZGPenr6YZ7V7hhaPvXFz5Rq27h7glsifpXyq5fjtkPgFL7H1m/4jbyopNLOc
4STbf+RH7UL5/On39QPl85+hi68eR/n2+X/Q+PZfo3z7nic1BCCvZDIrZ56H
s50H9nwsym9/lY7fXmdU3Gox7uHia74Ul+Dwl1iKS4jX0PjnxZ78yz+/WtpQ
8kDpafIfo1FX0UY1bH49z9ZdDL0PKY66F5hIdhHY/BUoD7wfHQ/8O2m3izeu
GYKslmH9cEUGWNL6ZwnXiAs6dzC+/AZo8fjsz6TMIFBVTm4JBwlD+dgXUD72
AJSPXemOx7XMJmayYLd9WgjzGJ7XpKz6+6WPPuXrwW/FJT4gJo/fQZOj8z7G
VM/v5L6zaXh9/cgkjS89nI4vXTVE4nSX0xwgGXRHTj/hGnjohd4S7nP8s+FF
LovDYEA+qwvP01OgRQoNJ5r+BJ6584YJ3F1nOBzvuxL0RXGlLJTP/AIdn/m8
TlSaonxsWdInbjeBnYGY/JxNEmavMjrJTivqjz4WacTOudf3rk98Vz8lF65L
/36/B9vX96s84urdhdTmJyFT/TeLsH0NLhCWeMh/LZT/w0Ou+r5vw+EHoUBa
ttTGaPV9YDuKu2nFvAgMs2EEV3L83vGNgQf8gOJ0XJLqJzRtSoDBH8Id3CpU
YBnXGxiR3Se4Twy40uL4abRlN3Zusih/OIGOP/ybQQRlXcHash/SKZbK+iuw
/V444Ugp3G5Azr6Z0V2bq4PtV8Jafbfy75OULyHPdlEZT2D7vX6wQPWSrTh1
9iCbw64N0tj84wv90i/K31D5TvB/XDiA1+cyMqxc4gMfo+MD53RimNnetgKY
drPWFMxqApZx1TLVhaZs5N63OxTfHmReDCzjsFXH7lNXKhwFqB05SeMueJ6D
Q4v9yHOrapJZr/5LYxDPcwBndnHCzZPEHMdzdnPJeJ5DEcrvXULH7y3Fkd/e
2pZVNp5Vf00vMR07n1X3t9VrcBeR5YWCWeQLirHnZWLct0TsDqdMs5voJsRH
YfMbGomEvxPTonZ0rBi1ZcD5uhm9JcVMJxupqxjCxmaa8byCWZSvewsdX/cg
onc2chmTbPYzqQiswfMWIm7kBfgj9pV3fURMwCH8eb/KWVvNrkbSwg3BxKNp
+PyBp9lse/drkN5L5rDzvsPzFn7x3noxyHCF+OPX6z+d5njewi4Ki7BjqRMh
VX5hXQY3jkd8RHm2N2T+y7N9BOXZPofybJ9Bebbr8PzbJdxwGWdc6KPxaT+k
49Pe+JXGj51Ax499sb9DbDGOnZxs9w8uuWsw/mX93Qj49FO3oEV8TSj+9BK+
1jghtIS7fWQLDEbG4dQqGu52tQKWqDsGkEW+v5i+0iOP85rmte8IeKtF8bxp
FTR7CO/fxPFQS+Kcz0bqdzXjzKSyrdg9sv9dEJXP+h5VMa7SVKQvH+cfeFgW
dot3gGom1KUwuo0Fs6OEV1KERLiZoMy7bNz1kRLY+FPb2QPBE19J75Qu8LLJ
M2HjlNQLEUf25pIqg2Y8zOTxPl/wnSqnvQsSJE62nZ9WV8li41JSqoGXo88T
k9mCstNWnsfkz5Z1dN+98gLBW3vNei5nG2y/l1D+ilN0/BWnuX4HmyY1UDha
Kjg+rsf7+ATGWefvDUykFies51+deAevS5qrMFj1WAgye1Xh9vKiNCb/tEeh
R8M1J+hj3hl+9seBkCX63Xou9PGr9PtBrwBV9s2Pc6AENK5LuX4oOSFxB/Cu
V6Paxw0/H+N1tReTqJmk4fkDHOm6Odi6+6QfHYLsBoidrA/YjP1xnof94pvk
fDMHCZfXb2S6Y437EQb+1wXEB/OVZeavCI1Y3cO+2xCUv+ILHX8FgcT6fkcc
C3TF2OzGlucrMXnq9C7kyolGQ1lM32XXzMRD02gfUscrNr7w93ZIw4n0w6xl
BNrCRMO7wbN7k97bDEGd5gt5xo0ccPnrp0t2aWk6aXOIHzPQNvxbklcAf++h
ByYiuB0PkySyre5saVDH5Jlq8d557KcBsRXcniPBqo7tl4uw+y0ov5kQyzYo
la+E80JcQPkrVtHxVxhGb1BZaP4Oya75kVOp9Q3aYfZzaXy6Z1RbVFsGZmt6
e8lSdT+cms2YtThuIqWwfXMFALuXZ3F0rTsNx1f7MyzGpXOf9QbwN8aStGx+
hUTfDMTkfF9ZOG9UmEZUvmi9UFoUisn52erHTN1nG8KutkfdeisPY3JWoPwV
XnT8FYLHD3+wLXKCtUuv35k3vwxvcCLFNy3GeWK4+61kXGFbI/C48WAkDFy7
8DIF+a9Ljmw7z/65ibi35VG1hQNez/LYAZyNzEolxOpua4vY7I2t+wrlr/i9
+V/+CrBULB4WvQNHHL2zZhbIgV89eePlM4rYpSmztR/3VhPEppOFTb2TsHle
Jw1km7hkkL8IOoJTf/FXnNoen3H/2iilRHB165lbVEyv7oeHnGYTZ6mjzLu2
ZPM0YHrY8tms3tMXdVDN9eij6mppQL4F7X0dcJWx26psBM89v/8ztHEfeF3i
Af+inZzsVgscL02E70ybyiuq+oIrp1xDehA7eScaN4ihixvUrdnptbvbHgx0
p3qxce8HVYTF7yzyFSiryLO5JXwHHl2o1ZDyKwG2pf5eWveJ6ammyzLCwP63
TsVQ2iieh7k6fHRaW4i0PWam3fkTzkNlmr2a4bNfPyEkKFH7jGc2dg6Kd39+
3eb6jpKQYLHG6i8+Ck3m9/MnItqp29gjzx4Ey7H5y6IGmy9UZkIWXYEZug+i
AI7ftHNQcwkpc1DbByds/VF3Ll4Y5BtZ07ZkLwVb1nHs9IE3fBbuanD0Bu9n
vGe9hIyro7wTpnS8E5+PHr8wLHoGPGIQ3Ehi1wS/6x41WPSX2dTF1Sgv2oFb
ddbhPNJlgFA8jX81kS/4N3CeB7jhmeedOjaCyfn75U0DQ4ibVLiv0pFP6ju2
L+3g6/7uAU2EZMdW3bH4h9g5fHPPtvx96wGVN2n1ZPNfvBPGJOGvDc0XoWfx
ZUOiD84Cfeh/+vmm+ZDc6gUo2ob1S4b2NJBwJ35pPOOValayzGG4ZROTn6Sv
IcgbzWq0yCvifFqsaCwuCJ7rZO4v2h8B7g+3jjdH9puP8k4Y0fFODG0rywt6
XgGkbJ6JPv0uF+B4QFv3FcjiFrRhhuT7Ju/lcCTeT+RnbpuNf+wEkYmFIOJm
2ILt14yTO0tPtoiw0J4zSbqH+0f2Mp0XboULQvaPPoen/cU7QWXcqUj+lg9l
GTCXmH8tAN59oK1rcio2sfPiBvhshwez4hduUMTUcMnurZVj4LW+ZAS3P+bY
vCf+DPjW/NOrKWQ84X/hndBRrQ2OeFpHEjxB4TG6h/NOsIpfH7SXryZ+Kz3p
C8TkYfIfj+eC5ZN8CRM2584rPMF58/r7dym9staFGtp7s8h/8U7oCa2wnHaA
oCYe8+pn36qBVmPauMbJP3dYSGvhCucjxO33toPF25P+v7wTQmtauVQ7PIjl
++/IqNjjvBMHj6vfl32kQLCjJgcKmuC8E5uMN8Yt8k7U7iOc/Jt34kZIXdR6
40yoaNW1h2rsFcDY/8E78TRlzFtXoll5wDSfj7cK552IZLL7vcg74c7HXPA3
70TyUfe+RdzW9Zan6d+47cnh7odKgS5lop5RSaee4bitbfsHmf3fw4FrN3MS
LNVyoMvo/c5QyPVth81BoFyQLedv3Faaal1vxdBdJn6350GiMo7bpuf8SU6v
20PZa6ausVYDx205pAw3VUxOAKz1W5WtzrHDbm9pfZc4tdSG5b0LgaYdNZSa
YAhyzqHNXxlUk130Qg3ooST5vfkLtw1wqRRMzZAiC1E/MHom4Lht89rK2uSX
1yjVVcSVDLo4L7rpt5i5RJ5QqutmhzImFpwXPXt9lYdLtyYIeW8uPOxqCgtr
Khct9duqVeXc7skK7pkx+PUcZoczPY8sydlfnLedMSwbCD2e0a1SlQ+d70Xj
ITq2a2U3CQHU+JnOPX/htr++8fsllZ4jc5ELGD9EaGByit2wSti4vohy22OF
/djLWEzOoptzrsnK1dTY+E2W5Yy4vRQ1FBiW7RQDXXZ/LGJS7Qt1oLgtb0Li
Bof7PiC39s7UI4ZhsHE1i1Abojc8GGqSPugeBE1uWr/+0nkEvpacxbV470xE
Bm00rpsHDDPLKzO65yFBqeCleUzXmnCu2nMN4NvULrNpwhkqXY6zQb+jHiw8
I9nwSf2M+gu39XtvLnA+PozM+EGj0ZGC8xdtith20GzzRwox6d60W1k+tq/o
3d/WA6v7qOusb3xhNqjE5pEx+HMiib8Y0ks61mG9Pw7S6aKt+1A71tJ2nyas
0MAReXW1NCz7WsZmcdxqZ6h3F/wAjHkmlCLzJxsu3fLbqWcQ+T61DXZeZfEE
hVRsb4k2+sCqvy3kFuPhgPrVH9YpBHBbX+eYlIQsfHbW4NmSnpHWGji58Ayw
9nvuTe3MgNpeoTjIXabLpixTpDO8r7ZnnMf7UNtF5oa22kwS19yUYPf4C7ed
p64Z/vHrPlnuwX7pl+fO49/hbqDP4cgQ5ZL/8Vs6Bbg906n+pVLM5Q8VyLuW
fMyqHscN505s+jRQA9nURh3f0HgHSvOgyfPoU2pjX5MhTJrOGZFUkoIls+JI
i+8RNJHldnudCt/JeNwTNuILb7oal0mcQezwjTde9temgv2X7AsOzETAklOE
Svdp5D6q+jqmp3EGXK0hbGEsfAgOFni3YfHeFHIwvch75DNApBiJXR8thyDW
maV117bYSkOMAoCbxdpNugaTmJypTeFcnNL8pATHbM9bm/E8bf0uGR0ouZvQ
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
//HfxodJ5303qyQi4/8PAnYWpg==
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.896872396697996*^9, 3.896874549951635*^9, 
  3.896877408205299*^9, 3.896879941064402*^9, 3.89688185300453*^9, 
  3.896882666859612*^9, 3.896885914711935*^9, 3.896886354434519*^9, 
  3.896956200144534*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"29562a53-43f8-4717-9d6b-7bdd767f50e6"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx0nXlcDW8XwC9daSGpEEKSfYmK9mYkkX1fsmTLWsiSNVISRdqQFKGyRCWV
kGYkZElaJBUpSfaiElFvvztzzr3zfHr90+f9/p73uWe+89xnzjl37tzeyzbM
cGgtEonUlUUiuea/vV9Pvt7U1IsdeVn1eVOTOvuJHWE9+ay/0cotcSeTnLoj
93rdaXLi6F4ml5XV3ZyKOiN3n/82xGHMRtNv57au1LVVQ669Le+n4hsPMwfJ
PMrIr+RXfktwXWjOjW+NvEBdeeLihl88/8EAP6FYfXRb/FwLEf8P+O6O1mtq
du+y4MdTwJdfWjpxwI1lPG9NA//aVOSW/6m9BR8P8gUWbc5pqO3mX1cNuU6T
3bjen2PM+ONFPvFsn4XD/p035f0g/3jze9LkuYtNeJ/IaRf1kEEKRUbgmR2v
oh2g25Fdmes4XX3wMGPwDLyf7fZJeqm30DPwgd9mDZqZp2wGnoHPrrf86Nek
bQ6egX+tGfHdcUk9egZ+xeLB64z9QeCNAd7xveuoNTY16Bl43LVXFuz+Lpbg
GfjM7b1jreVEluAZ+CvbvvJ5wZfQM/CC+rmb54o1LcAz8Ek7Jv/uvmWCOXgG
7hOaLj+q22gz8Ax8VsmQZWdrf6Nn4Beu76rL1d5mDJ6PP+vydnxAOzYk3kze
61Q8egY+M3OdXvQe2hQ8A1/1ebq2ySB/9Ay8h+rScHF9BHoGvqd3xZhOantg
vSHvWazSkDq1K3hjgN+8XX4ks/UOS/AM3Kav/zlNuTD0DLx1qw2xj1gP9Aw8
yuL10K2BepbgGfhHkf1a1/Aw9AzcNdcp/c+05+gZ+Ihz7xTfad5Hz8ATfNd+
/dXazRQ8owdRnPkLr7/o+YpkPnm21uTvj96HtU3AM/BhlfIbps65ip6B75xy
+/B6r0b0DDzyaOi6+Eg1WD/Iu9TG5Dy68wk9A1cSFdbPcT+AnoEP9/Cf/8mi
Aj0Dd3xS+iTzqSIFnoFnxe9N+OJXjZ6Bz0x0brtXIxQ9A3+VXHrk/jwlS/AM
POiNuXe7NhYW4Bn4hWPXTb+m6ZuDZ+DpundaT975BT0D98xc3WG4/RpY52ya
ZJ23Yn1LjzesMdqKnoEnetp+TH7WGvYr5P9Y4/2zAmbC/ob8Zc6KhxcrV6Fn
4JqhOeGJuqPBA/KshQoPrIqL0TPwwVssQ7z2m1PgGXgm3U1k7L0EPQMPnlJ2
57GnDQWegY/ssfHhGtEP9Az8aqpzp5/vlqBn4GUnon3DQwLQM/ADu+bV6agc
RM/A7+dPOX91tJUZeAb+ST9O58cYFj3HSuarY0b3/NB5Quh19Azces5OxXHL
RqNn4KctR5pqdAlAz8Ati0f8XNg1Cj0D3+mx4k6ba3vRM/BlLr/z5a52A28M
cKdTh+K+LNiJnoH3q/PIcgo8jZ6Bv/rz02FB9n70DPx4kV3ssfPDKfAM/Jfu
yI1TTM6gZ+DMxesDtfWz0TNwY4OrH0XmD9Az8BFK54orS9zQM/Dhh2cd8OzY
iJ4TJLyCedolKHaGTiF6Bn78iuHsa4NWoWfglxdeOnW+ezJ6Bt7e9POLGZsz
0TPwPRWu9d97RKJn4Hv93d4tejAaPQPvcrXnztl+Z9Ez8FZz+q49b5+OnoE7
jetuYZgajZ6Ba+R19vUbMgc9A6+Q88gc9CwdPQPPzfib7/mpDj0Dj9668dHu
s1/RM/DnL8Na1+6OQs/Asw6sfaauqAv7CcsdRV7KUPW4/hu7f0TPwBfQX/5e
GO2CnoG/PdnVT2fgQ/QMfG99pI7GxGL0DHxmuJGep20CegY+4faUhf7q09Ez
8DKNOdsvlsShZ3zdxSXF8QG56Bm4s++ZozoXbqFn4Kuv7tnnMdkBPQN3S3Bf
X/Y3Fz0DH11k9beVWN4SPAP/2nF5stO2v+gZ+M1yF1smJBE9A7fddujPIcoA
PYdz/qlhdVobNy0vRc/ArW712K6ctx49A9+1RX/NHCUWPQNX02kbNzs4Fz3j
/GZ6WkzXK+gZ+PiCjc6mF8ahZ+B/1vffPdP+AnoGvmJUioOH1hP0DHwq4xm2
Z2s8egbudaTpTMm+RegZ+OvZf9cExz5Bz8AnOK4xvLCnEdczcOvVU160u/ET
PQPfXmpvW/jlKnoGPq/T6jkzLw1Cz5HcfkKlX7rg/nPhXfQMfNfOBHOvjCno
GXjx28+r5onD0TPw4CrtFDn/6+gZ+L1TT+5QHQ6jZ+COOcorVpzuj56Bh7m3
mxg8xws9Az+drnR2mVo0egZu3+/51JPrA9Az8IVRFjdfuVigZ+B2RvR1OjIa
PQO3Cp5bYrX5DXoGftmnflVsbC56Bj7f/uG6K6VH0DNwsVXAyUVnlNDzHe76
SDvkbFo0t+kgegb+a6h6KTOgM3oGvnLsujVGHVahZ+DT9aqD1g7ejZ6Bj0ip
tsjWn4WekSeylltF1Zhv4PyOKpsePJ2GnoH79Kh2f7J7M3rGOPOf1Ew5ZIee
gV93Whd6ZWQb9Ax8l293en/FZvQMfMnc6NeLP0eiZ+C9cgYcCpgbip6Bv35u
XefvPhs9AxcX7IxrGpiL18GLXL5HP9wQGBRVbYKegbukvvnl0/QA82fg7w88
d7vzrQt6Br7cNsxnh/lQ9Aw89lybT6fqxOgZ+KGKB/SYyLPoGfjJvn+2n9nQ
Cj0Dfzbyzv1rJrroGfiMHiLlQ97K6Bl4zIa6ndZySZjXAR83LmDqugu66Bl4
P+3Zf18yc9Az8E0mkzwnr52MnoG/ODB5lPpMefQMPKy1yZJ77zzQcwBXv9An
ZvVfY7YmF+tB4GOPJDuKRy5Fz8BTc2LK/ny4hnUK8JqYVyG5JfexHgS+VN/5
o/viM1inAF9W2kXst8oUPQP/czzg38QuIVinAFdZGOmTMyYV60HghwePUxpw
KgLrFOBvR7X1HbN9GnoGfurFlUlylalYDwI/tPXFJ7s21VgPAreLqFvSo3UF
1oPA37f7EP37ejjWKcD3Fh/ZZX6vB3pO5epx2lqlqdPeqlnoGfj6X9/mFx0t
w/4G8FbX3Xt9nGaAnoEvZA+2TQ0eh56Br0tRbbf6szZ6Bj7Pi/79eFcK9jeA
R758225kXy30DHy7bdHzbzNo9AxcU91zoLtpP/QMnDnlnmORno39DeAHSq/+
co2m0TPw2+3b93ZeuAk9A2991bT61p1V6Bl42359vS6IddAz8EcWb18Gtg83
Jvp19M1zHn/Dx7Nkv44+Pqbk5tk3k8h+HT1h9ZFe5UqnyX4d3XvP033h8+PJ
fh1tdvrin/hp3mS/jt6rNLneo18/9Axc7UX0zmHvPMl+HR1if6Ct7/JLZL+O
Nuhxq3iMrT/Zr6Pzql/p/DhrRvbr6CYN5umEr5fIfh09aWD2rMu+xWS/jq58
u1h9hUsO2a+jHwQve64tf5js19FR6VEusb8UjNMH7O1XlNSD3bmjQ/34ADW2
Q6z/jXjNa+gfuP5yc8VLB8qM+PE08C9B1266F9XAeORzzPK25q8aYszFX8ak
SuLNZ1YU/h1nGwn1RRkFvNDna7jfj0fAmeMcp+4sXfD08/OHOB74qQkW885+
y6SI+Ok+Pq8mnVtSRMZPdxu7o2P05fbGRPx03c7idKPr2ibAwc/Q1pOHWszO
QT/Q50zZtjVWcewSY2I8W/VeM9X21XljfN/xx/U4eJcoROk5Xl8g/mHd+88w
25dDEfPT/cfP6/WlvS/pk7ayS72zLHWO8Q/3Ckenop5sQUfVFbq26uzbE3bG
6Zv6AKeBd73o3cPx5FpyPD12/+ZBh25OI8fTFWb2o3JLjqM3mOdz06BeP5bd
MoLxcLz2owfR1++PxvkhfmXn9E3iVgMwfpi/n6juyUqHEeR4duu6R07d/v02
IsazFydejD1tKsb1g/XOip5KpcNxnWDdZBuS8Lb+YhbPcyh3iecH1Jr1DuNN
hkCdlcMA11d+FNivWzaeF+Av131KrIzMpQgPdLccS9M/cRWkB3owY2dPrd2I
cd6S7GPV1IpPVyYYPLuO6xny/Kd/OpdM3HQX44fxoxZ4eVuWJyOH8QFfI3eP
/nof40+SjC+leg1+6dBh21PksK7aqmjfc+guXW8wf7dtk5R/PUjF8d6S69oX
6v61Dcpldml8ftiA89TGX2+XY3kA83/gBt93pGV9iOXHf0afx+qfTemexsA8
+D61qOlTFKlxHPMo4At+z1jI6t+EeSg4LqrDxzLX0xgP+rl4Zlvv1IXuOA9w
T9e5XTfVROA8cFzzpzif15JLRg5x3u6toOZl/wDnB8/dtwb1LhjiR13m6wSY
R6d0bWrIoDAcD+/rrPFB+f11A5HDOrScrHu01u4EzgOvW7re6ETNkGh+nDbL
/dVgPzQWVnmWPjMqTnIqkvYrNNhXy/tMkMuYbZL8H8Z+hQbbQe829U3hnGmQ
rm2AtF+hwXZ2aLflgtc1sxLJPMrIt9/sHhQq2m9+XDK+NfJZvcSpTY+7WYRI
OPQrNNjWXlFn41W38te1tynAP12Vn2XmHGjhzY2ngFvx4325+WngDD//Sy4e
5Jq3uHj8uPiRn+PjT+COF/kH/ngLOD/I36zg/PA+peN5n+D5v1f573OT29SH
6Ts/rDQGz8C3nrzIXutfhZ6Bqx3QiotnTc3AM3DP9ck230QTzMEz8OFfLPsV
RvewAM/AP46d9Mem5Dp6Bm5MP9RyoTpYgmfgWeciFAa9HGIJnoEf58eDZ+CT
bLj5wTPwMj4e8Ax81gYufvAMfKYXd7zgGfj2EM4PeCZ9gmfJywS0Y+8NGn5i
1J5K9Ay87YCbRYE2zqbgGbh4ZV7Ig1Mp6Bl45a5u9xOePUHPwNMPDtNKu3UG
PQO/f2KEw2B6pCV4Bj6pbHnCsEQ/9AzcZrd6h+kvY9AzcCd+PHgG3i2Ymx88
A087xMUDnoE/3M3FD56B263ijhc8A//N+wHPpE/wLPm/Fcmzqv8MPiaXzjAB
z8BTtRsnsOcK0TPwhqH2Pp/a9zMHz8Bfn4rNz90w0gI8A+/8RudQ4VYFS/AM
XGS0ojp/aTh6Bt6u0Ms7KO03egaetcsrYf+DLhR4Bk7z48Ez8An8/OAZ+Cs+
HvAM/HQoFz94Bi6nxx0veAaur8P5Ac+kT/A8XrLOW7E7VmcbHf8bgZ6B30wO
N6oMGWoGnoGfr3spmumxHT0DLx7RNyw01ws9A59YNkH/q94C9Azc8IHt1cUj
f6Bn4Ft7n3qdenYSBZ6Bf7sYv0vZaS16Bp7EjwfPwI/y84Nn4IrvuHjAM/AE
fS5+8Az80S/ueMEz8Hm3OD/gmfQJnrn56phJ2+WXFTx/i56BzzEU9YpNXoWe
gc/8fW37kIjr6Bn40176eUu73EPPwE9WtuqQnHEMPQPX6OjT7ufQoRR4Bj4y
WdVBqfoAegZu/Up/sf+QSPQMfDU/Hjzj6/Lzg2fgIz5y8YBn4Nu0ufjBM3Dq
D3e84Bn4+ZGcH/BM+gTP1yS8gpFTT/Mf6iRnCp6Bp0zp+3bHKh/0DPzu8DfF
mXH56Bl4xNMbR/qrVKBn4P9OOcl5DLqJnoHb34s5/qJwGnoGHqQzeEu+22X0
jPM32hn0dMlAz8Cf8+PBM/Bofn7wDPxKKBcPeAa+NpOLHzwDzxnBHS94Bm42
jfMDnkmf4Jn7m2FetzzE8c5QVVNhXpdhXmySUBecc9xMmNdlmI98d9//0vsy
c2Fel2Heun/uIcPFPyyEeV2GucE/JS/H2nRLYV6XYX4qfLvGF7WFlDCvyzDP
7jgidr9aEnoG7pHxyGm4fR4lzOsyzOXUuPHCvC7DvOtZbn5hXpdhfp+PR5jX
ZZhf5OMX5nUZ5prl3PEK87oMcy0zzg94Jn2C5zucf4pcz8DJ9QycXM/AjxDr
GXgVsZ6BzyXWM3AvYj0DDybWM/B7xHoGfp5Yz8DDifUMfCaxnoGT6xk4uZ5J
n+D5FrefUOT+DLw/sT8DH0Lsz8CTif0ZuAexPwOvVxXuz8B7EvszcD1ifwY+
ndifge8i9mfgWsT+DHwFsT8D1yT2Z+BbiP2Z9AmeJ3LXR1qXyDeAk/kGcDLf
AH6VyDeA6xH5BnAdIt8APoHIN4A/JPIN4D5EvgF8LZFvAP9WJsw3gHsQ+QZw
Mt8ATuYbpE/wfJPL9+j0v8L8GfghIn8G/ozIn4HHE/kz8PLXwvwZeMkoYf4M
/NUrYf4MPJzIn4G3I/Jn4AOJ/Bn4RSJ/Br6JyJ+BvxwmzJ+BN/YW5s+kT/Dc
n6tf6KVEPQi8vL+wHgT+2EFYDwLfSdSDwPcT9SBwT6IeBK5D1IPA63cJ60Hg
1kQ9CLzqhLAeBL6MqAeBHyXqQeC9iXoQeD5RD5I+wfMErh6nyf4GcLK/AfyC
p7C/AXw60d8AXvtZ2N8AfpfobwD/Qwn7G8CPE/0N4HOJ/gZwXaK/gfET/Q3g
ZH8DeOUBYX8DuBHR3yB9gmfurwb9f/p19P/p19H/p19H/59+Hf1/+nX0/+nX
0f+nX0f/n34d/X/6dfT/6dfR/6dfR/+ffh39f/p19P/p16HP9f9Nk9SD7+c0
13MKIUFf3lQS/SU1Nvmh9dXgUT2NHbnxNPBdioLxNDn+nASUMdGSePOZf0tD
HoeWPKLcOU4B77aM4zD+HsepWmI8cHV+PMTfl3tdmowfOEXED1yTjx84+LH4
1WNL+LqTxjA/z9mXdRwnxrMwHtYDHNf9M2dOXPqWjddxiJ/lOTE/DfODTzL+
G5L/f09W8naxVWfr1jEG+5XtjZM4TgPf7MhxYjz9f8bTMB68wTx2mcEVzpPq
jGA8HO8KI+qB3t6ROD/EDxzih/lhHmI8+3/G4+vCeuD+e4Z5XGhSt8QVmbge
gOfwfJOE51BZktd5QH09PTP5gF4OFc9xBngZz+G8AF+x8bi6x+1c/LyAjJ/w
gMcL85/h5mHe8/NDPMC/E68LfCX/unC8NpIXrmaetovI+xYVjxzq3+GxNpfO
Rt7F4xojGV/KDPU6MOXIsKfoB+Yp5ecBDvNY8/NAnDCPBT8PvO4kbh7qDhEP
1C8D+HlgfhifQ7wu1kFE/FO516V0+NcFDu+Xfva9N2YeeI7eYP4PKc5PHhTe
xPGDJO+XL1T99KcDHT+z1DvJCWvAefzPyb09Yu+LdQ1wm920WbHTdeqzZPxn
XCfLKsRmVV/TqFxuHtx/Gvh5YJ8Hvomf5wk3DwXH5e0b3xQ++w7OA/G3uef6
YuH7rTgP8Hixm4+1XCjOA8flHb5+QFDoNeQQpwcRJ3im1SpVp93YT8Xw9Q/M
syrNOeWLRiCOh/2q9XnuuIDD+ysqo+eaGNof54HX7TF+4wdn9wh+nBZ+D8jI
bWTxqpU3+OuOJn7urH7pcPsuDqtNgcP423M7GFmUiM1gX4Dxkxev/ej3Yjty
GH+g8l3ddqqTOcdVcfz0e1atZuyZhBzGNwx5NOPnkkqeK+D4IZvX5Dq2KUMO
478c/n14Vf4euM8Ex8/xGLLFMscYOYx/4NF9xlnzFzyvwu+X1bgWqEy3WIoc
xk9ZmB/YsPcfcPx+2VRtM1U3ahVyGF957vwH5XI5uL8I7wdQWzm2/8Ce1hAP
fl+pMmbnSadRpTxXwPHFizMSL++rg+PF8SN2398RPjqQH6+K453Mh+oqqTuC
TxxfcXT2voFtFCxgH4TxNh/ntG2YcR7OF46/ctHq+fGDND+PJo7PuHCwXXpD
GKwHHF82Kvje1Asm/DxaOH6h5+/gTmlzTIDDeA2NxNufk+qA4/ekXv1tc+3S
a3Ncb8Cvz3W1msUcwnUF3LvqqJvSqBBcP8D73zimfFttPfhEPqjkeYRBGzwv
yCe9iCk/qG9nCecduHyM1Y2mEe7A8XtY5ffKprscOojnF+cP2PrpmpmDJZwv
4I4LRkR0u9vFEs4L8LLU9ofczh7B8wI859I1BdohHf0DH+Xe1DAjkkHPwHcb
Vrcb3ma3KfiE7w0tT/LJ84i+hD6B+1loRPi/r0OfwGsWvDLuM7UtrCvkK7Ki
qEWphegT+L4Nz9Z3/7QRfQK3MvvzTzzpIfoE3kHFOtJ2WBX6BL534UHb1jm1
6BO4od/eQ6WlOegTeDdX+yUvenmiT+DXmSl/o+f/QZ/4/bJDhrFD++hbgE/g
jUrZzst0h5iDT/QzxeNeq8+V6BO+H9R3wYKbb7eIzMAn8AG/5fu6LphsDj6B
2/5JsisoW4Q+gbMXXvfR6DsCjgv5yCfTTn2IvY8+gZ9oH1le8KYHBT6Bx62K
q+jMWAPH71Wlx8QqDf0zEe5vwe83JYv6G+eOHECBT+BRv5/n3+xUhD6B79DS
zjpQPs0SfAJ/peQ6YtpoL/QJfE5e15knldzRJ/CV/V4++vqDgnWL32/Seh8x
6886S/QJXFsz+EWojg/6BB7d22DgzTOn0Cfw/mzkloRrG9An8Hkd7767qCwG
D8gbNJYMbhu6AH0CrxvvHqo21AN9Ah80001TufgQ+gReVvuqa9ySlegTeExZ
56Qyha4U+AR+cfbGA/amR9EncJvDrXVi99xHn8AjTjYUNl1h0SdwgyjH4y+8
XNEnfN+nyqZrwfyxK9An8KUWt6/f1IhHn8Dnnlfr3GV1GvoE/nPxweUreh5D
n8AXjd3w9E7SIPQJvGvQ/dRwB3f0CbytStHv7r6X0CfwY3sqd/cyu4Y+gbvN
CxEvyTmCPoHXpzwf5hhDo0/gs3fGpr99loA+gVuoJR0cHvkFfQLvljh8t5ZJ
BfoEnnPncrfZV8+jT+5vXsrzbf2SnXdsRp/AY9gBtQWL76JP4Gmu19K/x2Sj
T+DZafpta20j0Cdwm15bp8lfNkGfwB99UNYPuOKP3oAvXtun9FPlXfQG3DRm
UESE2Bu9Ab+YonH+jPw09AacURpH+f+7h96A9zFaa6fs2YDegIeN3W/qP78W
vQFfY3mw78oP8egN7hMTJybZHPy9Fr0Bz9uQMc6tQzJ6A+709Pf+DXsy0Bvw
zz82t7XrForegPd29Lyh/2AEegMu2nv4xoBdB9Eb8OVta2yZZ8noDfieFX0H
14rd0RvwnPlR4gR9G/QGfE3uQ1/vuNvoDfj6ZxGRwzr8RG/A/T57PPQP+Ire
gC+0NJtkoXcZvcH3bo6/Xha45fsE9AZ83ZzFNh7ywegNuNv0LWq2Wy+iN+BK
WcM3FHbYjd6APx7VvcKX6YjegMe0WrpHbtNqfP8Cb5cvrtr5xw99Av830dBj
8fvj6BN46PKGOYOeb0afwA8PnNx7zaB+6BN4pM9xV/2oU+gTeJDGsG8dFHLR
J/A9dztEeHplok/ggy7XD9ra1xt9wvdr3qwyPBu1XB19Ag+ZYXpy9cSl6BO4
7hq/jL6nnNEn8AyPe8G0gTX6BM5EHqqdfOQVXq+Bd1h2suhx8Aj0Cbx8X9v3
Ac7z0Cd+L8nsy8ixu5agT+CGz+ydZx8wR5/A0zcMbFjy8Tter4FvH2A5Wf/D
cvQJfMhkai218hT6BG6fPL7gyuhj6BO48wWtPZY5M9AnfI9m7/ryASd7pWM+
CfzEuG292//siD6BB1duHZ01Vgd9AvdKtNzd4VcN5pPAD7/qMO7ffm/0Cdxz
m5bbojFlmE8CT7sZ/sFjsSL6BL7o8MRhCt1xneP3gBLmt0p4EfIV80ng39c+
/2R3NBx9Ag/68Opnr4sa6BP4sqwR/V5umIQ+gT9apqt8s4MN+gR+6qyNd+xB
OfQJ35f5a7b74X2txegTeFKCaX5d0WXMz4H3aJvjlDn3NtY7wDcUZ73Ssz+K
PoH/8+lJb3/ZB30CD7z8U6XvrF3oE7jxXus9fRvOYX4OfOG1ofNuBF/C/Bz4
uW8eKk79DqBP4Dbrlt9MeGiMPoHvevzhVMePMZifA1+xeNm+ZJv3WO8A97A7
NerYvrdY7wB/eLiv/E/TMMzP4Xsxu33dS95YvMU+BvC0e6vVF/4egj6Bvz32
oeDHHgv0CXxzZ/2Z9z+rok/g3sv+1K5ZFYn9BOD9FPIY0S7sD+D3jHQfnddP
3aGLPoEreWz8cTF0MPoEbt7q/KGK8rboE7hvq+92I27fwnof+KvywHsdrgxH
n8BDfq3KCvq5En0Cv99rzIyJz5aiT+DJ1m69+hzshT7hvv3EgdcM1l8YS/aF
6H4+S18OPHjcFHwCvxzqcq9dVZQZ+AT+wdhIxXr6TrKfQz8cf69790hV9Al8
u04l3fBlJdmfoQ2V5BWOFsA6xz4MrfboYWjj9mPYVwG+v9OJ7oVBm8i+Cm16
LffIxUe6ZP+E3rqq79Gh307CPoa8vsevkcNfZcN1BPnFJV4pQdeeoDfJH7eO
7L+6BTERKgnozWVp6zinoo7s7qPnWsn2zT6niZcUjVJjl6iGsJtl+mNLdNuq
/ve5jLJqres6mT5Yvqcim/RVjd2u8/223kNpv2viB+WN//XhP8Q658Xa5An7
VxHqrJ5qzEOtox+E3vZ2ZGsv/VIfoPgXvXH343dkT6hbttvteh69aTt1Gv5f
nKvPWXRlTmugt2OS96MaW3Umad/xJRvQm9Lwbn7/xemjZ14c4ngeve3116L/
i9O4b+DXZf+k79/OFg1ndG3bsyedEmJk+z+tJH9VWIduySLZ/s+X/7wlqbAn
wqs7iWX6Py//8+PUgf0+dlmuukz/R+JTTZUNWfn91IuG1rgfSnw6qbKZ42/0
SZObj/uhxOcjVfae17ga/35O+P51k8TfntXODMnxn7IP379rZ/UOb2pqz3pr
NYY/jRmA79/ZXfqJ/ovzQdD1DS5F59AbVThoyX9x3o58HOagqIjvX4nP5jgD
w9en7PCT9t8kPpvjXGYUsjlLps8miac5zqtWmbbfZfppQ3bWUbYBbdnOBXty
ZPs/XSSeFdjQg5/XyPZ/Wkv+KrL3rs483EOm//NV4lmRvaHsvfTRHWn/h/Os
xLrsS/qUUyrt/9yV7CfK7IPRixePpx8Q/R9lNvuf7efZuoVEP60t+zh9fOjZ
wm/ok/PcfB1Tfv1wu9cJ9LlO4lmBjTeftGLWp154feE8K7I3H2tcP6rhiz5p
iWclNqWtyZWU1dJ+2uAwPda/OU6m9PBGH5l+Wqclhtr/xbns58wzI2T6aVY3
qkucilqxjQNVk2X7P0MlnluzSo5ni3bL9H80JZ7l2ClRZ0dky/R/5CR/xaz5
rU8vknSl/R/Os5gtPVXksTlS2v/hPLdhzzoEh9Yd1iL6P/Jsxm+PWZV9Mc/k
+2mt2Ok5J4ZGV47B/Ifz3Jr1D/fa711ejT73STzLsTFZg/80xHuhT86zHDsx
c3WX367SftociWcxu7Ps9dRxutJ+2miJ5zYs8yd49BaZfhrnWZ4tNdhm1Vqm
nxZX+apJ17aeCX+0YIZs/+fA+ndMUdJvZktYWpBs/2dhzZe9AboNTKf8+hfx
Mv2fERL/f5n7KW1Pd5Dp/8hL/jYy7qOuiZxaS/s/hRKfTUzOg6IBfs526LNA
wkWsezvn2bUFG9HnfomfemZFrn7xvtvu6HOexMNvZvD0aYOP3THC/HyY5Hgb
mKSsx60LjYvRZ+s+Jm7jm+O81JSk5PNF2k8ruGhFNzX9Y0IarYKeyvTTrg6b
JPovzk/dVKzCZPppnGcRe37Kx1bfZPppSffD9xYnfWSmB9zPl+3/LM2+3mQb
8IV5UdfZV7b/o/L6wd4bTt8ZA/f6Neoy/R/OczVTkBAYK5bp/wyXeP7BXMjd
+Ul8Rdr/aSP5U8M4ftconJu8D31ynmuZ78vvV97pE4I+F0u8fWQ2vva9EqF3
GX22lfj5whTb73BU1XFCn9ckHr4zzxVXpToskvbThko8VzMRR0fIt6Wk/TTO
8w/GZdZdi1yZfhrn+SeTt3dik+iqtJ8WI5m/lsnwux4l209b8tzp77aiJEY5
1+GGbP+nuLNHo3PRA+Zlj+clsv2fh+dWNQXqZjPdegXEfpXp/3S/daRpfVE+
4zV7/91Umf7Pesl5KWYuqNTfqD4v7f8slfgvZdZe+RAweYK0/xO6KFjk2BxP
xvr+H6ftYtHbFgl/wJz9O1n/ZaYnelOx2STyb45nvVLghlW3pH2zJZLx+UxU
cHTcoSxp3yxpS6poXHM8NrG37pvK9M3kJfOUMlGf1bJk+2bx0z3dGpveMRV7
fmvJ9s1Oc5waknh1nGz/5+dYyTyUSWO/5bL9nyPc61IxkQeGb5Lp/5hwcVJz
uziGnZHp/1RI5smm7BeNOKP5WLrv/Wr67987KvxRnyDzV7fRz2TOJxXW9uy+
tC9e6MeG808911bamtFa2h+ruSk5X1SZ0/OuC2T6Y6e580sZHRirpiDTH/Pl
1gOV/etHL9n+2L0syfqhFMoe68r2xyK49UYtbKg8KdvnecatT0ojw6lJts9T
ryNZz9TAu3O0F8j0efpw659KS/9QHddR2ucJ494vVPVmrRmfXkn7PD8l83yh
WtX4Z1ffX4fennPvU2pjZ+WuwQvOo7cGic+flMHjc483j5f2c/px+wC1eu2/
zsl9pf2xGdy+QZ363tYtN1baH/tdLNlnKLUX27oOlOmPTeH2JWpYj3gn2f7Y
OW4fo262v20r2x8z5/Y9epBTq2uy/RzOZxOVdtp5/lqZfk4mt69SL+XS3afL
9HM4n3+pAR9mDEkwkvZzdLl9m/Lu4eryp10hXn+ncvs8tUVM6w2+aIL7207u
ukAN9FzYOeC8J/rM4a4j9JeRA7qM3OiGPjnPTdSQFL3Tq303oc+/Es//qJyi
wMLYbtL+WH/uukYt/JD1bFaktD/GeW6gakTzRynK9Md2c9dNavWYCUay/bEo
7jpLdXSo7i/bHxvAXZfp1l2t58v2czjPbeiEkZdc1WT6OTO46z49ant77dk2
0n7OKi5PoFef96LjxLWYH+7m8gq6l0bukSLlw0T/oTX9/vDJJf2312J+eIHL
W+jUqec7DlSYgj65+lSeDu47MnVRozX6zOXyIlo7YGp01klT9PmRy6Noa21N
+6nZ0v5Yo8SzHB3RXf/cwQppf0yDy9NoVieq90iZ/tgALq+jfdMUPGX7Y5Zc
HkgPm/Bkl2x/TI3LG+mpF0KDHsj0c/pzeSZdrvbLr32xtJ/DeVaiH8rna7ax
k/ZzpnN5LH36kXrO72BpP4fzrEDfTV1oaKDRH326cnkyHX0/QK54Tzj65Dy3
pdvM+PXvDdOI+TbXj1KmVY8qH/72qIboPyjTw31WzUnw+4z5IedZib66zOpj
sLu0P8Z5VqRPBt/s5HhB2h/jPCvQZ5PnUE9l+mPqXN1BD7d+F58s0x8byNUp
9JvgbC/Z/tgerq6hGx8/1Hgr089R4Oog+p37+LBwmX5OIFc30cF9lpw85ynt
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
kVbwQ88Qf+HpobZWy6XXtbF8/BuCS45/l7muxfPxDz9+5puHzHWNex+1Yhd7
MMNl82EdSfytWXHfSVay+TAXvxwrbxksv18mH+bil2OVCyjfH3rSfJiLX8xq
zjWYfnCaNB/m4m/DZg55bqkQMwTzYc6/PGvYxeZU7AszzNOu8/26gbuFedp1
Pv6dRTc1zjraYp7Wm49/+8STulc0a9AzxO83RPzDLd4bPf/l46+RY/vGHJHm
aRB/5hGq5ttTaZ72ko9fy3n01G0yeZo1H/+tJL9jsnka9xyjeqah3wQz2fpu
tWT+34x6nHOKlUx9ZyWZp4F5fnJGsalMfddTclx/GTOj5/X3MqT13W/uPhYm
d8yVAQfeSeu7PEmcTYzcBY3Ndu1WSe+3lHARa5C9wdJqCn6uJxrL9+uULwnr
Dm8+/sujJm2ZXrEfPa/k419yY19gNysTrDtG8/HnpOw3fD9Qeh+mFh9/Y4Ph
u+0m0rrjFx//5pk7wn7L1B05fPwXXt8w2idTd+Tz8afOnDJDtu5wkMTzkYke
fCFCtv/QTfK6X5i+f92dZfsPzyTzfGeGfj40/rpM/4HzX81ssR6hf2mQtP/Q
QzLPD2aLa0bqhYnS/kM9d78W8+PetMlLCrzR22I+Hvclm0ZrGl5Fbxp8POGj
A1y7jZHeb/mEj6dnSZXfkt6dsS6m+Xg6hf/M3fFEWhdr8fFkbt48Y6FMXVzH
xzPumPs6a5m6OFsyfy1z8X6+tWxdvFHyPkpidntqCPpdh7nnljAnMrb5y/a7
hkniyWaMvdd/vS/T7wrhn4uiY3iJSZfpd7WVxFnMPPGeOE+ls7TfZSqZp5Tp
MWZ0/IPi4+jNkI9nS+O1ymuud6T3W/Lx7Fxge622yg29DeDj6fkzZuDmZdK+
TRAfz32TpIqLMn0bER9Pq28rwhiZvo0hH89AxWpWtm/zmfvcn3HtNOSibN9G
UfK3nBqjIcs12VncPNRGBdl5NFjug7RiSuOr7OuqsnlcnNQoQZwK7CruuKiC
H7LHVUWp8q/7qkO5lvzERPRjx79u2B1H2y0WUj82/Ov+EfhXpQv51z0qOF8a
9Hr+dSsF51eTVpY8gOsB9fSR7HrQou25B3NRHgc0BP3At9x6o9any643Tf7+
8BrqaaDs+tRgh3DrmWolWM+q7DRu/VOHz8iufwX2E/d+oV6+kX2/iFhD7v1F
uQneX1VUOR9P0nTvWzNGn0JvCnw8a7uXOT19Jn2ewFA+nnOC97sqPYOP57Ng
f9Cgv/HxvBXsJ5q0KR/PG8H+o0V7cPsD9X6I7H6lxb7h9jd67QzZ/U2TLeP2
Q+ptsex+qMFy8TdSs2fI7p+qvM+/1EzBfqvATuf2Z2qFYH8WsS7cfk5pCPbz
KoZ7/lM9ZSfc/0UM32frR/QD3/Lx+z0XXF/ocj7+51Gy1yMFWpGP/5vg+qVK
D+PjPym43mnQM/n414fIXh816e18/JrXZK+nWnQYH39Zf9nrrxbLPT9KnrZL
lL1ea7Lc8w7b0OM3yl7fNdhNXD5AZx6WzQdUWbHkr5juL8gfFFju+YhytLog
3xCxA7n8hFYX5CdVzG0un6HFwnxGNIXvs6UQ/cApfPzTOgvyJfotH7+bIL9S
oCH+IYJ8TJVuw8e/V5C/adAn+PijBfmeJj2Ij/+pID/UolP4+OP3y+aT0N9W
plcFyeafmuxkLl+lF56QzVc1+H1DidYR5LeqvH9F2vO8bD6swPtXpBcJ8mcR
y8WvQD+fIJtvVzGc/7Z0B2F+Lkrh+2zHiX5gCh//9lGC/J+ewsc/QFAvKNAQ
f4GgvlClN/PxlwnqEQ3evyK9bp5s/aJJB/PxxwvqHS3ef1va1FW2PtJig7h6
it5WIltPabKvufqrOU7Z+ovvB6qp0lmTZOs1Vd5/B/oDI1vfKfD+VWixoB6E
76Go0KHrZOvHKobz355u6iGoN0UD+T7bZ6IfCPEbFwjqWfoNH3+yoP7l+4HN
8V8U1MuqNMS/XVBfa/D+VeiJsbL1uCYtz8ff/ots/a7F+29PTy2Xrff5fmCE
Ov3lZflX52XSPlUg1zegB2TL9g00OP9f1egngbJ9BlW2H9eXoNcJ+hIK7Aau
j0EbC/oY0N/uSD8Ole17VDGS7w+6daRPzhf0SfjPETrSh1rqB/53/6G6oA9D
B/HxGwr6Ngo0xD9P0OdRpSH++YK+kAa9kY+/WNBHgv52R1p7qGzfib//LUKd
FfrUosfx/GiBkPPHy8a1k+1rVTFVfJ7WefHr5z3f4v2cTF6L+WQVxe0b5Uz9
IuH4v/x9niqCeaAOraBO8s/Jh/hFvH9hn02LluP5lHZCzh8XTR4X+CPuv2Jh
HQn7oiIRPIfwruC5qSIRPF8xRcChn5lhnif8HFkEfA//OwtC/tZ8L8Fj+flZ
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
JZpgYDRgzTNyX6X+HDL8eqL9FXJfpfZ5GN/z0blL7qtUzLNl6ccDgsl9lfrU
w862dawhua9StFW3cTobg8h9ktpSeeu2W6YtuU9SdaOrH90bmUzuk9SKTa2/
+Vz+RO6TVLvLPomrLErJfZL6M/uOavvBIeQ+SS1Mq9dynNaF8NZIfcoyVEg7
bEpe96n4wuqF039eJa/7VM5P7xfvwn3I6z61Iz+G7vc2nLzuU8esb1raG2wn
r/vU0IDlvsWLNcjrPlW24M2wKu0t5HWfSmxFHx0//wR53acCgl5dmPdkL3nd
p4Zp/63ev2Yged2nbP6V//z58gR53aeSJmwLMxrzmLzuU8vixvYK+cOS133q
sl6/R1H3d5DXfaq1QWWtRh1Zl4nprz+7v7r1Vp7wLKaz1k35W/ZsB5nH0ifW
9CyJfjaXzGNp7TD54EmdnMg8ln4Sbv9if6E1mcfSD3s/sj59pJTMY2m/db0W
Wc0bTeaxtJ3Xw7wTPVeQeSzd5ZC971mHiWQeS0/PrFt1/30tmcfSWRsPz031
WUHmsfSvYSkmC88eJ/NY2uWr5cB3VkfIPJZedOGx/sCRNmQeS0cPdAjSenSP
8KxIvzd07tfuZwpZl9GRY3t81J01nKzLaCrpfKmOtgrhWZG2OB/rGbJSh6zL
aL26lXVTlv8h6zI63N66Yeio42RdRtuszim5+KOWrMtoa+rJVPetXcm6jH5+
yHOs6+xWhGdF+lZAr9DdidFkXUb7fZu1O7ypK1mX0fcLLxgWn5tE1mX0YGOf
9Zs8rMi6jA6o0tP50fUvWZfRoRVpLnMVd5B9Bvqz3JHSpwXzyT4Dbd4j32Xq
gEyyz0AfdC5ue+b9ZbLPQFd8OZp9z4kl+wy0wp72dnOOniD7DHTluV+XH+UZ
kH0GOmniAfG+4ECyz0AvVPta3uZ2EtlnoCvNe0x6+fM02WegY9eavBx7ZzzZ
Z6Drnponzhl1g+wz0Hvm2Hwz9P9I9hnotxvjl+/3ekv2GehROsoGvzqfJPsM
9Dfty9c22XU2Ifpj9Jnx0bn3Ld+aEH0weuw/f6PbH4aTfTA6tY458DjKmuyD
0RudJw4/GdZD6LOZR/jlL4n/mkz2wejsPuGtPp/VFPps5jN888YlBZiTfTD6
jDqrP3ZLH6HPZr46OM5Gt2sW2Qejf1g5Lbo51ILsg9HuGloODzpuJPtgdM6x
OWEDH64g+2D0vONz97w71Evos5nnNpQ8mrkh2HjMiWUVSU5d4HjZ/f4Hhzyc
r2B2cNj9p05F0v5hIxMWacb0MA/2mbryv/sdgfexX1O1aFatee9bGgY3nOSQ
m7LZmcNq/C1mSZ4zVYP9w1mp296H3am2MNxc/WiIbRrypzPLRs8J0rC85ZN/
0l+3FcTJesyz39DPJ8pCf1HHzD62SsgvPxKt3lHW2WKW5HkNHZFHHDUxLz41
31zV7V5XXVtpn/AN8/6MvIOb2dPKJQZORd2Qj69Ysvmb+hZTr+mNk5Kc0A9b
9XhXyjftF8bcfcm8n//6fvxzUDlv6sgtPeeXi7ecMVdZ5H2yKKk98sKNPiG+
R1wsOG9i5HmD8jyyGtQsR28ZuHJ9UR32A50Pum8ZmrbJctLYrMb+tjnI9x68
tvnYvWOWtyV+FGnghr17+K9wP2txMuZghb9uR+SLel/6563eYM49l7MT8sNs
cva664PMO0r8dEMuWvyq2qRHb95PT+Tjj5hr/K19ZdLI35/NcUX2Of+cUk/J
OlFB/tqw86GwpLcWnIc2yAMuP+1bp7PbUq/LmacBur+xL1c2XuXvn8wiS1F2
ZPBNpyLkRlt/dInTFVFvxn5+Oj4A7odXZMUOE+J3PDpgESI53k7I66v3Rhl6
Jptzz8fsinysd9TjLVGxZtzx9kR+TmW4/QHxalPuOWsd+DjF7BT+uaDccckj
X9TOaZFL8VNLLck6b8B+l6leofwcryGU3TDLk33xd/fE7H2/tflbwqfx8cN9
+2K24d+4kaoKQ/n4uyIPMHper3ZPh4+/B3LTpW7VM3YW83G25eNpZE7zz9VU
knj+h32hnjN/tq/NXE4ZStZVBfKz0Z4H+rt6USWSeOD7Ao1MXLKP982Oe8y5
eHogX97LOqpbzigz7r7GJuyH+PDPmVSXePiMPHJ4wgy6IIqfHz7HrGEyzQNF
b6buMNOW7D/S+jfFqnyS9++1Zisk+1UX5D9zyy50UUsx556TJa1P+86MOzap
b7ZFgWT+dshP/buUev74RculknnkkC/q3/3rievWVJ5kfA30GajvlmEKjp/P
UYZdrhr0gf2nmZdHrLd79OgJ1Vbyv+F7HOWUO/88w13ZpgYBsC81c+Xf4Vsb
Q3dRPyT7sxLyL7vGrqp1HUkZmhZMwn2pmbvNdf09ShRhWSUZL60Ht5QF+owV
51twz43thnxa19CVm7Y9NV8tOS5pfTegYZp5aoinWS+JT/BWQ92d8kbzgHyw
+XLJeHXk7hsujT8+/6oF9xy99shVo6/It2/nacn5FCP/tXVtj5w7val7kn2g
Duu1QeqM69GSfdR0ibcc5I2LWnWNj47jP0eH77nUUBr8cws5b4rIle9tuGR2
2ILaIeEdkT9zVJ88OS7acqTEWyfk5fZH66/veWNRLfHWDbmp6IVFuxu55py3
nsi3nBq3quDLEd4PeGikSnvNXTDzlLPFA8lxqSDf8FI5ZcQYW8tpEj9tkGsq
mY6+vPa95TXJfvsb66/V1iP65YwaR7U775GZgPtVI2Wq0pGpinGluOcLw/d6
Gqk7/HMF76wO62qL+1hznbXwiZ9SSpAl56ETco/e+iWb8h9YcB66ItdfNXWZ
p9cdc2799ESeVplXRK1xMbO8dWqlzD5GjwjUbIwX11o8lByvPPLlRwdVFtoE
WIZLntuI+xj9/JRVTOH335bLJOcX9zH6jPPs2w0zx1Dc86khfjF9nH+OH3dc
GlK+4ti7RZ+PWXDHhfsbnaiYk+w397A5d1y4v9GZIjlfP/exfPywvynS4jeO
M0Zp9Lf0y767shD3N0V6stkJvWkvz1jSkudDVSAPMoj+orWvzpKLE+JRpP35
5+ClSuLURF5wZAO9YZmVORdnD+Sbbpbo5X9oMHXdYpTZiPtec54cPGhJ49GR
lt0k5/0z8sfFX0/2iA/kXxfmV6Gn88+F415XC/nQvt6va9qfNP1ZuT7kX9N3
zCcre3okvI/StOTzEJbnbIHapr4NY/2NifyNXdjpqaajv7Mxd7/Ld+yjiky5
55tdF+5vzKgu2962c04Hjn3UnY4u4YvT71P8PMh388890xeOp3omeOUrZT+h
PIVx0l7qt6a6nbltzHmQ3g/zgn8eGvH5NW31TydpRclUGA/HRTP8c9I8hfkY
rXd1gs7qdyK87wXiiTlSrCw6nsnXg7BuRaK9K3oqlQ5/BBzr+HEhCW/rL2bx
//utOfASvt/4hhg/Wzg+BXixcDy+rh//uobC6yPlNDrZuM3NKCLOcmpKahzz
U/Ee7KvwOQJVSVn73hh1nYi/nNrQsX76ya8PKSvJ/EU4T9UjBZurNQ/Izyko
G49xYeoDkqg6ou+az/ddiT48Ne5S9ZpN+y5RjcRxbeSPi7+eYjypf0Zp5G6K
IfvzVO/MmqpnugnUbcn+U4H8yuUDT0rGpjfvW5LrCx7vHjO2oT7Uh/w8hSr2
n/z3zuDTEA8enwl/Xri6qQHnf7PIYNuTKH+qXBgnU+BUsmWIwQVivEhkMVn3
aK3dCfCD3I7vMy8ixm/hxwt+V735/ZgWs8A/1wbut9RGPu/3w28Ka5caC35v
vZm3rv5bmbLGyEzwe+vNfOfZefWVd23MBb+33swdptGfT//qaiH4vfVmPumq
aLPhimvC31tv5ic3zVtRMA/uA+TXbTMvmTK2aJfFQEvB760388/8eMHvrTfz
8/z8gt9bb+ai6Vw8gt9bb+Z657j4Bb+33sy7/+COV/B7683cK47zJvydehV2
tqrLuerqNaYCn8387cn6rGUryoQ+m/m5mU+0PXclCn0287Y+DllepelCn818
ossVn925J4Q+m/nDQ+NuD/+kZyn8/XoVlmrT48uxLoeEPpu53YPnx+IHXBD6
/K+O48cLf79ehR3nzc0v/P16FVZpGxeP8PfrVdgYPn7h79ersOdncccr/P16
FZbtKPCGHLwJPSuyemsvtjvHPCc8K7JH05dvLU8dZyL0rMi2N+5VMCWlu7nQ
syJ7aJBH0Z7aQRZCz4rssqJjUz6mNRKeFdleHV58GxISRHhWZDX3nA+9ol9F
eFZkf/2iilZXtKeEnhVZY3680LMiu5ufX+hZkZ1bzMUj9KzI7hrMxS/0rMjO
N+GOV+hZke26TuANOXgTehaziZfqTRo39DQTehazdgrdm84HHiM8i1nlKv3Z
aQZrCM9i9npMoVn3vdsJz2JW/3egfOjPiZZCz2K24kPeCqfkMsKzmDVf8n1f
7gYL4romZtPL55ylBi8gPIvZPfx4oWcxa13JzS/0LGZ/8fEIPYtZ/1gufqFn
MWtSzR2v0LOYtY8WeEMO3oSeG5nIxOBdYd1mEZ4bmRuOacopbk8Jz42Mmd3x
/OWR4YTnRiZpr+OpjsPiCM+NTJfxeoHjXdwJz41MSu4ujcxbmpTQczO/qJW4
1nkz4bmR6aE57Ut1tT/huZH5wI8Xem5khuZx8ws9NzLBfDxCz43MeDcufqHn
RkZuAXe8Qs+NDJsk8IYcvAk91zA1t+JPNQa7EJ5rmOMu579+EFcRnmuY/BfX
Tv1KTCM81zCj4te7FOjlEJ5rmGGec70OsBGE5xrm1sdlt1WfmhGea5hZ+Q29
sgqPEZ5rmDQ/Udj9wQmE5xpmPz9e6LmGMf7EzS/0XMOk8vEIPdcwr/j4hZ5r
mOR87niFnmuY4SkCb8jBm9BzOTP3embp8NgjZkIuEhWaJNQF5xwn/JczYWvi
TH8ptSH28+ZXWB7ieGeoqqnwvJQzm95d9+wZVGAu5CKRwbv7/pfelxHnq5x5
Gro19fu7DxZC3vyvf+4hw8U/iPNYzjy4kJZ+xOq2pZCLRCP+KXk51qYT57ec
ETetWlkwegYl5CJRcPh2jS9qC4nzXs5ca70pe2HiFYKLRM86jojdr5ZErIfm
PFBl1qbPU58Q66Gc+cHPI+TN/9S4eYTrpJyZw8cp5CJR57NcnML1U854XOQ8
CLlIdI/3IFxX5cz5MM6zkItEUbxn4XorZ0LKufMo5M3xlHPnUbgOy5m6BG5d
CblI1M1MsK5wPLGucDysK2LdUkv4dcuPRx7Bz0OsQ2onvw6J9Uax/Hoj1hWV
zq8rYv1QrVs8L+XUbJ4T54Vy588L4Z86wfsnPFPneM+ET0qUKDhe5HC8xP5J
/Wl5/6QutLx/UkUt75/UyJb3T2pky/snldby/knZtbwfUnTL+yH1oOX9kPo/
+yGV0vJ+SI1qeT9ED8T1nQpp+fpOPW75+k6NaPn6Tt1o+fpOdW/5+k6xLV/f
qdSWr+9Uz5av79THlq/v1LCWr+9UaMvXd+r/XN+pP3YtXt+phJav7+iNyFfp
7JbzVVqz5XyV7t1yvkqfajlfpYe3nK/S71vOV+khLeerdFLL+Sq9vuV8ldZr
OV+la1vOV+ltLeer9LSW81V6d8v5Knoj6i9aq+X6i7Zuuf6ivxi1WH/Rq1uu
v2iLlusvWr7l+otu03L9Ree1XH/RfVuuv+gVLddftEHL9Rdt13L9RRu3XH/R
8i3XX+iN6CfQw1vuJ9DnWu4n0Ptb7ifQad4t9hPoQS33E+hdLfcTaNWW+wm0
Xsv9BHpMy/0EWqvlfgKd7dJiP4EOaLmfQB9ouZ9Ah7bcT0BvRB+Mfsr3wYh+
F33lf21deVyNyx8+OOhEx5Ylcu0kbpJLy1lmbOVHKEsScm2lXFddlBDZs4tU
CCVLqERKsryvCtm3K5E1SWUpHNcSx+8w877zzpz6r+dzPvPOzDnvM893ncpq
/V1wVPX+LuhUvb8L9qje3wVnVO/vghnV+7vgmer9XXBl9f4umO9Wrb8L2lfv
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
k9mfYuAfvCvwRbelzPyLwSzsN8DjQAGvf2Du/u/zhHtkGop4UFN9cNOcs8z9
78XA+kNuOy9ex3y/xWBt38jCg9kVzD4b1usecdK94DCzDzoQET3zx7I6Mcw+
6MCl/LRWo+cmMvugA/XnzEw933Ahsw86cCVN9sjiciNmH3RgYPiQJd/X+wk4
FPA/cN8Jeh8M+nzirC4psZDZBx2wu5TRINX1KLMPOrAhdebc97piZh90oMfB
zneLNjxi9kEHplaNDnjnGsPwqh4sn3h6qfuOQGa9evCx7g/n6D4DmPXqQdNt
zvGl9+8z76keuKicD8+P682+F6BvfOyQDqZBzHr1gMN9J+j16kHG4xW/O47b
yqxXD1Z4j7rTpXces149sE7u6veoOc++X2BoJ8tXERYhzH27cvh63Fltqvwj
w59y+N+1BZ9Tzqxl+Qf+s/WvvJHj3jH8KYc3/1Xstb3Xl5m/HEbjvhP0/OVw
9gyr2Y9aRLG8BE0CYp85XlvH8hI0dTT9vNTEmeElBbQ+FvTIzrwLy/OQL6/U
x8THsjwPi/peL+zY/j9mPqTvBD0fBax55dnQgJn9WD6Hfw4ra6tVfHOin6uE
xXuqXn3f2Js9T2HAscdDhu8T+rkZ952gx1fCnp6WdYMab3OixjHorpc3S47+
7DuBcdGPt7r2oKqfcVs8jjAffo5l1huPcw5O1Od/ntc3fPMqUkPF+3oE3Gl3
2aafcVt6HAW/f1Rxq1k+e8R7oAT8e4CXzqH1BxU9voIPzlo9urxTCTO+gre6
EN/tav1IRlco+HGmTqtHlrdhnms478o9o7I6f2CeK+cn37nSbPKN/gxfyfkX
T+deeG/mydzvLOfDNtvUn+xhz/CPnI/p4e9Xt8YrZj5yfsDVE5ouPVYxekDO
J53e3/hL6Fdmn/XctYBL18HM7gyv6rlOZk18R31eyMxTz30LmT188IgIlme4
iqy9Y3RDp9PfrwHPKjmYWUv5DzN/PXfTbMMz7eueLJ9wfpuPHPbJLWTmr+cu
htetWl3uxvIJd6Tv75FX+65i1qXjXMuP8WZyd/a84PYmJt7buiWOPS+4tCZW
w2Y8PsaeF5z+Lyutynw1w586rirB9cj+2R0EnhT9aRVd9WEf7GLY84Jbtd3L
s1P8dPa84ED64/RUawv2vODiH9Z0TlNvZM8Lbuaq0D8uLjrPnhdcr15DfsiS
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
ByxOAFI=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJwtmnWgF8XXxvfudefeWUBECQUM7O7u7u5uxcYGfkgY2IgKorRId0mLSHdJ
SKNSIqISipjv53mf/WOYz52d7+7s7Mw5zzlDnfvrXf9UmiTJV/xTSj0+S5Iq
1Lvyx+eUafDvXOsDj4V/gqfCK+BIPZQyFf6N9unwKrgC9TDKdHgH7UPgKfB2
uD/8FfwL3A8eB/8MD4Ynw9vgkfAs+E94FDwb/guOZUnyI1xOXYXyH1yZejF9
voUXUX9D0fvM0tgpK+GceqfGqOdS9uU35SVJUoN6T0qAq1Hv4NpmvSNlHL9Z
SF1CnXNtUvHchfw9H9Zkraf6lfIMpTbX/tW8UU/h2nL1p56gMcG7UDejvA9P
YICfU16G19MWeX5O2ZJ4XGWUZonrCgVX5b4ZvDIkScUSj1ntf+r7ULYm7lux
aN+L/i0T999UniRf85xPYpJMpF5Ce0ZdUjz3h8TzoHHMo/94ri3WK1KPpsyB
/2a8k+ClcNA3pCyC01LfIxb30Vg2Jf5OX3BtHvW//DYt0WT6HSuVeYx6Vh3K
/RoPbWPoPxf+h/77lHl+5nM9wBuKPjPosxquSH0gZS/4evofBNeEb4QPhfeG
b4cPhmvBN8M14UrwLXDtUq/z8+E6cHX4Sj0X3gO+GN4b3h2+EN4PrgZfDh8C
14ZvhfeFq8KXwlXgXeCL4MrFOjyPf2pojuDr4CZwY3gIfARcB74Lrq51AF8D
71bqvXgBvCdQAb4B3guuCN8E7w6zVZNL4D1gpim5DK4KM03JFanX+zrKWsrM
Yo9U0hjLPOea+5rw0/BJ8JxS9+0Bp7TvU/AptJ8N1+eec+H74LbwbfD18Dtw
XfhZuCc8G94Vvg3erv1N+b6wKZrzc2n/I/G1NYn3zfpiH21hrT5IfQDPvZX+
18Fv0/8K+AK4MfwS3AgeBDeC/wcPhC+Dz4MbpV6TJcV6u5f226g/pL0x/BI8
GP6FZz0Hn8qzLqf9fPgl2q+DL4Nfha+HL4dfgzdq/Nzze+qzKCfSXo/2U4Lf
/WDm7BBKTfocRP0efTprndPnY7g3vBT+CO4JfwO3hD/VOofbwL3gJfAJ3LOe
bBFj7Eb7CM0R7V3h4fqucAd4ALwK7gGPgn+Au8Mj4Q1wR3ggvBq+FL4WfhO+
Cr4JbgGfDV8EN4HPgS+Gm8IXwVfBzeHT4HPhhvCV8I3wu/DF8NXw6/C18K3w
+/DV8M3we/Al8DXwG/A18C1wS/gG+E64FXwufAncDO4ED4K/hVeV2q7Ifv1a
7nnWfD+ivc88/0h9VG67XIE5f057lvY11IfnXq+lsiXa17SvLbXPkO/Yv8y2
sSlcC36ea7vR57tS23Gtyz2oV+s3tH+rtUZ5i/YxjO3Y3DZ9IveYzOadrE1L
/zdka8HpsiGFHZM9Kyvsnuzfm/RpC8/QXi7zWtWzqhd2W/a7Dfd8VvY3+Lcb
E/ss3VPjPIC6NX2elr+kz35l9i91Cp8mXyCfcR7XL6X9ZZ51M3wP3Cb13tte
7M2/C5aZ/iuxL9yW2J7LxyyQXU5sUyoX19Xvu8S+WD/crcz7Tayx6p3SYg/q
HbW/Tw5+zt+FXdA3/YExHZ/bN/9W2KutxbPlR5aW+hstL/V3Es8NtlmyXT+X
ezy7lNh/l5b4twuKe+jvTcX7qN9PxXN2Fu+iMWlsGr/G9kcxD7rfjuIdb+TZ
d1G3Luyq5kK2dUmpxzCP+glKfbgffZ6EG8D94Zvgu+GP4IdKva+7ww/CT8Hd
4MfhF+G+8KPw83Dv1PpCvk/je7h4Vg/a92fMD8AHMubHaH8B7pO6739F//s1
JurPaL+91P3bwafC58AN4L7wl/Bm2SXW0jP8PZt730P9CO2dab8Fvhf+GL4b
rgt3gu+DH4e7wHeU2m63h++EH4I7wHfBD8Md4QfgJ+GucCueVY+/Z/KsM6lP
oF1C9HT4OPgJ+bLcenER33fv3PpgFVw7ty5ZCe+RW0cuhPfJrTlWw7vnfrcF
cMxtf2fAIbfNnQpXya1rv4bLctvlaXB5bls8Hc5z29mZ8L65dc+3cK3c2nQF
fFhu//ojPJX3qgW/DQ+A34c38o7T4QPgd2mfAR8Gt4Br5NbQS+DqubXyN/Be
uTX0Mrhabn28GK6ZWx8vh/fMrdGXwgO55wcaA8+qkNvuz6K9Um6fMQc+NLd+
2ggfmFunroOPzm3jtI+y3H5rCnxQbq2/Ht4lt82aDK+Itu+d4SXR9r09vDza
r3SCV0bb+k/h0tw2cRJcMbd9nw0fkjtm+AE+ILe+XAvvmtvnzYUr5/Zn8+Dd
cvu5+fB+uXXqd/DBubX+BrhObs39PXwac/GKfAf1cbl9g/TkCbltvdo3068J
fU6E98+tj9fQtizaz3WEB8Efwpvo0w9+V88K1gK1SmyLP43WFsto7xKt85YH
awz5k79p+4zSVGuG9q7RPmlVsK6oXmI7OI32/anfKbd/k5aQz9tAW7USxwuK
EaoVccKw1O8ov9YpWg8t4Z4d4AZaM/Ce9KtaYj80gfYRtP9D+xS4mvwZz5oI
j4X/pb0j3FDrEO4crbeWwm3hF7Sn4PZwfe3NYM2jeZD+aUf7i9qPiiPg4Xp3
uD/cQt8arlHiMWk8VQuWb+5On1e1v+gzBG4Nb4Y/h9vCv8C94Nf1jeCxcG/4
D7g3/JbWDzwYbgX/BPeF39EahvvAb2vNwz3g17R+4J5wc62ZQldIE/ZiXr+k
fQB/76T9C7gXvAMeAXeGt8JfwYPgv+Bu8CuyP/BI+FN4GzwOHgj/CQ+H28Nb
4GFwO/hXeAzcE/4dHq21Av8Gj4K7wNvhofAn2qfwGdTHM84npZGitVcXvuO3
0b6qa7nnrD19Zqf+XTt4Vurnd5QPTf38DvCc1Ou6ReJcgOb+I3haahv2ATwp
tQ07FH4g9Z5oBU9JbXs+hCennvvW8NTUa/kQ+aLU3/ZVeIT0fPA9tf41f0O1
hlPP0xB4Teq5Hyx9kvrbvg2PTT3HWvPDU3/Pd+AvU3/nd+Fxqb/ta/DI1N+2
OTwq9dp5HR6dej2+B49PvSfGwJtS2+/94Dvg4+BT5E/hk+Ej4Ufgk+Aj4LrS
6vBh8EPwMfBB8H3wifDh8tvwkfD+8N3w0fCB8L3whfAZ8Ivw+fBp8PPwBfDp
8AvwUfAB8D3w8fCp8LOpbYls19DU9kF7aZ2eSTmW9sekUeGT4adT+5xj4EdT
x3qKkedk1okVCq0oDTtD2kjrH54gLQaXSHPKfqg//LW0RLD92BO+OrX9GA9v
gVdH6/vPym0DRkvLpd4Tn8EL4UXR2vQT5Sei45CP4PnR8UZreGF0bPAxPC9a
u7SCF0THKm3gDdE6ow/8Z6GZv4B3FnpmDJzm1u4T4HXReqUX/Eehn0fDc6Nj
3Q/hxdHxT1t4TbQG6gGvjdZSPWXXo7VdN/j7aG3dHZ4Z/Q3eg5dGx10d4PXR
2qg3PCv627SE50R/1w/g2dFr7n34m+j4ql25bUBX5m2R9Ge0vhxB+1/wilLH
iVujteDn8C/RenEI/HO07hwMb4nWl0PhzdEadFC5bXCNwg7LzvXlWStS27ku
0tKpbVI3eHFqu9sPXpnabvWRPod3FLpuFPfcGK0j+8E/RuvF/nBJbv8yHv63
8Bdfwv8U/mUsrISJ/NdX8LZofTwM/q/wO+Pg7dGaezj8U7S+HAhvita+AxRb
RGvWvvDv8FPwSPi4YO2tdTIpeq3/V+iBlVpvtH2TeW1Lsy2GayT2y6vhfRPr
t1WZbYW+9bzMe0TaT3Gc/LNiw2m065XkZ5WT+v99xzPW0X5w4jXwRrAOl6bV
96xU4nHcGbxfpOvuCl4D0iGnB8cImre7g7+L/N2ZwbGA5uet4Fyr9PA9cPfE
/lT2TnZvGfe/I/j7SqPuyGxbtB9/y2w3tL9ejdblY+jzWrTv+QJ+OdoOjoKb
R+v4sXCzaNs3Uvor2m6OhhtF28GhcJNoWzkc/j2zjdUe35zZRmmP/wwfnXg/
bodPSmwf/oHPSrw3/8ucl9D++jdzXCMt+nfmnJX2zi+Z7aHsyfrM/kj7a0Nm
X6Z9pxyQ/L7W3i3B/lEa71ZKp8S65VpKm8Ta45pg/yjNcFWwH5RuuTjYT0mD
XUB5I7GOujrYJ0pvHB+cA1ScdQTlscRr8tjg3JRi+SuD/am0xGHBcZb2lHJo
iteV35YdViyrvMfzwTZW+uHy4O8rnXlUcAwo+3ZJsK+Ulrs02FdKr14W7Pel
V48Ozq0pLpMmln9R/uGMYN8t7XdIcGwo+3NgcKwnm3NQcKynffpEsB+X/nko
2J5Ivz0lPZdY2xwcHEtq/z4YbEN+LuZcORDFIE8GawPpn8eD9YB011nB/l06
85xg/y4tel6wf5fufSnad34O3xisf6QPbw7WPNKENwVrJGnCh4NtmvRYXUr/
xDrt7ODYXLaocbT/HkZb02jfPwKuF51T7gnvEZwfk395Jjqn3Ju2qsE5N9n/
asH5Mfms6sE5Mdmoe0ORO1LcBF+YOAZ5sRiPYtXd4RsS+6Ba8B2J7eoT0fni
rrQ9G52b7gPXDM6zyR7WDs5jyE4+HZ3j7kVbjeDcnWz1U9G58u607R2cu5CP
uA/+OHGMXD8496j4+tng3KbispeDc4+KSR8Nzm0q1msWnMNUnNsUHpY4nr0u
OJ+muPL14DMmxdTXw28mjhmbBOc8FRc3h79IHP++EpzzVIxct9initPvD0Vu
TfMfnFNV/NgwOK+ofMI+wXkw+cSn4R6JY+QGwflS5RPqBedpFYceE5y7kJZ4
JDivq/haue61hT1/LvqcoC/XX4g+n+ivvRidR56iPRedy56k947Wf+NlM6Lz
1xO0R6Pz0ROD8+DKq8hft4jOTU+mbd/gnIz8e8PoM4/BsjfROnKc7Efh72bA
/4s+bxii/RGdv/5ScxytNb+C34/O6U+Dzw3OZclHt4zOxU+l7YPofPp0+CJK
w8Saqn70WctA7Z3o84lOcIXgHLLikQejz0Xa09Yg+hxlkPZ19BnJZ3AIzgMr
b1A5OF8t3ZUF56WVc3g++symn75J9LlIN3iX4Dy28g/Sq7KTspcPRZ+pdOB6
peB8tTTbo9HnJZ/KnkWfo3TWXo8+TxogmxB9rtMRrki5MrGm3TU4py29Vxac
X1X89Vj0WU6X4HOr+fARaJnbgnOzyjtNznxmpHsuLjSA3mVp5jhCa2YvyqOJ
57lK8JmL5v+lYE2uWHJt5jMI2aLDg89B9K2/zxwbys/KVtyf+Jt+lzm3pjWw
JnPOTbbxJ/jMxD46p9yeeK3qnGh94vx5DD5D0dprTJmYOOZtFKz5FSO3DD4L
Vu5lWebYR3O4MHO8I1u0KHN8pD2isx7l739lzjZmjn1kS5WjfCDx3K3IHHNp
nbwQHKMpBv8xc3wkjTEx8zmd1lWb4PNK5ZQ+CT5/VF5uVuZzQNnG14JjHOUl
Pgo+X1bu6L3gc2rllHQOrfPoBdLiwefgygu9E3z+qzxJi+A+yge+GxwTSUNO
ynyGqPU2NfPZotZVK8rMxDm3BZljOvmF2ZnPE7WGXyzsm3IamzLHhtJXrYPP
xJWLm5L5LFL7a1qhS7WGPwg+c1cObUbms1Gtw5mZz0a1v5oXY1D+R5pK/kV2
4OPgs1flBndmPv+SDVF8KL0qX6Dzd83HkaznNPjsTzZqJX2OSmx/tmQ+g5NW
1Jm1NOYxuc/MqhTnMn9mPlOTzdmW+VxPunFdofGkCUuCz/5kD5dnjrVlW/6C
r0hsM+dnPj+Vz/06c3wtXya/Kf8oG/tm8P8xUN54a+YzPmlXnSvtWpzp6Lss
o11nN/8HRECJAA==
            "]], Polygon3DBox[CompressedData["
1:eJwtmgXYFdUWhuef7dnn/KhICAgW2J1XvTbGxe7OyzURWzExECxAQhQQCWmL
kBaQEJAOaZCUkjDAxOR+L99+Ho/M++89c+bsWXutb601de54+OqH8izLWut/
u+jf7qUsu0D/viReUZ5lXcXni18QfyXuJv6P+EXxMvF74nriJuLl4mMraF7Q
9fS3i2OWzSlkWW0d762/TdF4T82/VPyK5q8S9xJfJn5VvFr8u+afJj5P818X
j9V4I/FHGv9HPE78hPhj8Q7xGPHj4g/Ff4sHi+uL3xH/IG6ne5gu/kLX+0I8
UOO3idtr/FvxJ+LbxR3E34kHif8r7ij+XtxDfKG4qXileJvu7wTx6brey+I+
Gr9C/LrG14hXa/w48REanyHeLD5SfJL4JfGHmn9dWu8N4nUaP1h8rMZfEH+k
8evFbTT+jXil7v9N8URxL/FPmv8v8Zma/6p4k/gI8b/ETcTv6/xrxG9o/jrx
KJ1/hvhJcVPxSPHp4idy388Hmn+tuJV4vfgbXe8U8fG63izxRvG/xSeIZ4u3
io8XnyZuJu6t8y8Xv6bzvxb3E98oflO8STxAfKv4bfEW8cfiG8RtxRvFG3S9
k8XH6XozxX01fqW4ucbXpu8/XHyixl9kPcTHig8XTxcfJ3tbr+M9y7KsTlHP
WOP6L6uiv92r8SkC/TnbU3yfuL+uf4v4LV1/s/iPgtfjfI03F28RHyU+OXi9
Omm95ooXiI/Wd2Xic/TPReIWGj9Bf3tf13pMf9uqa/+o80/U8Rkaf0XjHTV/
pXia+FDN/SvZ43ad87nGfyl4P52l8Xni2zXenvUSDxbPEb8oHqL5HcU/aP7Z
4n9r/EvxbRp/m98jHiS+U/wu9i8ekp5XXfGp4rniUvTzuTLYnr/VPT8s7qvr
/yn+XvyIeInGj9H9lmn+uexlcUuN/1rwfj9bPF+8veD9cY54ofi3gv1HXfEC
ca7zzxNfIn6D/aF/99Cz2qi/rdTxWn2qiDeJ1+j4bs3vouN3dTxM8wvR++Wy
YH/DGqzQ8e5lXhueB/Zyof62VGNXiF/Fn4g/EO8oeH9eIF4ivkbjLbAv8Yfi
a8UtxS3EH4mvF7di/4j7iW8Rt8OexQPF/xRs7/XEi8U3p/3ZVjxAfKv4LXE7
8SfiGL2fLw/2j+/osyz4mW7RWt+j8a467qy/DddYMXp/XBHsf3eJ3p+XBvvf
A2TM1dN67aHjvwr2n//R+CKN36X5ncWdxEPFLcUTxGPFk8QH6pwaOv8l/W1f
HffV+H46vlnPf7bm7BDPE2dp/p7iu4S3BPuHQ8RPiu8X/ySuJr5bfGuwP/sn
7Zcdut5EcVXxnVw/2B9VF98jvi3Yv+0lbiD+b7C/YLN+xT/JXy/Uv9+Kv9Nn
kY7/1PyJOv5R1x/P/k2/b5t4nHim5qwRf6/PYh1P0/rspeNqOp6s8b81f4b4
d82fIJ5c2GlCWVWNNyD+CD5nL2t8rHhSwXGxssbvEU8s7FyarBK2Kv5cTPzc
Q3yXeB+d/4D4jmB/t6/4QfGdwfFm/+j9dndwfNlP/JD4ruD4c1DR69VZF90q
/k7XP0t8isbniHeN9qfXBMfPWuL7xf8L9me1o/fvPcHx7+DoeNlQ/KO4UnR8
vCHYv+4eHQ+vDY6/FaPj4XXB/nyP6Hh4fXB8qyG+V3x7sP+eJ24qHqb7PVH+
4qDoeH2fxrcxX7+nJHtrwjPV8fiS7acfi6b5Q0q2ry655+NPThWfq/NfI57o
eofw+zTeiPgRHS/rix8nXooPwn7wwcRX8YHcn/hRcRPxZPFgXa+6vm9AdLy8
W+NPEv/EB2CP4keIn+I62LP4YfRBdDy4V/w08SM6Ht0lfoL11W+qpd/3gfgv
8fkab67xZ/V9ub5vqn5fR/y/xoviaeJ3xNPFJfHAaH1wj/gpnmfRvm15sD9e
qfnjNP6DxvfV/OXiMewH8d7iF3T+F+JBml9NPDd6bw/V+PHiQeKjxQ3Ez6BX
xPuKbxQ/JH5WPF7cnxiq+et0/WkpPh0ofib6+/tpvKp4Vcnz2R/7iXtrfB/s
Q/ygrre+5P31h/ggjW8QzxT/KT5YvFE8W/x37ni4RjxF/Ku4jniteKr4N/EB
4ra6/mLxhODxhuJPxN3Eu4kHR+uR+zX/WX3/p9H6sVFuPXSfeKC4q+bvqvkj
ou3r8dx6Yki0nntA3FjcQDwAe9T8Cpo/LFpvIZKf1/hw8Unih3PrtabR9ztU
8/fS/KHR8f9BjT+n8a9Ltr9fxLU1PkXcNrOei+Lp4k7iGeJy8Uzxe+K5ue/3
cV1vpLivrl8JbV0yb9J4TfFjGv9U3Ie4Kl5Y8vp8nft5Lij596/O/fyWljx/
Y+77XSb+TPytuJZ4nri/eKW4svhtXX+ZeHLw83xHvAr7FR8mnl/yeq3S/CoV
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
A6uChUI=
            "]], Polygon3DBox[CompressedData["
1:eJwt13fcjvUaAPDHi4cX1anEidJpn/ZQacsuRMkqIUKRfUIdK7LKzC6rrMrM
lp2dmexdtpQmbfpen/v94+J3fe/rd9/Pc7+/9Vxdv0WV5hmpVGqDyCnW5U6l
hmVPpXbDj+T106nUNjaFnWZL2GtsO5vKvmdL2etsJevJPmfDWBX2ORvKdrEP
2Qssdy612j+zra5lyovzR8Uy9a+xkZmp1CrtXtrr1A1X/7TrW9lk9h1bzNqx
EuIx8Zlrr7s2St8R8ou0S6jzX2qFL7fa9X6SL9hoVlPNFvE/dlhcnC2VKuKz
HFW3Wp5b7FE3SM1pdlD+lbhQ3b3sgOgiPyK6qqsgP6hukfycZ2xmb7HdbDY7
y9awLmwnm8l+YatYJ7aLzWJn2Gr2Brs2Pp/2y/wb8aOa42Ktdh6xz7Uhataz
kfID+k5lL7ET7HOWV+xnQ9kxtibeudjLBrMdbEb25O8Rf5fObAMbxQ6yafF8
tpGNjnfAprPG7DBbwXKKnWwAO8SWy3OIHaw/+5p9Js8utrN+bA3rL9/ifmPY
s+wrtoxliG2sLzvCVsrTMY7YO+wkWyfPF9+ZDWNfsknyb91vEWvL5omirCG7
mZ00DjapG8eOsjmspZqPxJWsNLuUfaluNLuElWOaqdVsjMal7AlmqKTWsA9Y
AVaZ5Yk5xN5n+VkF5nGptWwc+zd7huWLOcfGs8tZNXYB28hmsltYbXYN+5qN
YhezMhnJPF3ln7GsIHua5WXr2QRWiNVgF7JNbDa7jdVl17HD7EN2BSvJLmFb
2APsfrHYB27j2rvm0WT5f7TLqyugbru6KexqVpEVZDvYI+xhsVTfdq6N0HeS
/Crtx9Vdpm6buo9ZEVaW5Wdb2VR2HavCCrHd7CH2oFjifm1de8/9psmv166q
rrC6Peo+YTeymuxKto/NYP9lz7EibD+bzm5g1dkVbC9bwh5hLdi97Be2OL4H
i0Xxnlij2FyfoSmbwtqyG9R8Ku5lL7Fb2Sl1C9h97GV2G/uW3cxuinr3aOHa
IN8jr4GzLRYl8aX/8snnq7lH3kjfW9g3+o5k/2KlWA62km1xn4nsBJvPWqu5
NcaLmO9ac9cGesZm7fHax9TNVdfC9S/YBHaczWOt2DdsPbsg5jobzm6P8SIW
uNaSD3a/OeHaL+h7vboj8V7YHaweu4EdZXP0eYVNZm3Y9WoWiYdYM1aU/aRu
P+uv/Rnb41p+72ApK6n9KnvQtd9j7LpfEzaJvcqui3VelGZt2cPsT3XLWCnW
hj3E/mB3xucTC92jlWtDfI9Z2o21P85I1tVYXxfGWGNN2d3sR33nqWvGprJ2
7EY1s+JdszrsWnYo5pG652J8svrsklivxFtsMevNqsr3qpvP/mDrWXe2SjzN
3mTlWaZ8tajCurEKLI+8j77XshfZjWyn5w5i97PX2KPsO9abXcPqZ/09Yl4O
ZMVYO/YIO83Ox7xiP7EVrI98rLpnYnyyWjEm2blYC2LPYctZ79gD0sm7/N27
vEv7brFJtI7vxorGOI59Op2sIX9nJvM45vM7nnE3a+1+xdzvuM+ykldgHVnp
mBLy38U0dojNZO3jfep7GauUtebEevouK8O6s4rsbzaClWM9WSV2jq3Qvzzr
wEqxjDiXiBdirrDn2OXyvvrexBqz29lBffuzO1nLrDUixvgAdhdrxe5jx1g/
djNrwu5gB9hg9gB7nRVn37OcuZJxEuNlS+xp8pHqHtfuxSq7dj72ClY15h57
nuX1+aawumwMe4kVZH/HHsdOZe15Ma7+EnPjvMAWsm7yqfrWYx+wJqxwbGie
vSr+llljMs4509TVZ2PZK6xQ7I2sVqzp7EV2KZvM6rDRrBErwP4Un7AjbDbr
KP9DTGeH2SzWIXJ9X2TjWFN2RZw30sla81tmMmdj7k5UV4MNU1dX3UVsNHuS
9WVVWQ42nlWL+c1qswtYdt9tc+xhWfMyh3x9OlmDf81M1rdY5z7Q9yk2QF2N
eCVsAqvOhrI67EL2PqvM+rPqLM0+Zs+zkawBy89GsYqsD3smazyvSyfr8tnM
ZC+IPWGtuiFsp7qJ6uqxMawS68eqsZxsjajJ3mZV2MXRVzzLemc9I9ac9/Qt
y3qwJ9lfxtBX/E02j3VjT8oPie7sU9aDVY49IOYmW8UGseflO9PJWTqbA03J
WFvFjnRyNo9DTpy349y9wnPfYMszkvW8gPe8h3dkM1hH9rh8l2jPprP2rKz8
a9GNzWfdWSX58Vjv2DLWj9WQF0snZ/OTse+JHzzzJBugvVLdQHW15CdiDmdP
9pT4LHG+36f2U/ZnRvIbpwfbzxawv9hG1pMdYAtjvWKbWC+2nP2fLWS9WBl2
UHRlc9mbrGLUiSdYe1aSZZMXzpX8TjgQe3zMT/c6xntrL1XXV111+WHRgy1g
PdlT8qPibbaE9WHV5JP0r81GsYbsMraHzYnxzNayrvF9RWc2i3Vm5eW7RQf2
CevAysl/jjHNtrFxrKn8tBjONrARrEF8Ds8ozGqxq9gXxtX3/F22kY1kDWN/
E53YTNaJPZG1N8QesSh3sj8MNf6Ha5fQ7qKunLpf3W9bOjnjnctMzpBxltye
Ts6R5zOT34Xx+/CHGOdsk76j9G0kH+Z+j7E3WFl21v1+irnEtrKx7BX5EHWP
sk5Z+0yc9b7lg9gaNoTVkZ8RY9kONoE1l58VH7K9bDJ7VT7T/RqxiawFu4qd
EgPZajaY1ZZ/JwaztWwoqyv/JdYdtp2NZ83kv8V6wvZnJL/f4rfLDM9oyCaw
5qwI+zXWY7aPTWFt5EPVFWedWRl2Js7FrAEbz5qxK9X9KEawzRnJ79/4jfgP
BF0xZQ==
            "]], 
           Polygon3DBox[{{1588, 1587, 2284, 988, 989, 2285}, {1746, 884, 993, 
            2287, 1592, 1593}}]},
          Annotation[#, "Charting`Private`Tag$4331#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFmnW4VFUXxu+9zHHPrBEUkFJSSlAEpFuULgUVBARBQRQQVFAUURQVsLAD
uzuwu7u7u7sQARHl+73Pe57n+2OzfrPvmZkz5+yz13rfRbP95o6ZU1VRUfEF
/1QjHh0VFROziooepYqKjsQzK3ldqKi4JlVUXAr3LVZU7MT8WfA+zHeHL4T3
gzvBZ8OT4MfgLnzm/cT2jBXMj2e+JXNlRiUjY34y8zsw3wE+A54AF+BJ8PZw
dXg63BneHJ4Gd4K7wRfAU+Gu8PnwFHhHPrchY3PGu7xuz/yf/LC34Xbwb/B7
+j74L/gDeCd4A/w+3BFeB7+jz4L/gNvw+UvhMcy1hZfBe8A7wCfDe8H7c70W
w2dznc5inA535FptzzHL4T31PZxTR8apvN6M+X2J7ZjfGp4P7wofwnvmwEfx
Gb/zejzcirgV79uSEYwLOL4R86cSt+V10/yaHsPr35i/l+Pr8LomozrjfOb/
Yf484gw+/zP4AGIt/lZkJMZR/O1H5u/kvfPgb+Bb4JPhDfCT8Cn55zwFb+L8
ftY153dfxvw2fMalxE91P5ivRjyI77gY7kNcwtiBYxYROxEbaL3pnHndlriQ
eCSjNXwE8Q/eP4H3tiauZkyEtyPOLvq9M4n7M3owvznxT/62D9ym4HPZmlFg
nMY5tdH1Zr42r7dg/FfpWGL8Cz+te0n8iXt9DsdnVb4+C+DvmV/F3z9hdIEr
iZ9p/cEZ8SvGCLgB8SfGHnAz4puMXnCR+BFjV7gm8UvGcLg+8QvGMLge8UfG
GLipfgfXtDvchWt8IOfxC1xBfIu/9YZLBZ/n51rbHLMI/gS+jvkT4W/h2+BR
8O3wkfBI+DZ4gc4XvhU+Au4HXwEfpM/O/IwfAO8MXwnPhIfAN8GHwYPgG+BD
4D7wZfAMuC98OXwgPBi+ET4U3g1epfUMj4Xvh4+D94LvgxfDe8L3wsfC4+AH
4OPh/fT86J7yGztwT9oz2lR5vXTI+ReOG8gxWxHfYGwHF4ivMVrpuhFf1b4D
/8f9fQVuAW+EX4Kbw+vhF+Ft4bXwC3AzeA38PNwUXl3Nz18FYxOvX2e+NbGK
+CyjMfwrxzxT8LP5M/wc3AT+Hf684HuaiB8zOsObmF+rawQ3Iq7RfYK3IX7P
6K91SuzBNVkJ7w//pusL1yX+zBgA1yb+qnsD1yF+rXsDl4nf6N7oGSF+p/sK
1yCuY+wONyb+p3sDtyRu1P2AmxP/1X2CWxC/1VqBqxP/0tqCGxIP49y+hm+G
D4W/gm/SPgZ/Cd8IV8Gz4O7wlvBR8CC4Aj4I7gpv0P2GOxD/ZkyF2xP/0d6q
vZRYg+MXwAPgLeAj4YFwET5EuQmuBs+Ge8Al+FC4H1yG58H94YAPg3fWPsY4
UM8asZL5mXA3nUvJ1/xq1l495o+HRzJfFz4OHgHXh5fAo7TXwR/CV8EN4BPg
3eA6mfPCcLgWfDQ8ROsUPg+eDNeEF8KDtUfBi+Ch8Jl897HwUp6DKzLv8RcS
T08+ZhLneHfmffQs4oGMD5i/UvsQ/Ax8GjweflG5SWsKvgteCB9Mru/F6+35
nF2IdzN/tPYq+B54EXwC330zfCLxUI4fqnzO8afBR8DD4Avhk+Cx8H/wdOVv
ju8D/6B7CHeHP4TXwsfDMzimH8cfCe8Nd4WP5m+3w98xN5P4ka4/7zmO+Uu0
JxC7MH8tPJv5CfBL8DnaR+GH4BO0ruEn4ZO1p8JPK1fCo+Gn4FO0puB34EsK
rndehs/VfYffhi+Gp/N9Z/P6Y85nOPFhXQfm94XfgC+Ep8Bvwiu1ZuG34Iv0
fMPXwLPgWfoM+BrtDXl9cpq+O3O8WPsl4xj4Bj0fRe9tQ4p+rfnrs//nLeWs
YQWvjTOZ3yoza+7azPVDbz2bRb/3DK2jovdwfea+Ja+X6mXuLfEi5m/V+eZr
72piC76neZXfXy/Pmw3hdlWusVRf1a1yDVEjrzU2q3LuXMj7f+LYuziH5fDf
8BPwkfAP8B3wXPgL/V54Tp7Lrtd6g/+CH4aXwuvgx+CjM9cbd8OL4T/g+7U2
4NXwA/Dx8J/wg/ASeA38ELwMXg8/rmsG/w7fp7wBXw/PLTifKK+oXmmY/0Y9
V5O5Vmfo2eNaTYUvhzcvu66qmf/eyGsz5YXG+fyvlX5em+a1rq5Tk7zeUg2j
+Q55LdMw/y7FRvm11Wc0zq/plXxnsyp/97iCa8tHM1/3Wnn91j7PiTr/Jvn8
xkqfl2rHtvBtmf++itgz83M9j8+bVvDz9XDmekz3WDWbrkG7/NxW5e/V83AV
42C4l+5d0WtYv0XfVT/PkVov9fIaS7+lTn5NauXrRudWP79ubfN1XTtfYxt4
3vbhO8bzmQOI1zE3h++aDb8Cnw/34tjeVT7v6QXXLQ/y9+75fLcq15s9GNsz
+jL6Vfna7V2wHrkvs07pWeXrOTQ5/9bje2cmP0etiq4le+b15EHJv70l84ck
1+2ttTfCh8PbFa179F2dGY9kPgdd23sy1/4XEXsn5+IttU8m5/qa8M7JOb0W
3Cs5524B90+uc2qrJkrWJlWqnZN1TaXuW+brofvZL//NnfNz6ZL/du33txDn
F3yduufXUNwrv25LkvVOWz7zOPhEuA28NFn7bA8vT9Y1O8DfwK8rL/N8/BGu
F5Ujvk3eGwfBPyTvt0Phr5P3z4HwZ8l7+C7wp8l5qj/8efKevCu8Nrmu2ANe
l1xv7An/DL+v3ApX45k8PM9HykvfMX+7ap7kPXkw8wPgIXBdzvn75H1+CPMT
k7VYM+ZHJ9c8DeE94HF6puExyTVSI/hwxnV8x9781mHJtVB95nZPrp22gYcn
13UN4BHJtdbW8IRkzdsUHp+sc5vA+8EHwC3gKck6d1t4arL+bQ53S66H18Dr
kzXaXsrdybXfVsz3TK73ahRdu6iG6QVfCp8Dd9NznXldaP1fkayduzN/VbKW
7wlfmayve0jDJev6rvC2vKcP732ceGeyjhjK/MpkT6ALfG2yLugHn5es6zvB
FyT7CZ3hu5L1yDD47mSdMhy+J1kvjIBXJD8v7eF74TvgkfDDydphN/iRZE2x
O/xosnYYDT+UrClGwU/Cj8Bj4KfgR7WW4JfgZ+Gx8Mvwc/A4+BX4ee0T8DPw
47rO8NPwY1p78KpkjTNYNUuyJhqkdZGsg3aGb0vOLwOleZN1caloXSctUIY7
J2vJ0D4KnwLvWLRuVT45ndgxWS8keS/JOrQIn5LsP7STDk6u+avD7ZM9jc10
r5M9jUz6O9kPqaa9ItkDKcDTiq4jprGed03WF3WY+ylZS06Bv0zWmJPhG+Gr
9GzCbybvydqrb0jWjLvAtybv2wPg65M1Zn9pWPhVeELRfoXyp7TsNWE99ifz
H3HMuxyzD/wx/F6l68m34dfgifDqZF08VfeO93WC/0FPfcX8p/C+0s3J9fCI
kuvTtfCj0i/J2mQM8/PgGdqH4cOStUBNeHCy1t7A5zwQ1mOqY1XPjtYzq/oh
WeP/rdoquZ5vU3J9pZpqMfP3M3+19knmbobPVY6A70uuD9uVXO/dwvl9y/c8
kFzf7sj8SHgXeCN/H5XsIfwLD4J7wuvhWfAUeHOOfy7sK5Xh6cn+SRGenayn
qsNzkvXUFnDi2LlwH37LAckeS4n5GcleSpRcs+sctiTeHvbLVMP3Tb7m6+C9
4KHwf/CeyZ7GJvjOzH7XXcT5yVqvFp95TLL+agAvStZo9Us+Xut/bMEaQs/j
GQVfR13P3sRTkzVUU45fkbm2Un02LfOzvEK/JfPze2bB+Vc57iGdQ+Z1dVnB
uULr6nJ4cubnennBdYf2iqXwpMx7xTL45GSN1oTvPThZq9Yo2e+TvmsGn5+s
E5vDC5OvbV348GRdWVsaJ1mr1oOPTdakW8PHJ2vbhspfyXp5K3hBsp6tA58A
H6H8Ai9L1tGNVZPCJ8GtpMWSNWkLrcFkHdpS6z9ZLzeCz03WsNvC+yd7jAme
Bu+tfQMem+xTVcDvwk8oL8CvJeus7vA7yTqrF/xBst7sC78KP6hcA7+erJvk
J2dl+1PSiRuSc/S4kutS1Wh3ZNbdWi81ytaDmm9bshZT/SX/8J9kX25v5t9L
1nS9S/anpHGkId9P1n19mH88uebpCP+WrCtHwb8n67Ld4F+T9ftIeE2yNhld
sr8mbbI7/An8gvZ2eFN4nUnDSsuqDrmC73+OY+6Ed2L+2WSt3alkjav3nsUx
zydr7c7Mv5CstbvAf4f9L2nhgzPvkxcU7KMp12iPkP6XrriJuDKzVpDv+lhy
Pd+hZF0pD1S+rJ5trUPVK9IvqtVVs0vH6x4t4e9dk/3Pv5ifnOxhZhw7Ltnb
rITXF7zP7KhnJHkPrMb8E2EvqQqelOxhFkr2K5rl2kW+7nbwgqL9benKucRz
M2sX+dLyh7vCrUvuGahefSCz/6CaVB6F6md5x/dm9ttVg9Qq2wPZKZ9XLquq
soe8MVlvjpcvkaxJJ8L/JnvdE0r2GKWnVxftuyrfbla2FtV9V25SvdeKz5yv
tRfeF5S/pNca5Fp+fdjfVM2wH9wk814xA26ZeU+YDjfPvFccALfI/Ayek6xH
dtL1Z36bzM94r7BfrPzSO+w1Kx/tDzfNvAfuCzfMvG9MhRtn3hPm5Z6F1vzh
Ye9D63B+2B/R+uwZ9qCVRw4LeyhaPwfCrTLvITPDXpX2lilwo8x7yKSwz6W9
K8r2L3R/e4T9buWFWUVrp4OJn4X7SaoBvgr3b1QXfRHuG6mW+DLcy1HN8HW4
t6Sa6tNwf0g11efh/pNqjEfCfqjq84/C/RjVugfBrTPve/uEfTrlGvkh6j/N
Iy4ruo5dTqxZth7WPiOvSbXxScQjwv6RntPfwt636syuYX9fdXi3sC+vZ+fQ
on0Tff6WZesxredDwp6acvqcsAenemBu2HdTDbBb2K9Ujv497KGrjl0d9utV
u74Y1t56dnYP+5jKQWPC3qhqmFFhP1T1wB5hn1T1zOiwB6q8PzzsySrXvxT2
jObn10QaUf2rqrLzpWq/VHauld9YKLvfoLprYzh3qh6rKFufqz4sws0y978q
y97LVI9tUbb2UA+xVPbzr/7RJ+EeofTCuLAHqny3Z9gvVs0wMOwLa88ZFPaL
tc8MCXu4ylmDw36x9q7xYe9V+XdB2A/VHjsx7Oeq3pgV9ulUj80Oe4uq38aG
vVrl36Fhn1r5sX+4L6XaZljYL1Z9NSLsO6te2ivs5yrX7xruS2n/nBD2jpX3
dw739lQv9Qv3jVTX7RLudSnn9g33hFT7fRPuAUhrfBjuKUqjPRjuAUhvnhD2
oKWdl4S9YOWp48Jep/LyorB3qTy+NOy7SbOfmPut0uAnhf1K6e4Lwn6cNOb5
YU9NuvumcD9VWmNZ2MuTll8c9k+Vc88J+3TKoeeFvTnp93PDnp1q72PC/qnq
h7PD3pzy7MnhXoI0+ynhHoN0+rFhj1W5fnm4xyBvYWHYC1ZNcmO4DyRtdUO4
TyNtdVm4NyOf5KKwJ6j64eKwR6kccWm4x6kccXm4ryOP5cpwH0ha6YpwX0ca
6qpwr0ja6upwD0ma65Zw71m+zSXhHqpyzXXhXpS028qwv6n659ZwT1pe0M3h
3rP0+7XhfpV03x3hHqT8n1XhHpI8ojvDPVdp/+vDfS9pzNvC/Wx5SiPDtb50
wVlhL1U1z6nhXq88mWfD/Xj5XXeH+1XyST4I97zlAxwV7iWorns+3I+X9/VC
uE8v7+vpcD9JPsZT4R6SvItnwn19+WaPhXtI8kB+Dvcapet/Cvcjpf3vC/ec
5J88HO5vyXu5P9zHkpfyS9gflMZ/KNwLlG/zfbiXKV/i17DPK6/gh3DPUp7D
j+GepTyHM8L9b9V+j4b7cPJkngz3w+TD3BPuq8kbfCOc36XT3wznYnkUr4fz
r/T4veHem3yh08O9ZPlUd4X7x9LXZ4a9ctWiK8L+uLTq4+G+oPyoV8P5XZ7b
K+HaQL7cO+G6Qn7L++H/oyAP5+Xw/yeQX/daOF/Lo3s7XG/Ie3kvnB/lBb0b
zvXyduR1y2+R7/JWuFaRbzMgXP+pxqtdtgekWqVLWHtLs/8V7vXKJ/k3rMek
39eG+7vyWP4M96HlvawL94Dlt3QO9+BVg60J963lsfwPBSjxEA==
            "]], Polygon3DBox[CompressedData["
1:eJwtmnXAFdUWxe/9vnOYM4OE3QEWEiotiAIqKSINgkhjoGCAYqDSGIgKBgZ2
JyrmE7vzGc/u7kTE4q2fa/4433fW7Jm5c+fss/faa99GY6cMmFxTqVRu1p+g
/6lupTJUk82EJ6VK5apYqWyr+XYaV2u+UqNjje2cd3H0fHONSzS/VGMdzbfU
WKb5Ecl2zltH9z5BuFa4hcYMzQ/T2FTzi2SvK/sw4aerlcoi3fv3olIZlVUq
g4T/En5UuI7+Fzp/rY6dyT2T5xUdG6f5URpVzc+SLdP9co0VuuY7nXOIbCdp
BNnbacwqP5/zt9E4XPPjNJpofqOuL3TtedxHOGmcr/lE2aPmdTQO1vxYjZoa
XzNd8/F6xrN13sn6vLP17McJz9Dn3y38rPCDGjdo3kPn/Chbb11zq/CxOucr
4X2FbxM+Tvhr4UN1/kHCUec/KbxA9j30WY2F19fzHSL7SNmD8BOy95H9duHp
uv4b4V7CtwhPE/5SuLPObyP8rvDtwgOEewj/IPyg8GjhwcJ/Cz8mvEr4J+FT
dP/FwlOExwuvI/y08HDh/YV/0/kPCw8T3k/4V+GVhd85729J9FocpWPHyHaT
znlI5x6g0VfzVTr2kGxHahyh+bU6dr9sYzSGaP6Pjj0u22SNSZpfrWP3yDZF
+HDha4TvEz5Dn/O35rk+84LS5y7T/0Y19sVJ5Xo1ivb1RzO///2Ef9G9Hsn8
vvoI/1z4HQ/T/fes8bt/LPP69JX9V9mfF75XeEi0v66n8/fV+afo2Li8UnlH
9qc0nyD7P7LvmuxrjTUma/627E/KPp7nlv3xzOu3v/Aq4aM1pup+N+vYw7I9
p3GP5oNlXy3bT8LvCZ8kHPTZi4Tr6t7baxyt+3fSaKl5K41TNG+gcybofrsL
zxVuq3usqdX+1j12xTcKv8MthZsIH1PYd3gnvBt8GF8epHN+k203jT91fWsd
21O2VzUe0vwg2f+S7W5dW6/Ge2aGjr0i+0rZR2r+p+z/0f8OsjXXGB/8TG00
3zn6WafqnBN0/E5d86Su3SM5dhBjDk3e48Ql4hN7f8fce/s+HWsoW29du6Pw
DhoblDFmUfSeZ+930T3b6t7v6bzl5fqcWXVMIh7U0fmZbLvp2IG6d1ONZrI9
oHusK9s0XXOi7HfJ/jS+o+NNZd9J46boeAfmeD2df3v0d+Uet2o+RNeeUfUa
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
            "]], Polygon3DBox[CompressedData["
1:eJwt13W4FdUWAPAD3OsNVGxASRGQ7pLu7u4LSiOlAgKPVEKxUUB9KshTER+i
8p5gNyYgoIjY3Shdgr/1zfljfd+s36y1Z845M3vvU3r4xB4T8qdSqT0iUwzK
TqWucnBrRiq1JV8qtTcrlbqcncVqs5FsMhvMRrDb2NvsM1aVlWTDc1Opm+VL
xQXsCzUFRD11LVifnFTqBnXr2ZNihfrK6oqzPMeL1CwWF7MfnT9bNNfbiZVm
h+XFRTc2kF3KTsrLiN4sj9V1jb7Gm8fmi+nGLazuO8cFRRN17dWdzz6X5xN1
WXNWkH0ozxAVWB1WjZUy3pXGuUV+qzjM9qg5XiCVOiHqO1eU/cDOEs30dlRX
hH0vP1M0ZR3Yeewz+Wl9dVgzVoWVcI1hxlkiv0lcxL5SlyUaqGvFyrC/5ZeJ
PmxY/EY+b22949jDbB0rqy6DVWJD2Jj4jdS1ZLPYRraZVVR3CRviuvPk80VT
dSPZ7eruEPOcG6ruarZcvk3vt+qKsz/kF4q2rAc7l30iP+Kz1WSN4/szXju9
U/g1YrLxarJubIn8VXVb1J2jd7f8kN4arBE7i+1i+1hV1iA9XvvM5LeN3/gv
43Vg17EH5Q+JpawG68hukD+v9xW91VkHtoA9x15mhVzjY/kB16jOGrIhbLy6
e/hW9g0rxQ7Ji4mubAA7m30U96C3GruCVWLF9A51DzfKF4p+rA+bq3azug9Y
PffSn93J3mFbWW3Wg93MXmdvszqsJ1vK3mDvsMuMd0peVvRlw9mF7Et5pqjP
WsZzpbeF3pnsGfYsK6cuk1VmQ9lYdgn7TX6+aM26scp6m6ubwZ5mm1gt1p3d
xF5jb7EBegezRexltjP9DvbLTJ6feI6O5SbvUrxTS/ktYpCaCnovdtxSzXXO
zVVTnw9gd7F32TbWgA1ky9h7bDs7oPc9+VHf/bF4l1xjIBuibjF/Rd0udeXZ
mawWG8Emsf5sEFvIXmI7WEl2UH6J6ML6s1mssklyQ/xOYoS8gnup43i8ujXq
Hk/fy/sZyVwQc8KaeCZZY3Wj+IPqnlHXljWIuYTdyzawLPaB/KS+sqwGa88a
qRvJH2BPs46sCRsdzzjbyDqzZmwsW83+zw6yHfJscQWrxzqxpurGsFXsf+wM
n+O0vI4Yxa5i2eq2yk+5l3KsJuvCWumdwB9lz6fnv0/l54hCMZf7vE1YVXXP
xhqibo26k+wX50uJ7qwzO8L2ys8VLVgTdp+4N+Yt91Re/+54f9WVdnyV49ud
u0N0Za3ZRL2P6X2BZeg5Lq8uhrHBLMX2yy8XA1gfdlrvX/Lyoj/rxU6xP+Xl
RD/Wm51gP8tLihLxvrp+pvFOOK4hhqsboq4AOyavJvLYIJafHZVXFVVibtOb
jx2I9UQMVNdXXTfXaONzTGJr2YusO2vLJrPH2UvsENspzxENWV3Wm3VVdz17
ir3JjrFv5EVEB9aaHWffyouKjqwtO8q+lhcW7VkblsO2yVPx3bBa6Tkr5q7i
OcnavC03WZdjfS6Rk6xV21kRx4Udd9Y7V++smMfZ2awVm8quibWMXcg6stls
BrtbLIs13LnLnNtlvOXye2KdY2XZR+wu+Z2x/rMybCcr5Lig4+bGm2K8Cc7n
sgKsARvHRsU+ghVlXdl8NjuecZaP1WNj2IiYx1kuaxbrE7uaFWYXsU5sDpsZ
6xHLYU3ZJDY+vj+Wn9VnY9lIVpQVYV1ijWL/YmeybNaETWTjYs5m57P2bCab
Fvsmdh5rx2awqbGuskKsNZvGpsSz5nd7S/6Hd7Ukq5Rev2MdL5aTrEFbfVc3
yBfEHJ+TrPUfsKycZNNXV/9ovVem9xyx9yiZk+zlPlR3hmu8q+awa5RRV835
TPYOO8guZVVZDz1z9WyOtZAdivdD3Rb5n+pKscrxrrK32X5WmlWJ/ZDec/S2
4dPZtbE3Y+eytux6dl1WsqeMvWWpnGQ/tsP9rZSviPWQlWMfs2Ku8bu+C0Qb
vd3Tc0fMIQtjTjafL4r9ltin5iLRTl1P5+ewms5vjLUr1nDj/s1+VVNa9FDX
Jd5VPsf5TfH52EHWjI1mq9gn7PP0XmpUZrInib3JaffXko1ja+R71X0V8zi7
nj3NfmZ/sBZxL7FOsjvZY7E2xvrDerBF7CHWXO8YtprtYV+wJuxKdj/bxfaw
hiyPrWQfso9iXWDT2VPsJ/Z7XJeNZQ+zT9mX6Tnxp/RcH3N+Y5/j4XhmYm1S
+0zs/XOS+e9Iet6M+bOVukZsmPP3yneo362vMRvO7mM72Sext8hO3u8Rucm8
EPNDF3UzYnx1v6jbx9plJ/NjzJNPxDwoz1O3zPHd4oRzp9UN47Pkj6j7gu1n
fVlvNodtYu/HvMG2y/PHesFqszx2rboH2G72K7vCNYayFWw7+5gVZGdkJnN9
zPmd3Xsfvb3YbPmz6t6L7z72Eax3RvKdxXfXktVig9ldbG38lqwGG8juYI/G
mucaM9lG9iv7M541ddXZAHY7eyT2SKwi68kWs1Vxz6wS68WWsNXxTLJqrD+7
jf2H9XSNeey5eDfZYVY7O5mXR+Ymc3LMzXWyk3l5VG7y3sX7N4Fd6p1ZFfvv
+A9jrF6si+PpxttgvDfUleOXx38Ntow9GNdV15lNiz0Ee521UTeJrWVfsx9Y
P7aIvcKOsBPxW7KF7OWYn9hx1p8tZq+yo+wkG8huYq+z4+xUrKFsAXsh5jF2
NNZkNjv2L2wfOxDzmvvrxKay9ew11kvdfPY8O8COsP3q3ojfx7xWKfbj8gHq
lqh7jR9jf2cl/39vZC+xF0VmQXNwdjJ3jc5N9kCxF8rH3nT+N+OV0FuRVdLb
UN21fB1boKYjm8Y2sB/Zb+pa8bosjy1n/2Wt1U1kj7Gv2HdZyX+mqZnJ//D4
P17AvUzVW95v2SGeq9h7yaeJtdGbmZybLq+XnezTxrjn+431b1HeeFWiJyPZ
M8+PvVrUxjPBVrju+vh9Wf2YL9hK9mTcs94J7FH2JfuetWWT2ePsG/Yja8+u
YU+w79jP6XcwizVmjcQW9zTRNVazhvIJseeXt1M3ha1j37Kf9P4DPS4Fqg==

            "]], 
           Polygon3DBox[{{2098, 1314, 1472, 2403, 1938, 1939}, {2346, 1338, 
            1139, 1138, 1455, 2171}, {1934, 1933, 2397, 1422, 1423, 2398}, {
            2164, 1445, 1084, 1085, 1446, 2165}}]},
          Annotation[#, "Charting`Private`Tag$4331#2"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[
           0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
          "Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rlKXVEUBuDl9Q4O96ptCCTYCTE+gRZRRMI1RA0iaiGx0+KaUguxSKGF
tYH0+gTmBUweQBLHOCNWDgFtjAP4bRDOz7c2B9Zee5/TPD41UKmKiK/yIKm+
lVNZy0U0cZ2vecQ2XrGDj+xlMR8xypec5Bu2yoy6mwsc4Dd+5gq/8Afn+It1
hYhzVhvgD+/kOs1THbHBDDfTe24xy23muMM8d1ngX9Zwj7XcT/15wHoeppl5
xBKPucXL1Nf+J7yXG/luvt9c5E/OcpUVLnOMS+zjPLvYKdPqFk7wBUfSDCyn
3u6tnRd8ywO+Smd0B2fpXqVR/ss/Gc5ENHCIJQ6yyE+sZz/r+JG1/MAalqll
vKeto4e59E2YTbPSseMdPbFtcfX8HzwBuEQ9PA==
        "]]}, 
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0j1PU2EYBuDHWrGa4IIgg7ZWRQV+ANGZGF0lBuZq6CYxRmcS7C+QyAIh
0ckw6VC/+NQQRxgIow7GDWoppbbaNF4nDneu517O8573nHxh6u7DYxFRknOp
iPNKDzscPBkxzBHe5C3e4T1O8AGLfMynnOEzKZkXOcslvuJ7vuVXbnCX2/zJ
7yxmIrrszUpF72W3lNMRv/R3rCbP4QE/sMaPPOQn1rnMI65wVRrmNf7mOpvc
YIuf+Ydf+JcvTkRk7MxJW+/jGQln29drzvqNP7jFHa5zk29Y5ku+5nMucD65
E/M0n/ARJ1ngOMd4m6O8wft2hZ39MqSf5WnpcsZBPc3rTPFa8uF4lZ3jEQNs
8wpbbMplc4OXWGc+eQ9eZJU5VpjlHi9wzj2cSv3/H/4BZjxJtg==
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1474, 1793, 782, 1473, 2404, 1691, 1475, 2405, 1692, 1476, 
        2406, 1693, 1477, 2407, 1694, 1478, 2408, 1695, 1479, 2409, 1696, 
        1480, 2185, 2502, 1481, 2410, 1697, 1482, 2411, 1698, 1483, 2412, 
        1699, 1484, 2413, 1700, 1485, 2414, 1701, 1486, 974, 1702, 1794}], 
       Line3DBox[{1488, 2186, 2503, 1487, 2415, 1703, 1489, 2416, 1704, 1490, 
        2417, 1705, 1491, 2418, 1706, 1492, 2419, 1707, 1493, 2420, 1708, 
        1494, 2187, 2504, 1495, 2188, 2505, 1496, 2421, 1709, 1497, 2422, 
        1710, 1498, 2423, 1711, 1499, 2424, 1712, 1500, 2425, 1713, 1501}], 
       Line3DBox[{1503, 2189, 2506, 1502, 2190, 2507, 1504, 2426, 1714, 1505, 
        2427, 1715, 1506, 2428, 1716, 1507, 2429, 1717, 1508, 2430, 1718, 
        1509, 2191, 2508, 1510, 2192, 2509, 1511, 2193, 2510, 1512, 2431, 
        1719, 1513, 2432, 1720, 1514, 2433, 1721, 1515, 2434, 1722, 1516}], 
       Line3DBox[{1518, 2194, 2511, 1517, 2195, 2512, 1519, 2196, 2513, 1520, 
        2435, 1723, 1521, 2436, 1724, 1522, 2437, 1725, 1523, 2438, 1726, 
        1524, 2197, 2514, 1525, 2198, 2515, 1526, 2199, 2516, 1527, 2200, 
        2517, 1528, 2439, 1727, 1529, 2440, 1728, 1530, 2441, 1729, 1531}], 
       Line3DBox[{1533, 2201, 2518, 1532, 2202, 2519, 1534, 2203, 2520, 1535, 
        2204, 2521, 1536, 2442, 1730, 1537, 2443, 1731, 1538, 2444, 1732, 
        1539, 2205, 2522, 1540, 2206, 2523, 1541, 2207, 2524, 1542, 2208, 
        2525, 1543, 2209, 2526, 1544, 2445, 1733, 1545, 2446, 1734, 1546}], 
       Line3DBox[{1548, 2210, 2527, 1547, 2211, 2528, 1549, 2212, 2529, 1550, 
        2213, 2530, 1551, 2214, 2531, 1552, 2447, 1735, 1553, 2448, 1736, 
        1554, 2215, 2532, 1555, 2216, 2533, 1556, 2217, 2534, 1557, 2218, 
        2535, 1558, 2219, 2536, 1559, 2220, 2537, 1560, 2449, 1737, 1561}], 
       Line3DBox[{1563, 2221, 2538, 1562, 2222, 2539, 1564, 2223, 2540, 1565, 
        2224, 2541, 1566, 2225, 2542, 1567, 2226, 2543, 1568, 2602, 1795, 
        1796, 1569, 1797, 1798, 2603, 1570, 1828, 2544, 2289, 1571, 2227, 
        2545, 1572, 2228, 2546, 1573, 2229, 2547, 1574, 2230, 2548, 1575, 
        2231, 2549, 1576}], 
       Line3DBox[{1580, 2450, 1738, 1578, 2451, 1739, 1582, 2452, 1740, 1584, 
        2453, 1741, 1586, 2454, 1742, 1588, 2285, 2455, 1743, 1819, 2283, 
        2456, 1813, 1816, 1744, 1805, 1799, 1815, 1823, 2609, 1745, 1822, 
        1821, 1827, 2611, 1746, 1593, 2457, 1747, 1595, 2458, 1748, 1597, 
        2459, 1749, 1599, 2460, 1750, 1601, 2461, 1751, 1603}], 
       Line3DBox[{1602, 2561, 2241, 1600, 2560, 2240, 1598, 2559, 2239, 1596, 
        2558, 2238, 1594, 2557, 2237, 1592, 2287, 2556, 1829, 1831, 1830, 
        1591, 2288, 2610, 1826, 1807, 1809, 1808, 1590, 1810, 1811, 1806, 
        1820, 2606, 2286, 1589, 1818, 2555, 2284, 1587, 2554, 2236, 1585, 
        2553, 2235, 1583, 2552, 2234, 1581, 2551, 2233, 1577, 2550, 2232, 
        1579}], Line3DBox[{1605, 2242, 2562, 1604, 2462, 1752, 1606, 2463, 
        1753, 1607, 2464, 1754, 1608, 2465, 1755, 1609, 2466, 1756, 1610, 
        2607, 1812, 1757, 1817, 1814, 2243, 2608, 1825, 1824, 2467, 1758, 
        1611, 2468, 1759, 1612, 2469, 1760, 1613, 2470, 1761, 1614, 2471, 
        1762, 1615, 2472, 1763, 1616}], 
       Line3DBox[{1618, 2244, 2563, 1617, 2245, 2564, 1619, 2473, 1764, 1620, 
        2474, 1765, 1621, 2475, 1766, 1622, 2476, 1767, 1623, 2477, 1768, 
        1624, 2246, 2565, 1625, 2247, 2566, 1626, 2478, 1769, 1627, 2479, 
        1770, 1628, 2480, 1771, 1629, 2481, 1772, 1630, 2482, 1773, 1631}], 
       Line3DBox[{1633, 2248, 2567, 1632, 2249, 2568, 1634, 2250, 2569, 1635, 
        2483, 1774, 1636, 2484, 1775, 1637, 2485, 1776, 1638, 2486, 1777, 
        1639, 2251, 2570, 1640, 2252, 2571, 1641, 2253, 2572, 1642, 2487, 
        1778, 1643, 2488, 1779, 1644, 2489, 1780, 1645, 2490, 1781, 1646}], 
       Line3DBox[{1648, 2254, 2573, 1647, 2255, 2574, 1649, 2256, 2575, 1650, 
        2257, 2576, 1651, 2491, 1782, 1652, 2492, 1783, 1653, 2493, 1784, 
        1654, 2258, 2577, 1655, 2259, 2578, 1656, 2260, 2579, 1657, 2261, 
        2580, 1658, 2494, 1785, 1659, 2495, 1786, 1660, 2496, 1787, 1661}], 
       Line3DBox[{1663, 2262, 2581, 1662, 2263, 2582, 1664, 2264, 2583, 1665, 
        2265, 2584, 1666, 2266, 2585, 1667, 2497, 1788, 1668, 2498, 1789, 
        1669, 2267, 2586, 1670, 2268, 2587, 1671, 2269, 2588, 1672, 2270, 
        2589, 1673, 2271, 2590, 1674, 2499, 1790, 1675, 2500, 1791, 1676}], 
       Line3DBox[{1690, 1804, 1803, 2605, 1689, 2601, 2282, 1688, 2600, 2281, 
        1687, 2599, 2280, 1686, 2598, 2279, 1685, 2597, 2278, 1684, 2596, 
        2277, 1683, 1792, 2501, 1682, 2595, 2276, 1681, 2594, 2275, 1680, 
        2593, 2274, 1679, 2592, 2273, 1678, 2591, 2272, 1677, 2604, 1801, 
        1800, 1802}], 
       Line3DBox[{1833, 2146, 2290, 2612, 1832, 2718, 2049, 1834, 2719, 2050, 
        1835, 2720, 2051, 1836, 2721, 2052, 1837, 2722, 2053, 1838, 2723, 
        2054, 1839, 2724, 2291, 2613, 1840, 2725, 2055, 1841, 2726, 2056, 
        1842, 2727, 2057, 1843, 2728, 2058, 1844, 2729, 2059, 1845, 2396, 
        2822, 2060, 2147}], 
       Line3DBox[{1847, 2292, 2614, 1846, 2293, 2615, 1848, 2730, 2061, 1849, 
        2731, 2062, 1850, 2732, 2063, 1851, 2733, 2064, 1852, 2734, 2065, 
        1853, 2735, 2294, 2616, 1854, 2295, 2617, 1855, 2736, 2066, 1856, 
        2737, 2067, 1857, 2738, 2068, 1858, 2739, 2069, 1859, 2740, 2070, 
        1860}], Line3DBox[{1862, 2296, 2618, 1861, 2297, 2619, 1863, 2298, 
        2620, 1864, 2741, 2071, 1865, 2742, 2072, 1866, 2743, 2073, 1867, 
        2744, 2074, 1868, 2745, 2299, 2621, 1869, 2300, 2622, 1870, 2301, 
        2623, 1871, 2746, 2075, 1872, 2747, 2076, 1873, 2748, 2077, 1874, 
        2749, 2078, 1875}], 
       Line3DBox[{1877, 2302, 2624, 1876, 2303, 2625, 1878, 2304, 2626, 1879, 
        2305, 2627, 1880, 2750, 2079, 1881, 2751, 2080, 1882, 2752, 2081, 
        1883, 2753, 2306, 2628, 1884, 2307, 2629, 1885, 2308, 2630, 1886, 
        2309, 2631, 1887, 2754, 2082, 1888, 2755, 2083, 1889, 2756, 2084, 
        1890}], Line3DBox[{1892, 2310, 2632, 1891, 2311, 2633, 1893, 2312, 
        2634, 1894, 2313, 2635, 1895, 2314, 2636, 1896, 2757, 2085, 1897, 
        2758, 2086, 1898, 2759, 2315, 2637, 1899, 2316, 2638, 1900, 2317, 
        2639, 1901, 2318, 2640, 1902, 2319, 2641, 1903, 2760, 2087, 1904, 
        2761, 2088, 1905}], 
       Line3DBox[{1907, 2320, 2642, 1906, 2321, 2643, 1908, 2322, 2644, 1909, 
        2323, 2645, 1910, 2324, 2646, 1911, 2325, 2647, 1912, 2762, 2159, 
        2160, 1913, 2763, 2164, 2165, 2648, 1914, 2326, 2649, 1915, 2327, 
        2650, 1916, 2328, 2651, 1917, 2329, 2652, 1918, 2330, 2653, 1919, 
        2764, 2089, 1920}], 
       Line3DBox[{1924, 2765, 2090, 1922, 2766, 2091, 1926, 2767, 2092, 1928, 
        2768, 2093, 1930, 2769, 2094, 1932, 2770, 2095, 1934, 2398, 2827, 
        2154, 2156, 2096, 2158, 2401, 2828, 2157, 2155, 2824, 2097, 1937, 
        2183, 2184, 2835, 2098, 1939, 2771, 2099, 1941, 2772, 2100, 1943, 
        2773, 2101, 1945, 2774, 2102, 1947, 2775, 2103, 1949}], 
       Line3DBox[{1948, 2665, 2341, 1946, 2664, 2340, 1944, 2663, 2339, 1942, 
        2662, 2338, 1940, 2661, 2337, 1938, 2403, 2834, 2182, 1936, 2660, 
        2148, 2166, 2168, 2167, 2826, 1935, 2162, 2163, 2161, 2823, 2397, 
        1933, 2659, 2336, 1931, 2658, 2335, 1929, 2657, 2334, 1927, 2656, 
        2333, 1925, 2655, 2332, 1921, 2654, 2331, 1923}], 
       Line3DBox[{1951, 2342, 2666, 1950, 2776, 2104, 1952, 2777, 2105, 1953, 
        2778, 2106, 1954, 2779, 2107, 1955, 2402, 2830, 2108, 2175, 2399, 
        2829, 2170, 2173, 2109, 2153, 2780, 2149, 2172, 2178, 2343, 2832, 
        2177, 2176, 2181, 2831, 2110, 1956, 2781, 2111, 1957, 2782, 2112, 
        1958, 2783, 2113, 1959, 2784, 2114, 1960, 2785, 2115, 1961}], 
       Line3DBox[{1963, 2344, 2667, 1962, 2345, 2668, 1964, 2786, 2116, 1965, 
        2787, 2117, 1966, 2788, 2118, 1967, 2789, 2119, 1968, 2790, 2169, 
        2120, 2174, 2791, 2171, 2346, 2833, 2180, 2179, 2347, 2669, 1969, 
        2792, 2121, 1970, 2793, 2122, 1971, 2794, 2123, 1972, 2795, 2124, 
        1973, 2796, 2125, 1974}], 
       Line3DBox[{1976, 2348, 2670, 1975, 2349, 2671, 1977, 2350, 2672, 1978, 
        2797, 2126, 1979, 2798, 2127, 1980, 2799, 2128, 1981, 2800, 2129, 
        1982, 2801, 2351, 2673, 1983, 2352, 2674, 1984, 2353, 2675, 1985, 
        2802, 2130, 1986, 2803, 2131, 1987, 2804, 2132, 1988, 2805, 2133, 
        1989}], Line3DBox[{1991, 2354, 2676, 1990, 2355, 2677, 1992, 2356, 
        2678, 1993, 2357, 2679, 1994, 2806, 2134, 1995, 2807, 2135, 1996, 
        2808, 2136, 1997, 2809, 2358, 2680, 1998, 2359, 2681, 1999, 2360, 
        2682, 2000, 2361, 2683, 2001, 2810, 2137, 2002, 2811, 2138, 2003, 
        2812, 2139, 2004}], 
       Line3DBox[{2006, 2362, 2684, 2005, 2363, 2685, 2007, 2364, 2686, 2008, 
        2365, 2687, 2009, 2366, 2688, 2010, 2813, 2140, 2011, 2814, 2141, 
        2012, 2815, 2367, 2689, 2013, 2368, 2690, 2014, 2369, 2691, 2015, 
        2370, 2692, 2016, 2371, 2693, 2017, 2816, 2142, 2018, 2817, 2143, 
        2019}], Line3DBox[{2021, 2372, 2694, 2020, 2373, 2695, 2022, 2374, 
        2696, 2023, 2375, 2697, 2024, 2376, 2698, 2025, 2377, 2699, 2026, 
        2818, 2144, 2027, 2819, 2378, 2700, 2028, 2379, 2701, 2029, 2380, 
        2702, 2030, 2381, 2703, 2031, 2382, 2704, 2032, 2383, 2705, 2033, 
        2820, 2145, 2034}], 
       Line3DBox[{2048, 2152, 2825, 2400, 2047, 2717, 2395, 2046, 2716, 2394, 
        2045, 2715, 2393, 2044, 2714, 2392, 2043, 2713, 2391, 2042, 2712, 
        2390, 2821, 2041, 2711, 2389, 2040, 2710, 2388, 2039, 2709, 2387, 
        2038, 2708, 2386, 2037, 2707, 2385, 2036, 2706, 2384, 2035, 1427, 
        2150, 2151}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{577, 783, 2404, 578, 796, 2415, 604, 2507, 810, 618, 2512, 
        824, 632, 2519, 838, 646, 2528, 852, 660, 2539, 866, 674, 2551, 879, 
        2451, 687, 891, 2462, 700, 2564, 904, 714, 2568, 918, 728, 2574, 932, 
        742, 2582, 946, 756, 2591, 960, 770}], 
       Line3DBox[{579, 784, 2405, 580, 797, 2416, 605, 811, 2426, 619, 2513, 
        825, 633, 2520, 839, 647, 2529, 853, 661, 2540, 867, 675, 2552, 880, 
        2452, 688, 892, 2463, 701, 905, 2473, 715, 2569, 919, 729, 2575, 933, 
        743, 2583, 947, 757, 2592, 961, 771}], 
       Line3DBox[{581, 785, 2406, 582, 798, 2417, 606, 812, 2427, 620, 826, 
        2435, 634, 2521, 840, 648, 2530, 854, 662, 2541, 868, 676, 2553, 881, 
        2453, 689, 893, 2464, 702, 906, 2474, 716, 920, 2483, 730, 2576, 934, 
        744, 2584, 948, 758, 2593, 962, 772}], 
       Line3DBox[{583, 786, 2407, 584, 799, 2418, 607, 813, 2428, 621, 827, 
        2436, 635, 841, 2442, 649, 2531, 855, 663, 2542, 869, 677, 2554, 882, 
        2454, 690, 894, 2465, 703, 907, 2475, 717, 921, 2484, 731, 935, 2491, 
        745, 2585, 949, 759, 2594, 963, 773}], 
       Line3DBox[{585, 787, 2408, 586, 800, 2419, 608, 814, 2429, 622, 828, 
        2437, 636, 842, 2443, 650, 856, 2447, 664, 2543, 870, 678, 2555, 988, 
        989, 2455, 691, 895, 2466, 704, 908, 2476, 718, 922, 2485, 732, 936, 
        2492, 746, 950, 2497, 760, 2595, 964, 774}], 
       Line3DBox[{587, 788, 2409, 588, 801, 2420, 609, 815, 2430, 623, 829, 
        2438, 637, 843, 2444, 651, 857, 2448, 665, 975, 2602, 976, 984, 2606, 
        991, 992, 990, 978, 2456, 987, 985, 2607, 986, 705, 909, 2477, 719, 
        923, 2486, 733, 937, 2493, 747, 951, 2498, 761, 965, 2501, 775}], 
       Line3DBox[{8, 1480, 23, 1494, 38, 1509, 53, 1524, 68, 1539, 83, 1554, 
        98, 1569, 240, 113, 1590, 258, 241, 1805, 128, 267, 1817, 143, 1624, 
        158, 1639, 173, 1654, 188, 1669, 203, 1683, 218}], 
       Line3DBox[{589, 2502, 789, 590, 2504, 802, 610, 2508, 816, 624, 2514, 
        830, 638, 2522, 844, 652, 2532, 858, 666, 977, 2603, 871, 679, 2610, 
        1000, 1001, 994, 995, 883, 2609, 692, 998, 999, 997, 2608, 896, 706, 
        2565, 910, 720, 2570, 924, 734, 2577, 938, 748, 2586, 952, 762, 2596, 
        966, 776}], 
       Line3DBox[{591, 790, 2410, 592, 2505, 803, 611, 2509, 817, 625, 2515, 
        831, 639, 2523, 845, 653, 2533, 859, 667, 2544, 1002, 872, 680, 2556, 
        993, 884, 2611, 693, 996, 897, 2467, 707, 2566, 911, 721, 2571, 925, 
        735, 2578, 939, 749, 2587, 953, 763, 2597, 967, 777}], 
       Line3DBox[{593, 791, 2411, 594, 804, 2421, 612, 2510, 818, 626, 2516, 
        832, 640, 2524, 846, 654, 2534, 860, 668, 2545, 873, 681, 2557, 885, 
        2457, 694, 898, 2468, 708, 912, 2478, 722, 2572, 926, 736, 2579, 940, 
        750, 2588, 954, 764, 2598, 968, 778}], 
       Line3DBox[{595, 792, 2412, 596, 805, 2422, 613, 819, 2431, 627, 2517, 
        833, 641, 2525, 847, 655, 2535, 861, 669, 2546, 874, 682, 2558, 886, 
        2458, 695, 899, 2469, 709, 913, 2479, 723, 927, 2487, 737, 2580, 941, 
        751, 2589, 955, 765, 2599, 969, 779}], 
       Line3DBox[{597, 793, 2413, 598, 806, 2423, 614, 820, 2432, 628, 834, 
        2439, 642, 2526, 848, 656, 2536, 862, 670, 2547, 875, 683, 2559, 887, 
        2459, 696, 900, 2470, 710, 914, 2480, 724, 928, 2488, 738, 942, 2494, 
        752, 2590, 956, 766, 2600, 970, 780}], 
       Line3DBox[{599, 794, 2414, 600, 807, 2424, 615, 821, 2433, 629, 835, 
        2440, 643, 849, 2445, 657, 2537, 863, 671, 2548, 876, 684, 2560, 888, 
        2460, 697, 901, 2471, 711, 915, 2481, 725, 929, 2489, 739, 943, 2495, 
        753, 957, 2499, 767, 2601, 971, 781}], 
       Line3DBox[{601, 973, 974, 602, 808, 2425, 616, 822, 2434, 630, 836, 
        2441, 644, 850, 2446, 658, 864, 2449, 672, 2549, 877, 685, 2561, 889, 
        2461, 698, 902, 2472, 712, 916, 2482, 726, 930, 2490, 740, 944, 2496, 
        754, 958, 2500, 768, 980, 2605, 981, 982}], 
       Line3DBox[{769, 959, 2604, 979, 755, 945, 2581, 741, 931, 2573, 727, 
        917, 2567, 713, 903, 2563, 699, 890, 2562, 686, 2450, 878, 2550, 673, 
        865, 2538, 659, 851, 2527, 645, 837, 2518, 631, 823, 2511, 617, 809, 
        2506, 603, 795, 2503, 576, 782, 972, 983}], 
       Line3DBox[{1004, 1221, 2718, 1005, 2615, 1235, 1033, 2619, 1250, 1048, 
        2625, 1265, 1063, 2633, 1280, 1078, 2643, 1295, 1093, 2655, 1308, 
        2766, 1106, 1321, 2776, 1119, 2668, 1333, 1132, 2671, 1346, 1147, 
        2677, 1361, 1162, 2685, 1376, 1177, 2695, 1391, 1192, 2706, 1406, 
        1207}], Line3DBox[{1006, 1222, 2719, 1007, 1236, 2730, 1034, 2620, 
        1251, 1049, 2626, 1266, 1064, 2634, 1281, 1079, 2644, 1296, 1094, 
        2656, 1309, 2767, 1107, 1322, 2777, 1120, 1334, 2786, 1133, 2672, 
        1347, 1148, 2678, 1362, 1163, 2686, 1377, 1178, 2696, 1392, 1193, 
        2707, 1407, 1208}], 
       Line3DBox[{1008, 1223, 2720, 1009, 1237, 2731, 1035, 1252, 2741, 1050, 
        2627, 1267, 1065, 2635, 1282, 1080, 2645, 1297, 1095, 2657, 1310, 
        2768, 1108, 1323, 2778, 1121, 1335, 2787, 1134, 1348, 2797, 1149, 
        2679, 1363, 1164, 2687, 1378, 1179, 2697, 1393, 1194, 2708, 1408, 
        1209}], Line3DBox[{1010, 1224, 2721, 1011, 1238, 2732, 1036, 1253, 
        2742, 1051, 1268, 2750, 1066, 2636, 1283, 1081, 2646, 1298, 1096, 
        2658, 1311, 2769, 1109, 1324, 2779, 1122, 1336, 2788, 1135, 1349, 
        2798, 1150, 1364, 2806, 1165, 2688, 1379, 1180, 2698, 1394, 1195, 
        2709, 1409, 1210}], 
       Line3DBox[{1012, 1225, 2722, 1013, 1239, 2733, 1037, 1254, 2743, 1052, 
        1269, 2751, 1067, 1284, 2757, 1082, 2647, 1299, 1097, 2659, 1312, 
        2770, 1110, 1458, 1459, 2830, 1123, 1337, 2789, 1136, 1350, 2799, 
        1151, 1365, 2807, 1166, 1380, 2813, 1181, 2699, 1395, 1196, 2710, 
        1410, 1211}], 
       Line3DBox[{1014, 1226, 2723, 1015, 1240, 2734, 1038, 1255, 2744, 1053, 
        1270, 2752, 1068, 1285, 2758, 1083, 1442, 2762, 1443, 1444, 2823, 
        1422, 1423, 2827, 1434, 1461, 1462, 1460, 1425, 2829, 1453, 1451, 
        2790, 1452, 1137, 1351, 2800, 1152, 1366, 2808, 1167, 1381, 2814, 
        1182, 1396, 2818, 1197, 2711, 1411, 1212}], 
       Line3DBox[{1016, 1227, 2724, 1018, 1241, 2735, 1039, 1256, 2745, 1054, 
        1271, 2753, 1069, 1286, 2759, 1084, 1445, 2763, 1447, 1448, 1449, 
        2826, 1450, 1432, 1440, 1441, 1439, 2828, 1435, 1436, 1438, 1437, 
        1433, 2780, 1426, 1456, 1454, 1457, 2791, 1455, 1138, 1352, 2801, 
        1153, 1367, 2809, 1168, 1382, 2815, 1183, 1397, 2819, 1198, 1412, 
        2821, 1213}], 
       Line3DBox[{1020, 1229, 2725, 1021, 2617, 1243, 1041, 2622, 1258, 1056, 
        2629, 1273, 1071, 2638, 1288, 1086, 2649, 1301, 1099, 2834, 1472, 
        1314, 2835, 1112, 1463, 1326, 2831, 1125, 1466, 2669, 1339, 1140, 
        2674, 1354, 1155, 2681, 1369, 1170, 2690, 1384, 1185, 2701, 1399, 
        1200, 2713, 1414, 1215}], 
       Line3DBox[{1022, 1230, 2726, 1023, 1244, 2736, 1042, 2623, 1259, 1057, 
        2630, 1274, 1072, 2639, 1289, 1087, 2650, 1302, 1100, 2661, 1315, 
        2771, 1113, 1327, 2781, 1126, 1340, 2792, 1141, 2675, 1355, 1156, 
        2682, 1370, 1171, 2691, 1385, 1186, 2702, 1400, 1201, 2714, 1415, 
        1216}], Line3DBox[{1024, 1231, 2727, 1025, 1245, 2737, 1043, 1260, 
        2746, 1058, 2631, 1275, 1073, 2640, 1290, 1088, 2651, 1303, 1101, 
        2662, 1316, 2772, 1114, 1328, 2782, 1127, 1341, 2793, 1142, 1356, 
        2802, 1157, 2683, 1371, 1172, 2692, 1386, 1187, 2703, 1401, 1202, 
        2715, 1416, 1217}], 
       Line3DBox[{1026, 1232, 2728, 1027, 1246, 2738, 1044, 1261, 2747, 1059, 
        1276, 2754, 1074, 2641, 1291, 1089, 2652, 1304, 1102, 2663, 1317, 
        2773, 1115, 1329, 2783, 1128, 1342, 2794, 1143, 1357, 2803, 1158, 
        1372, 2810, 1173, 2693, 1387, 1188, 2704, 1402, 1203, 2716, 1417, 
        1218}], Line3DBox[{1028, 1233, 2729, 1029, 1247, 2739, 1045, 1262, 
        2748, 1060, 1277, 2755, 1075, 1292, 2760, 1090, 2653, 1305, 1103, 
        2664, 1318, 2774, 1116, 1330, 2784, 1129, 1343, 2795, 1144, 1358, 
        2804, 1159, 1373, 2811, 1174, 1388, 2816, 1189, 2705, 1403, 1204, 
        2717, 1418, 1219}], 
       Line3DBox[{1030, 1420, 1421, 2822, 1031, 1248, 2740, 1046, 1263, 2749, 
        1061, 1278, 2756, 1076, 1293, 2761, 1091, 1306, 2764, 1104, 2665, 
        1319, 2775, 1117, 1331, 2785, 1130, 1344, 2796, 1145, 1359, 2805, 
        1160, 1374, 2812, 1175, 1389, 2817, 1190, 1404, 2820, 1205, 2825, 
        1428, 1429, 1430}], 
       Line3DBox[{1206, 1405, 1427, 1191, 1390, 2694, 1176, 1375, 2684, 1161, 
        1360, 2676, 1146, 1345, 2670, 1131, 1332, 2667, 1118, 1320, 2666, 
        1105, 2765, 1307, 2654, 1092, 1294, 2642, 1077, 1279, 2632, 1062, 
        1264, 2624, 1047, 1249, 2618, 1032, 1234, 2614, 1003, 1220, 2612, 
        1419, 1431}], 
       Line3DBox[{1214, 1413, 2712, 1199, 1398, 2700, 1184, 1383, 2689, 1169, 
        1368, 2680, 1154, 1353, 2673, 1139, 1338, 2833, 1467, 1469, 1468, 
        1124, 1325, 2832, 1465, 1464, 1471, 1470, 1111, 2824, 1313, 2660, 
        1424, 1098, 1300, 2648, 1446, 1085, 1287, 2637, 1070, 1272, 2628, 
        1055, 1257, 2621, 1040, 1242, 2616, 1019, 1228, 2613, 
        1017}]}, {}, {}, {}, {}, {}}},
    VertexNormals->CompressedData["
1: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
w0tPzCo/audA8FsCgnuaZXdhoLTmpM94UQRvzeUspOH7hL4Tln9r8UobEh8z
Ea5SzAXQxSsiHMej1BA86SxNFPfuSMWD215hxXMTNj4P9khPahnfppB/aUu/
B7zhL0kY0dbv29km/2qvZaoY94aPxBrYjCL5P45XHD5Q+j9u9Tb7SP6PWeLs
50EK/0dYg/mqYVQ9jvWZz752Cv/ncqEvfb1/BJ49Qc8JF77h/3yKZOngfCMA
9SVdS05w3PB/Ms5j9u/e6wyFe/Sd+TnjDzn9fT9WGDFfcg9Vh64ddP78syIC
klhew1l8ebixtMEYV7y5tElFFjQ9voZXWogLHbTTwNQedQv0aTOA1t/vBy8V
XuYYqkJ3P8CsFNK2IHwOO5RTHeCRQlvvphNsVd34fpuDv66w+Pi7KkKrBy7N
Hd7w38T0eqJUqFwVTLwlRuh5N3y2Ea+suwHHJOXxzb7pKRR+WsO7qTqS/zOw
4spD6f/0zbotcCaK4YL3jkVQ+j8BcVZGeFkF/ECrq4Qdhf+j0IdKmg2lgyYW
9mJWPm74PyduPZUw4X8Bddn6lQjMhkFLf/2fBlNXN4u0bsi9bPR1hNsEJLB3
zceYbvO6L7OjADLxxKNErWhgpoF4Mi5+PVpxhRYFOg9kxPq37oHdwvLI/YzP
sDF7mFYB5sDg7tmJthIo8PFafIkRZsu8ahWMGyQr0Nh8Blq/rh00wjvwChWi
xx7T+Zx+sOGnKbHV7/VtmlV8tiNIkFC0se9LdNKLDJGaVfjiVudCu3PDT+tn
OWRVmZYv/5Mp2nqOwk9r45teto1VxGqjcgYp/R9v+/2pJP8nVsnAl9L/2TvT
v/eh23O8VAS8f5TC/7laNOc1hTGDaA0EvsXLbfg/8SPKC2ebf0FNtzjQzqd+
Qt/M13Sra8yabSgVh3/T8wriaZTgn61H3pLw36NO4LQaCzy/neWgrasuvEpr
5kfqM3tupkzvfagHZr7drpm0sYUDaAt9SfuXus+MXtfpmYBfKS5E+TUbzO2+
9r1GIm8uJNpfTsccn7ArCN2ZA3H0rfEJGylilNwjgBETiP8uHLjhpzl4GBTO
qFmjF5kupns2b/hpyy1ebsuwlaLtihovP4WfVjo50kfy0648KvhO6aeFruw1
Ivk/lafiTCj9n8P27UdI/s9tubtslP5PhHHUETPeRnxoo/u5Wgr/h/ki0/WB
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
bI/CDuOuipwi/Nc3r1lo7ddqfuLGqD6Oa+PsOUx7XgeFnUN67CNYznX+CW4Q
DwloScGMlvtN0/pTalHHOPF+fVUOyxJzDj91bnbu56uCFdoshBV5Tb5y7Xeo
ntPWp4SX/DnB178v+2EKv6L7Yju/sf2K6gG7/6swO7FQCJrtJPOor6fb+WpX
TKHjxOmHyjuPQP06ArYID7BRv1HJpucJlGMe+1P7RzSUtnDVf8MCEUjUf3nh
umgN8GGf/veYM5XQno63Yc+jiICUjcpBWB5Yfh89jsjvm/IiyacRnvTUrJgC
SpYzUYj+C5Zk/fY+9yKnonrwJf9VWNDa8ywJM7rgz4kn/lprf8bVa4/KtFlw
Q/KaPLTn9U3Xvp5wvx7zeJ1/DtwHA6b/61ydg0G3ul4QrZIiD2wjrF8PFc04
7o3bCa5fN2tcuho79wVdr/xDnrsrZ9T5JkjIfnUOBp1GBv1XhMejxweLCfdn
Q+/PeP2o9iXi9oDE+MFpIpDA2NPysbAFCG/sErY+sguf02DR9/EULJ8908zb
+ARQPjjb+P0PEXc5gFc1Ae4nFVkUY2D9AGpKJ1n//l3fOGB78OvtSbzzHeuF
24mur9o/+jvJRA7Yhlu/LjGU9+fXf52Y9eur8ZbNgrWC/YniuNV4i1XUfAD7
n3of3/oKKd5Ctkzmw9cLxYlXhTnYSfF2utIAvr741eu7U6iDFG/G/yb94HgA
YnXJ8eD5ersiEm/HBO2G4fgBcjRdSfGz06XIAYm3MXvWz3C8ASt2vaR423Dc
/0G08APASXBXk/wpP6A8fdpMGMYF9TXkeBO+PEXSz2ZF1n/XmxJvZpVnae15
lsRLijenLVeKaO1fjTfvdeddjbfEdf5ZzYd3zuzshX+/6PpqPvw0IX4F/r1j
qfpZQpB8mMLmJgjnB3RfFlNyPswuiJ2N3ZuMX80nlpR8yEHM8YTzDxBMyYds
JrGkfOj0Y0cVnK+A3hJyvrpU6k7Kh3SxGuNwfgOkdWJJ+S2w2ZqUD0Mp8ysE
KPMrtsSS86FdUs4YIv+iK44k3xn9hJQPsxTNKhH9ZkSyfv6mIgskH2YeeOKB
2IOh5MNQR19SPlQNjFtj/2o+vMu2XZb2vKv5sHGdf+SmDpPyocM6f67Wd5Nf
PVlwPULXV+s7XZnNZrh+oXpGhZNJ9f3u6EMhuN6h+3Lv7OhB6nt6HEcYXB/x
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
hXNV65+vGVw8F9E6Xt1/3USSwbt6RdLsAt7aE637Z472HZxVVSfcVbRgz317
Cu0TfP4R2LGfuwjxtgdemz8dor4Xlsl0c05lLyjQ0hy8/zT1fUk6yj8q256V
Y9lN0PcBN83/5wDL41vT8tbI31bY/A7zuQtXFQSs0Z/7J7RgRlUdl2Xstcae
WzXVpyQYvLFqOZFr7Pd/sHQcV+GMsZtde96f+VLAC6yIMv/LlDV+y0zzP8aH
y6hsmbgnWHMwFl3/ZzUzbXNesOLzyR/Xpxy5UFwW4/WI0b1gssrYwmyvjyT1
fbfFUtv5Qx/nqmvdNKb/pFPnZi9mir8TcKwnHBIqKzl1nPr91tm5x7J52DNg
+60fqTF+puASxT9Hr9mk4HITwR5b83sE+1Lwwkfy+qo/dcotquvzukFlfXJf
Z1Znhsjjzc3Xyq/I1m2B9ePBqLX66Zyf28D24AqYTIpo7aHjEWaB7cfapx5a
Y3+C2S4e14JJzJhA9JrzGnC6q+zAZSh/+LjOb9H0OVbnBZXW+01b7lUuppSj
yvpb8GaX2TlUfpHdfHwEDKq4H+AT8mTJGZW3esr0PKNdr1rLc/eodt9R1J65
x6XMl9vNCd87LUp5TlDfj9Pa1N0/YSYGKp1UL3WiF0LjKryw92BKSBn403Rw
atyLAHJkUngq8zG7zbcYoEYPz7sN4jsgO5XIZVo/+97x1i6ykYNyPl34iqzv
N995EZYHGjwK1sjH8x2cfxJShl+vP+up81HYHvyPSIVCWnv+VbW9udRujhNK
DC+ktT+u4ppDersetvur/przPi/l5lYq5cDYfHu51m/hF1eGwCCl9X47LUfk
/cBjXLVH8JO+gasKer3++t42SI/uqYiOXzQR1C9D5Rtbhdvt6J5Wz698zUwE
QtB9//ha7Vn8l01Iy7ILOHk9AbXza7ems9WMByiY9elhouIV8A0lrlaysy5y
2m6A5nuEu0JxTFDRAWHS+o99721F3upAkYcNA9O7LKDvM7unFmj8LOB1ucnV
4ga0AkVubYHXZ8XsTWB5QCPsy21E3naOLM+VQ68M6weWKPpfUPQDYnTfLWc8
8LJV22No7VkYHKJf+JeNS8t66Udrv823pFxbuqfYxtZva867tCJV+Y7HGBN4
d3Ct36DSZ0+je5TW+20u+Z+MDSayCqM23I+1uILK//ZV6iD4cVT+XVmJqgui
fg9I6FrHdHFTX7WFHU/V0IEKdN8Z6Jzx6xtDBJya2rbkq9TnB5SUNz+RzcgH
n6dtn1McfgTqUL5HrPpBs1LmKBYKiQnJ2pMnA3HeVSN9H0HZqF9bSO4OZH2G
ANwxuQ/9FNWSz/1H9fP3+MTWpqUsaNrzdkHiHyLwiDCrAcsDv4llKog8kz1Z
XvNzvA+sH4h/ffM5op9I0X+kMvmnTEY+XmC33DytPQsW5kktN4ZwbFv4ttPa
H8ln7VbU1Iddf970BNxTK0wkJiWrpW+N3yC145V+HMrr/aZpUP430ry46lVr
qGDNTepzHfMrf8a/M0lVLqz4ijwaXkHlwdaJEx2VC9VSssXl2CdvaeJ5/5u5
ZiawpTXHoGIntb5Iil3YFveqEzz9ue+D47MXIPEZOa8yPn91Ja7eAsr2t8qs
yT4FfThlqY3gx43laTVd755Br+VFvXty0iHP+zzQv0kicN5+Xh5D/IdL+PY+
rbOqDkq0CTzPmUQEpl0ri2F54Dx7nRcibz7IT5L/+G/lAKwfKO3VT0P07zAn
6w/x1SqIfdWJL1E3/0hrz7zv1MJsMxNeSlbWkNZ+czuOxDeVC1j4vGW0511Y
ARQizIsxSyu+Amv9pkv8xiSlvN5viytvGuKuvqraQKey5n3DZ1l5Zb/Cuyh/
u6J9xfJKw915tmOVzHR+Gl4aLNT8v+J0GTyks/p36ep6TPw1P4uwLQQWOr8d
9GYDqJ3WdoZ80/9Wv3f1ErXnr+/F7rTTu0BYXrowcpz6vOgKRm96eT8ln1K/
c8S/8PlcktkoqD3h2bvPDQL1lcnfI+g6axFAnP1FkU+rsuweJ607Grnyu310
hfxnGqV8thhA1l5um78iz+M9VRvMZ/ODGEjy2Oq9rfuyIIR/G9rbdFG5Buoq
3nPmskMBdGvhRO9IDoxnOVJKP0HNyFw1FntbTvzlcz8k7W2JwKR++ZWpy/vw
aq5nj7+KbofcLGa13sD95533xdWwHuDe9VAdRE9n1lOSnqEjnNmwHmBVT72a
jxSiRxn+n64fXYEH2OOHEDsl/5LtjLj9sQK2k/L7xlbvm99PstNX26Xnsdko
Xmdivh/xgwHFD+/Pav8H+wG/6gdrih9WVjZAqad34df7mZ7u3Y3fy/vx6/0c
H89nZx62BcdCR7eN9jomxIte+PVvJ279dTQw4HaPufoKsz6uDA1qp4jhXZj/
jaukiRm2Y8r/G1dNl6oPofcV0LhiomsnxS0cz2veh2WiayTFJ4yfcbAeFN8l
UuIQ9koGbD+KlxnoAkjxBq9fg/2A4veuNHojJK6wE57NsD/xq3H13oQcP0ts
x3nh6wI43CBfF+1R8vVa0iKvpy2R14Mo1wU7Mf8a0bN6XVj8foKI/+dWfD1o
902m+Hm9nWYUf/7veZNJflt/XnNK/rxk9+04nAdQeVa6GVL+ZKZTeZUwvILi
3PeU/KkgK9sH5xMq30WHI+XPjlZxczj/UN8j7vYi5c/grSGdcL7Cr+Yrzhxy
/jxV4xoB5zeA7zQ5v227Pwsi+fMc76QTnA+BibY9pHx4j76XlA/3eU+GI/IY
C7L8Y19TUj68tzXkLa3+zX5DpHzoYCd0kdYeT0o+XG8/h99RUj78Xz+cIeXD
9X5gf0Ku7wOtt8vgOoXKb6tRJtX3kqxKabhOofJHKPXdxU7iCVzv0H3ZLS+S
6nt6PP1s0lXq3B5W2+vJSH0XZhcfguspfrWeFpvkVyD1fdaVPhGuv4Aspf6+
zysn1fe6q7yicL0GXnlor6nvYll/i+D6DoTtTSDV98ILvaT6To+TEUHknTrJ
8g2Wf72Q+l5py5uA6Oe9R9a/ZaSTVN/X28NJZ0yq7/2tf1iTaezPodT35qpd
a85bkaBGqu//4zc6VVJ9X+83W0q/ykK3Ewv3Xaj8Zr9kUr869lHpANx3ofIu
QiKkfvVDa9hNuH9D9+W0FCP1qx9alY/C/R71+aisZ45Iv3r5o4Ip3B/iV/tD
PnHQFulXb5++mAP3k8BqP9mHXTiP9KsSRUEqcP8JCDL/t6ZfVaFnvgf3q8Cu
9ChSv2p+1N8Y6VeHU91VEXl1FrK8qHieNNKvZjuFpCL6Syn6DbP6R5F+9fLH
G2vs2U6XRepXP7S6rLHfjdKv2hjsWHNeh4fSpH71f/xWE0LqV9f7zU6XjL92
nBUsvzo7h+aHzRyGkwj+Emn4Tx3GEag8vpibhL9a5UKTYTxCnSfgPUTCX7Nb
7C7A+AW1k2NqkYS/CgrkTGG8g/KKTwWuiiP4S2CIwxfGR/hVfCRPwV8FMUqS
MJ4C3Nfjrx9flgpt5IB7g2T8pW7+8wKCv9bL5/AlzyH4K3Ivzxr92+ZVSfiL
XyLTitaeHdVZJPzlnNFwidb+ZxT8tf6826dESfjrf/x2++oSgr/W+43dO4zE
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
70TyUfe+RdzW9Zan6d+47cnh7odKgS5lop5RSaee4bitbfsHmf3fw4FrN3MS
LNVyoMvo/c5QyPVth81BoFyQLedv3Faaal1vxdBdJn6350GiMo7bpuf8SU6v
20PZa6ausVYDx205pAw3VUxOAKz1W5WtzrHDbm9pfZc4tdSG5b0LgaYdNZSa
YAhyzqHNXxlUk130Qg3ooST5vfkLtw1wqRRMzZAiC1E/MHom4Lht89rK2uSX
1yjVVcSVDLo4L7rpt5i5RJ5QqutmhzImFpwXPXt9lYdLtyYIeW8uPOxqCgtr
Khct9duqVeXc7skK7pkx+PUcZoczPY8sydlfnLedMSwbCD2e0a1SlQ+d70Xj
ITq2a2U3CQHU+JnOPX/htr++8fsllZ4jc5ELGD9EaGByit2wSti4vohy22OF
/djLWEzOoptzrsnK1dTY+E2W5Yy4vRQ1FBiW7RQDXXZ/LGJS7Qt1oLgtb0Li
Bof7PiC39s7UI4ZhsHE1i1Abojc8GGqSPugeBE1uWr/+0nkEvpacxbV470xE
Bm00rpsHDDPLKzO65yFBqeCleUzXmnCu2nMN4NvULrNpwhkqXY6zQb+jHiw8
I9nwSf2M+gu39XtvLnA+PozM+EGj0ZGC8xdtith20GzzRwox6d60W1k+tq/o
3d/WA6v7qOusb3xhNqjE5pEx+HMiib8Y0ks61mG9Pw7S6aKt+1A71tJ2nyas
0MAReXW1NCz7WsZmcdxqZ6h3F/wAjHkmlCLzJxsu3fLbqWcQ+T61DXZeZfEE
hVRsb4k2+sCqvy3kFuPhgPrVH9YpBHBbX+eYlIQsfHbW4NmSnpHWGji58Ayw
9nvuTe3MgNpeoTjIXabLpixTpDO8r7ZnnMf7UNtF5oa22kwS19yUYPf4C7ed
p64Z/vHrPlnuwX7pl+fO49/hbqDP4cgQ5ZL/8Vs6Bbg906n+pVLM5Q8VyLuW
fMyqHscN505s+jRQA9nURh3f0HgHSvOgyfPoU2pjX5MhTJrOGZFUkoIls+JI
i+8RNJHldnudCt/JeNwTNuILb7oal0mcQezwjTde9temgv2X7AsOzETAklOE
Svdp5D6q+jqmp3EGXK0hbGEsfAgOFni3YfHeFHIwvch75DNApBiJXR8thyDW
maV117bYSkOMAoCbxdpNugaTmJypTeFcnNL8pATHbM9bm/E8bf0uGR0ouZvQ
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
//HfxodJ5303qyQi4/8PAnYWpg==
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.896872396697996*^9, 3.896874549951635*^9, 
  3.896877408205299*^9, 3.896879941064402*^9, 3.89688185300453*^9, 
  3.896882666859612*^9, 3.896885914711935*^9, 3.896886354434519*^9, 
  3.8969562002668743`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"9b0348c0-5fc9-4851-afaf-b4591731c834"]
}, Open  ]],

Cell["\<\
Set parameters for the sandbox:
  nbox is the number of grid points on a side. The sandbox will be divided \
into an nbox x nbox x nbox x nbox grid and sand will be moved between those   \

  grid points.\
\>", "Text",
 CellChangeTimes->{{3.718713496465699*^9, 3.718713510617713*^9}, {
   3.7187138394293213`*^9, 3.718713844168648*^9}, {3.71871396171179*^9, 
   3.718714028208855*^9}, {3.896185939696639*^9, 3.896186012736724*^9}, 
   3.896790423990417*^9},ExpressionUUID->"3b66b3cc-f36f-4e4f-9ae4-\
7e69ec7486ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"xmin", "=", 
     RowBox[{"-", "5"}]}], ";", 
    RowBox[{"xmax", "=", "4"}], ";", 
    RowBox[{"ymin", "=", 
     RowBox[{"-", "5"}]}], ";", 
    RowBox[{"ymax", "=", "5"}], ";", 
    RowBox[{"zmin", "=", 
     RowBox[{"-", "5"}]}], ";", 
    RowBox[{"zmax", "=", "5"}], ";", 
    RowBox[{"wmin", "=", 
     RowBox[{"-", "5"}]}], ";", 
    RowBox[{"wmax", "=", "5"}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"nbox", "=", "4"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.718713513661891*^9, 3.718713530016432*^9}, {
   3.718713846896575*^9, 3.7187138489240103`*^9}, {3.718713887380218*^9, 
   3.7187138879316025`*^9}, {3.7187141179093075`*^9, 
   3.7187141263052235`*^9}, {3.718714370879244*^9, 3.7187143931580024`*^9}, {
   3.718837776609479*^9, 3.7188378312984858`*^9}, {3.7320306658514137`*^9, 
   3.732030669358096*^9}, {3.7320311116333337`*^9, 3.732031112117734*^9}, {
   3.7320311560831895`*^9, 3.7320312028903494`*^9}, {3.7320314071613874`*^9, 
   3.7320314080677214`*^9}, {3.73203150154478*^9, 3.732031504086841*^9}, {
   3.7320315454472227`*^9, 3.732031546419386*^9}, {3.7320458525475364`*^9, 
   3.7320458529452667`*^9}, {3.7326326839670534`*^9, 3.732632685008771*^9}, {
   3.73263274972233*^9, 3.7326327835315876`*^9}, 3.733231966505395*^9, {
   3.7332320039813833`*^9, 3.733232005643506*^9}, {3.7332321125974092`*^9, 
   3.733232113331465*^9}, {3.733232145644101*^9, 3.7332321461597514`*^9}, {
   3.7332321860642796`*^9, 3.733232186445855*^9}, {3.73323221920685*^9, 
   3.7332322520727825`*^9}, {3.733232290109403*^9, 3.733232318874716*^9}, 
   3.733232540569396*^9, {3.7337936188054357`*^9, 3.7337936487083664`*^9}, {
   3.7338383631922035`*^9, 3.7338383639750013`*^9}, {3.748914448810422*^9, 
   3.7489144505583835`*^9}, {3.748914875540037*^9, 3.7489148800757647`*^9}, {
   3.841479224685567*^9, 3.8414792250605726`*^9}, {3.8414793421775713`*^9, 
   3.841479342417571*^9}, {3.8414801070125427`*^9, 3.841480107211527*^9}, {
   3.87555592001357*^9, 3.875555920158445*^9}, {3.8756099159884777`*^9, 
   3.875609916096182*^9}, {3.875610043855516*^9, 3.875610043974502*^9}, {
   3.875793682680879*^9, 3.875793721473713*^9}, {3.875793875586993*^9, 
   3.875793948476336*^9}, {3.8757940069226294`*^9, 3.8757940069971533`*^9}, {
   3.8757940928913403`*^9, 3.875794092991233*^9}, {3.875794140097681*^9, 
   3.8757941564047956`*^9}, {3.8762623771585283`*^9, 
   3.8762623772471237`*^9}, {3.876262433417536*^9, 3.876262433544656*^9}, {
   3.876585405505458*^9, 3.8765854058776283`*^9}, {3.87660518827043*^9, 
   3.876605188399829*^9}, {3.876605340498394*^9, 3.876605340838002*^9}, {
   3.87660559796305*^9, 3.876605598071498*^9}, {3.876605633217105*^9, 
   3.87660563331977*^9}, {3.8766057335684757`*^9, 3.876605733755821*^9}, {
   3.876606176507572*^9, 3.8766061766473217`*^9}, {3.876924163356978*^9, 
   3.87692416376956*^9}, {3.877898977685113*^9, 3.877899005903067*^9}, {
   3.877899702915874*^9, 3.877899706033389*^9}, {3.877899837506752*^9, 
   3.87789983766284*^9}, 3.8779023191362677`*^9, {3.877902365206052*^9, 
   3.877902370759647*^9}, 3.8780557393301697`*^9, {3.882271093090618*^9, 
   3.882271093207245*^9}, {3.8822729687809343`*^9, 3.882272969017634*^9}, {
   3.882273770240546*^9, 3.882273770334634*^9}, {3.896437261650031*^9, 
   3.896437271667344*^9}, {3.8964376193807592`*^9, 3.896437620419691*^9}, {
   3.8964379432868147`*^9, 3.896437943688837*^9}, {3.896438207338271*^9, 
   3.896438208062439*^9}, {3.896438242012519*^9, 3.8964382543268957`*^9}, {
   3.8964384711926126`*^9, 3.8964384723716097`*^9}, {3.896438728690742*^9, 
   3.8964387964414873`*^9}, {3.896439376442588*^9, 3.896439391503084*^9}, {
   3.896440780431581*^9, 3.896440783716631*^9}, {3.896780263065935*^9, 
   3.8967802654886637`*^9}, {3.896789017025899*^9, 3.896789018007018*^9}, {
   3.8967912770165443`*^9, 3.8967912777978497`*^9}, {3.8967935521377296`*^9, 
   3.89679355393941*^9}, {3.89679545363482*^9, 3.8967954543657293`*^9}, {
   3.896796423406238*^9, 3.896796424115493*^9}, {3.8968037342516747`*^9, 
   3.896803734962922*^9}, {3.896872370989456*^9, 3.896872372442749*^9}, {
   3.896877249788394*^9, 3.896877250752315*^9}, {3.896879922810071*^9, 
   3.89687992354837*^9}, {3.896881846783453*^9, 3.8968818499241877`*^9}, {
   3.896882663060669*^9, 3.896882663787798*^9}, {3.8968859112196817`*^9, 
   3.8968859117126017`*^9}, {3.8968863495597973`*^9, 3.896886350441935*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"a3e3bdaf-9933-4490-837c-b57073743a74"],

Cell[TextData[{
 "Set parameters for the optimization:\n  gridboxcutoff is the minimum amount \
of sand that a box must contain to be included. Specifically, if the \
difference between initial and final amounts of   \n  sand in that box is \
less than gridboxcutoff, then the box is excluded from the calculation. ",
 StyleBox["Set this to 0 to include all boxes",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.718714837186059*^9, 3.718714877180376*^9}, {
  3.718838284211881*^9, 3.718838346993821*^9}, {3.896186035085161*^9, 
  3.896186045117791*^9}, {3.8961861450644712`*^9, 
  3.896186148744989*^9}},ExpressionUUID->"b0c46f15-0580-44c0-9d77-\
65b52ff38a0f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gridboxcutoff", "=", 
   RowBox[{".0001", "/", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       SuperscriptBox["nbox", "2"], "20"], ")"}], "2"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"scale", " ", "to", " ", "nbox"}], ",", " ", 
    RowBox[{"divide", " ", "by", " ", "nbox", " ", "squared"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7187155840273438`*^9, 3.718715593315936*^9}, 
   3.718837834737796*^9, 3.7338383153381925`*^9, {3.8414934264833436`*^9, 
   3.8414934476196184`*^9}, {3.875608785270916*^9, 3.8756088112454576`*^9}, {
   3.882271899836897*^9, 3.882271911107885*^9}, {3.8822729906416597`*^9, 
   3.8822729926229687`*^9}, {3.896186084066246*^9, 3.89618611877936*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"d2441d78-437b-44f9-a639-8490da281f0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find x, y, z, & w bounds", "Section",
 CellChangeTimes->{{3.896777814403508*^9, 3.896777823064856*^9}, {
  3.896778088170226*^9, 
  3.89677808937145*^9}},ExpressionUUID->"ac0f21a7-3b56-4487-b3e4-\
fb1787eb39c9"],

Cell["\<\
This takes Jillian\[CloseCurlyQuote]s code for finding bounds in 2D and \
making it higher dimensional. This is her original comment: To get the most \
accurate results, we need the edges of the sandbox to fit very closely to the \
function. Here we are finding xmin,xmax,ymin,and ymax which show us where the \
\[OpenCurlyDoubleQuote]walls\[CloseCurlyDoubleQuote] of the sandbox will be. 

Note: Calling 5th dimension \[OpenCurlyDoubleQuote]v\[CloseCurlyDoubleQuote]

Additionally, I take into consideration the initial function as well, and \
take the largest magnitude of finit vs ffinal to be the max or min value.\
\>", "Text",
 CellChangeTimes->{{3.896778112368821*^9, 3.896778123020911*^9}, {
  3.896786854653359*^9, 3.896787002450808*^9}, {3.896789971959566*^9, 
  3.8967900011545553`*^9}},ExpressionUUID->"783a6ca1-94c7-40a6-a774-\
eba66a4cda2e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vmaxvalsf", "=", 
   RowBox[{"FindMaximum", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ffinal", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}], ",", 
       RowBox[{
        RowBox[{"-", "Infinity"}], "<", "x", "<", "Infinity"}], ",", 
       RowBox[{
        RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
       RowBox[{
        RowBox[{"-", "Infinity"}], "<", "z", "<", "Infinity"}], ",", 
       RowBox[{
        RowBox[{"-", "Infinity"}], "<", "w", "<", "Infinity"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vmaxf", " ", "=", " ", 
   RowBox[{"vmaxvalsf", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startxf", " ", "=", " ", 
   RowBox[{"x", "/.", 
    RowBox[{"Last", "[", "vmaxvalsf", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startyf", " ", "=", " ", 
   RowBox[{"y", "/.", " ", 
    RowBox[{"Last", "[", "vmaxvalsf", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startzf", " ", "=", " ", 
   RowBox[{"z", "/.", 
    RowBox[{"Last", "[", "vmaxvalsf", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startwf", " ", "=", " ", 
   RowBox[{"w", "/.", " ", 
    RowBox[{"Last", "[", "vmaxvalsf", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vmingoalf", " ", "=", " ", 
    RowBox[{"vmaxf", "*", "0.001"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vmaxvalsi", "=", 
   RowBox[{"FindMaximum", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"finit", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}], ",", 
       RowBox[{
        RowBox[{"-", "Infinity"}], "<", "x", "<", "Infinity"}], ",", 
       RowBox[{
        RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
       RowBox[{
        RowBox[{"-", "Infinity"}], "<", "z", "<", "Infinity"}], ",", 
       RowBox[{
        RowBox[{"-", "Infinity"}], "<", "w", "<", "Infinity"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vmaxi", " ", "=", " ", 
   RowBox[{"vmaxvalsi", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startxi", " ", "=", " ", 
   RowBox[{"x", "/.", 
    RowBox[{"Last", "[", "vmaxvalsi", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startyi", " ", "=", " ", 
   RowBox[{"y", "/.", " ", 
    RowBox[{"Last", "[", "vmaxvalsi", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startzi", " ", "=", " ", 
   RowBox[{"z", "/.", 
    RowBox[{"Last", "[", "vmaxvalsi", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startwi", " ", "=", " ", 
   RowBox[{"w", "/.", " ", 
    RowBox[{"Last", "[", "vmaxvalsi", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vmingoali", " ", "=", " ", 
    RowBox[{"vmaxi", "*", "0.001"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inc", " ", "=", " ", "0.001"}], ";"}]}], "Input",
 CellChangeTimes->{{3.896778137651856*^9, 3.896778157197116*^9}, {
   3.896778215940013*^9, 3.896778255549398*^9}, 3.89677829179836*^9, {
   3.896778651517428*^9, 3.896778687193735*^9}, {3.896955888954825*^9, 
   3.8969559570261993`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"58583300-1c15-4916-a5ee-476e6cdf6903"],

Cell[CellGroupData[{

Cell["X Bounds", "Subsection",
 CellChangeTimes->{{3.8967911804899187`*^9, 
  3.8967911835746403`*^9}},ExpressionUUID->"9aa27b33-54b4-497f-9871-\
83084ce692ba"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vxmaxloop1", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ffinal", "[", 
         RowBox[{"startxf", ",", "y", ",", "z", ",", "w"}], "]"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "z", ",", "w"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xmax1", " ", "=", " ", "startxf"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"vxmaxloop1", ">", "vmingoalf"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vxmaxloop1", " ", "=", " ", 
      RowBox[{
       RowBox[{"FindMaximum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ffinal", "[", 
            RowBox[{"xmax1", ",", "y", ",", "z", ",", "w"}], "]"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "y", "<", "Infinity"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}], ",", 
           
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "z", ",", "w"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xmax1", "+=", "inc"}]}]}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vxmaxloop2", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"finit", "[", 
         RowBox[{"startxi", ",", "y", ",", "z", ",", "w"}], "]"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "z", ",", "w"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xmax2", " ", "=", " ", "startxi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"vxmaxloop2", ">", "vmingoali"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vxmaxloop2", " ", "=", " ", 
      RowBox[{
       RowBox[{"FindMaximum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"finit", "[", 
            RowBox[{"xmax2", ",", "y", ",", "z", ",", "w"}], "]"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "y", "<", "Infinity"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}], ",", 
           
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "z", ",", "w"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xmax2", "+=", "inc"}]}]}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"xmax1", ">", "xmax2"}], ",", 
    RowBox[{"xmax", "=", "xmax1"}], ",", 
    RowBox[{"xmax", "=", "xmax2"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", "xmax"}], "Input",
 CellChangeTimes->{{3.896778722487073*^9, 3.8967787887454643`*^9}, {
   3.8967788241388493`*^9, 3.89677885264086*^9}, {3.89678209182156*^9, 
   3.896782122690876*^9}, {3.896782161044222*^9, 3.896782218099806*^9}, {
   3.896782264544076*^9, 3.896782269013857*^9}, {3.896783557319964*^9, 
   3.89678355948776*^9}, 3.8967835930283127`*^9, {3.896783854964094*^9, 
   3.896783865226624*^9}, {3.896784037287274*^9, 3.896784038119217*^9}, {
   3.8967900160752296`*^9, 3.8967900168706293`*^9}, {3.896955964441403*^9, 
   3.896956021560994*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"c6f6b84f-a5f0-40b9-86d5-e444f8d4a070"],

Cell[BoxData["2.7299999999998104`"], "Output",
 CellChangeTimes->{3.89687242117568*^9, 3.896874563094349*^9, 
  3.896877420335444*^9, 3.896879955525552*^9, 3.8968818666063023`*^9, 
  3.896882679100998*^9, 3.896885927712048*^9, 3.896886366416486*^9, 
  3.89695621494032*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"c0933dd3-2b6c-48d3-9213-1dc38dd90742"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vxminloop1", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ffinal", "[", 
         RowBox[{"startxf", ",", "y", ",", "z", ",", "w"}], "]"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "y", "<", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "z", ",", "w"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xmin1", " ", "=", " ", "startxf"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"vxminloop1", ">", "vmingoalf"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vxminloop1", " ", "=", " ", 
      RowBox[{
       RowBox[{"FindMaximum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ffinal", "[", 
            RowBox[{"xmin1", ",", "y", ",", "z", ",", "w"}], "]"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "y", "<", "Infinity"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}], ",", 
           
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "z", ",", "w"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xmin1", "=", 
      RowBox[{"xmin1", " ", "-", " ", "inc"}]}]}]}], "\[IndentingNewLine]", 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vxminloop2", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"finit", "[", 
         RowBox[{"startxi", ",", "y", ",", "z", ",", "w"}], "]"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "y", "<", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "z", ",", "w"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xmin2", " ", "=", " ", "startxi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"vxminloop2", ">", "vmingoali"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vxminloop2", " ", "=", " ", 
      RowBox[{
       RowBox[{"FindMaximum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"finit", "[", 
            RowBox[{"xmin2", ",", "y", ",", "z", ",", "w"}], "]"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "y", "<", "Infinity"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}], ",", 
           
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "z", ",", "w"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xmin2", "=", 
      RowBox[{"xmin2", "-", " ", "inc"}]}]}]}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"xmin1", "<", "xmin2"}], ",", 
    RowBox[{"xmin", "=", "xmin1"}], ",", 
    RowBox[{"xmin", "=", "xmin2"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", "xmin"}], "Input",
 CellChangeTimes->{{3.8967839152708387`*^9, 3.896783924125626*^9}, 
   3.896783985666293*^9, {3.896784019159463*^9, 3.896784020168515*^9}, {
   3.896790022526051*^9, 3.89679002349514*^9}, {3.8969559870710287`*^9, 
   3.896956025887267*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"d5bec322-266c-4f44-941b-7f54afccf2cc"],

Cell[BoxData[
 RowBox[{"-", "2.6299999999998214`"}]], "Output",
 CellChangeTimes->{3.896872436826433*^9, 3.896874575429572*^9, 
  3.896877433820786*^9, 3.896879974253463*^9, 3.896881877680225*^9, 
  3.896882690144212*^9, 3.8968859406483994`*^9, 3.896886378931529*^9, 
  3.896956226250844*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"bf60d77c-7778-4aed-a36f-02d826f79a53"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Y Bounds", "Subsection",
 CellChangeTimes->{{3.8967911804899187`*^9, 
  3.896791193503196*^9}},ExpressionUUID->"68508581-1c4b-4645-a6ca-\
915b753d99e0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ymax1", " ", "=", " ", "startyf"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vymaxloop1", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ffinal", "[", 
         RowBox[{"x", ",", "startyf", ",", "z", ",", "w"}], "]"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "x", "<", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "z", ",", "w"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"vymaxloop1", ">", "vmingoalf"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vymaxloop1", " ", "=", " ", 
      RowBox[{
       RowBox[{"FindMaximum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ffinal", "[", 
            RowBox[{"x", ",", "ymax1", ",", "z", ",", "w"}], "]"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "x", "<", "Infinity"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}], ",", 
           
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "z", ",", "w"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ymax1", " ", "+=", " ", "inc"}], ";"}]}], "\[IndentingNewLine]",
    "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ymax2", " ", "=", " ", "startyi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vymaxloop2", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"finit", "[", 
         RowBox[{"x", ",", "startyi", ",", "z", ",", "w"}], "]"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "x", "<", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "z", ",", "w"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"vymaxloop2", ">", "vmingoali"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vymaxloop2", " ", "=", " ", 
      RowBox[{
       RowBox[{"FindMaximum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"finit", "[", 
            RowBox[{"x", ",", "ymax2", ",", "z", ",", "w"}], "]"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "x", "<", "Infinity"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}], ",", 
           
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "z", ",", "w"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ymax2", " ", "+=", " ", "inc"}], ";"}]}], "\[IndentingNewLine]",
    "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"ymax1", ">", "ymax2"}], ",", 
    RowBox[{"ymax", "=", "ymax1"}], ",", 
    RowBox[{"ymax", "=", "ymax2"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", "ymax"}], "Input",
 CellChangeTimes->{{3.896779184493223*^9, 3.896779253963715*^9}, {
   3.896779702638678*^9, 3.89677971060001*^9}, {3.8967824881351547`*^9, 
   3.896782542719596*^9}, 3.896783280827682*^9, {3.89678335038743*^9, 
   3.896783362175378*^9}, {3.896956037501054*^9, 3.8969560660417967`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"054b6f9e-0bc0-4c9b-b296-482425fdba4e"],

Cell[BoxData["2.7299999999998104`"], "Output",
 CellChangeTimes->{3.896872447644611*^9, 3.896874586101775*^9, 
  3.896877444302286*^9, 3.896879988421685*^9, 3.896881888226591*^9, 
  3.8968827013133698`*^9, 3.8968859533879957`*^9, 3.8968863925575943`*^9, 
  3.8969562366948853`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"bcbd1640-ed89-406b-8b9b-841f43b1d177"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vyminloop1", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ffinal", "[", 
         RowBox[{"x", ",", "startyf", ",", "z", ",", "w"}], "]"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "x", "<", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "z", ",", "w"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ymin1", " ", "=", " ", "startyf"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"vyminloop1", ">", "vmingoalf"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vyminloop1", " ", "=", " ", 
      RowBox[{
       RowBox[{"FindMaximum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ffinal", "[", 
            RowBox[{"x", ",", "ymin1", ",", "z", ",", "w"}], "]"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "x", "<", "Infinity"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}], ",", 
           
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "z", ",", "w"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ymin1", " ", "=", " ", 
      RowBox[{"ymin1", " ", "-", " ", "inc"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vyminloop2", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"finit", "[", 
         RowBox[{"x", ",", "startyi", ",", "z", ",", "w"}], "]"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "x", "<", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "z", ",", "w"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ymin2", " ", "=", " ", "startyi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"vyminloop2", ">", "vmingoali"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vyminloop2", " ", "=", " ", 
      RowBox[{
       RowBox[{"FindMaximum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"finit", "[", 
            RowBox[{"x", ",", "ymin2", ",", "z", ",", "w"}], "]"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "x", "<", "Infinity"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}], ",", 
           
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "z", ",", "w"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ymin2", " ", "=", " ", 
      RowBox[{"ymin2", " ", "-", " ", "inc"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"ymin1", "<", "ymin2"}], ",", 
    RowBox[{"ymin", "=", "ymin1"}], ",", 
    RowBox[{"ymin", "=", "ymin2"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", "ymin"}], "Input",
 CellChangeTimes->{{3.896779423013777*^9, 3.896779455559682*^9}, {
  3.896779725540132*^9, 3.896779727510112*^9}, {3.8967799675389833`*^9, 
  3.896780001785596*^9}, {3.896782554254321*^9, 3.8967825925601254`*^9}, {
  3.89678265626088*^9, 3.896782659043618*^9}, {3.896784136463428*^9, 
  3.896784137117757*^9}, {3.896956074939237*^9, 3.896956095820725*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"c69848a4-340c-4648-bb5b-ba609b636b5f"],

Cell[BoxData[
 RowBox[{"-", "2.6299999999998214`"}]], "Output",
 CellChangeTimes->{3.89687246374826*^9, 3.896874596886463*^9, 
  3.896877455046872*^9, 3.896880003316779*^9, 3.896881899390057*^9, 
  3.896882714001606*^9, 3.896885967014759*^9, 3.896886414829967*^9, 
  3.896956247326933*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"4cb167e3-e102-4cdd-8cb5-1403c9ec599a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Z Bounds", "Subsection",
 CellChangeTimes->{{3.8967911804899187`*^9, 
  3.89679119980294*^9}},ExpressionUUID->"52aab64f-0ef2-4010-a447-\
71db4f2b6f6e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vzmaxloop1", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ffinal", "[", 
         RowBox[{"x", ",", "y", ",", "startzf", ",", "w"}], "]"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "x", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "w"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zmax1", " ", "=", " ", "startzf"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"vzmaxloop1", ">", "vmingoalf"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vzmaxloop1", " ", "=", " ", 
      RowBox[{
       RowBox[{"FindMaximum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ffinal", "[", 
            RowBox[{"x", ",", "y", ",", "zmax1", ",", "w"}], "]"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "x", "<", "Infinity"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
           
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "w"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"zmax1", "+=", "inc"}]}]}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vzmaxloop2", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"finit", "[", 
         RowBox[{"x", ",", "y", ",", "startzi", ",", "w"}], "]"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "x", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "w"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zmax2", " ", "=", " ", "startzi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"vzmaxloop2", ">", "vmingoali"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vzmaxloop2", " ", "=", " ", 
     RowBox[{
      RowBox[{"FindMaximum", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"finit", "[", 
           RowBox[{"x", ",", "y", ",", "zmax2", ",", "w"}], "]"}], ",", 
          RowBox[{
           RowBox[{"-", "Infinity"}], "<", "x", "<", "Infinity"}], ",", 
          RowBox[{
           RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
          RowBox[{
           RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "w"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"zmax2", "+=", "inc"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"zmax1", ">", "zmax2"}], ",", 
    RowBox[{"zmax", "=", "zmax1"}], ",", 
    RowBox[{"zmax", "=", "zmax2"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", "zmax"}], "Input",
 CellChangeTimes->{{3.896779518408169*^9, 3.896779528843792*^9}, {
   3.896779649054277*^9, 3.896779681109236*^9}, {3.896779742205112*^9, 
   3.896779765763262*^9}, {3.896779805153008*^9, 3.896779805981763*^9}, {
   3.896784251859028*^9, 3.8967842775993958`*^9}, {3.896784322152426*^9, 
   3.896784323239081*^9}, {3.896785999034911*^9, 3.8967860533551493`*^9}, {
   3.8967861400916767`*^9, 3.8967861454496098`*^9}, 3.8967900318215437`*^9, {
   3.896956103435178*^9, 3.8969561186402407`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"0cc9036c-80e8-4092-952a-2cbd0e873dd9"],

Cell[BoxData["2.7299999999998104`"], "Output",
 CellChangeTimes->{3.896872476884738*^9, 3.896874607125718*^9, 
  3.8968774653576117`*^9, 3.896880018118977*^9, 3.896881909767668*^9, 
  3.896882726536277*^9, 3.8968859791009007`*^9, 3.896886434121657*^9, 
  3.8969562577349253`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"e51394be-ba15-45eb-930f-0daf57e1bf1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vzminloop1", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ffinal", "[", 
         RowBox[{"x", ",", "y", ",", "startzf", ",", "w"}], "]"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "x", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "w"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zmin1", " ", "=", " ", "startzf"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"vzminloop1", ">", "vmingoalf"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vzminloop1", " ", "=", " ", 
     RowBox[{
      RowBox[{"FindMaximum", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ffinal", "[", 
           RowBox[{"x", ",", "y", ",", "zmin1", ",", "w"}], "]"}], ",", 
          RowBox[{
           RowBox[{"-", "Infinity"}], "<", "x", "<", "Infinity"}], ",", 
          RowBox[{
           RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
          RowBox[{
           RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "w"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"zmin1", " ", "=", " ", 
     RowBox[{"zmin1", " ", "-", " ", "inc"}]}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vzminloop2", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"finit", "[", 
         RowBox[{"x", ",", "y", ",", "startzi", ",", "w"}], "]"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "x", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "w"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zmin2", " ", "=", " ", "startzi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"vzminloop2", ">", "vmingoali"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vzminloop2", " ", "=", " ", 
     RowBox[{
      RowBox[{"FindMaximum", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"finit", "[", 
           RowBox[{"x", ",", "y", ",", "zmin2", ",", "w"}], "]"}], ",", 
          RowBox[{
           RowBox[{"-", "Infinity"}], "<", "x", "<", "Infinity"}], ",", 
          RowBox[{
           RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
          RowBox[{
           RowBox[{"-", "Infinity"}], "<", "w", "<", " ", "Infinity"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "w"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"zmin2", " ", "=", " ", 
     RowBox[{"zmin2", " ", "-", " ", "inc"}]}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"zmin1", "<", "zmin2"}], ",", 
    RowBox[{"zmin", "=", "zmin1"}], ",", 
    RowBox[{"zmin", "=", "zmin2"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", "zmin"}], "Input",
 CellChangeTimes->{{3.896779900100532*^9, 3.896779914165069*^9}, {
   3.896779961369974*^9, 3.896779962577427*^9}, {3.896780057018446*^9, 
   3.896780071072657*^9}, {3.896786084618328*^9, 3.896786085289795*^9}, {
   3.896786125698989*^9, 3.896786218051968*^9}, 3.896790035677829*^9, {
   3.8969561243351088`*^9, 3.896956151842493*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"8ce54ada-1e86-4cf5-a9c5-a24f8c24e900"],

Cell[BoxData[
 RowBox[{"-", "2.6299999999998214`"}]], "Output",
 CellChangeTimes->{3.896872491149672*^9, 3.896874617800378*^9, 
  3.8968774759146338`*^9, 3.8968800325729847`*^9, 3.896881920598895*^9, 
  3.896882741758864*^9, 3.896885992212925*^9, 3.896886448575366*^9, 
  3.896956268396687*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"e2f31451-633c-4c82-9e7c-e6c0c7c41661"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["W Bounds", "Subsection",
 CellChangeTimes->{{3.8967911804899187`*^9, 
  3.896791206441227*^9}},ExpressionUUID->"ed6f7e39-d8e6-4dc2-ab44-\
a5c0d35c103e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vwmaxloop1", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ffinal", "[", 
         RowBox[{"x", ",", "y", ",", "z", ",", "startwf"}], "]"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "x", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wmax1", " ", "=", " ", "startwf"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"vwmaxloop1", ">", "vmingoalf"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vwmaxloop1", " ", "=", " ", 
      RowBox[{
       RowBox[{"FindMaximum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ffinal", "[", 
            RowBox[{"x", ",", "y", ",", "z", ",", "wmax1"}], "]"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "x", "<", "Infinity"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
           
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wmax1", "+=", "inc"}]}]}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vwmaxloop2", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"finit", "[", 
         RowBox[{"x", ",", "y", ",", "z", ",", "startwi"}], "]"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "x", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wmax2", " ", "=", " ", "startwi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"vwmaxloop2", ">", "vmingoali"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vwmaxloop2", " ", "=", " ", 
     RowBox[{
      RowBox[{"FindMaximum", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"finit", "[", 
           RowBox[{"x", ",", "y", ",", "z", ",", "wmax2"}], "]"}], ",", 
          RowBox[{
           RowBox[{"-", "Infinity"}], "<", "x", "<", "Infinity"}], ",", 
          RowBox[{
           RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
          RowBox[{
           RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"wmax2", "+=", "inc"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"wmax1", ">", "wmax2"}], ",", 
    RowBox[{"wmax", "=", "wmax1"}], ",", 
    RowBox[{"wmax", "=", "wmax2"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", "wmax"}], "Input",
 CellChangeTimes->{{3.896780097494443*^9, 3.896780143970492*^9}, {
   3.8967862787347507`*^9, 3.896786369669429*^9}, 3.896790039818142*^9, {
   3.8969561584061317`*^9, 3.8969561683175783`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"8fd13dc6-1716-4351-a4af-0f547453c56c"],

Cell[BoxData["2.7299999999998104`"], "Output",
 CellChangeTimes->{3.896872503221651*^9, 3.896874628240664*^9, 
  3.896877486256795*^9, 3.896880047118902*^9, 3.896881931027255*^9, 
  3.896882757732353*^9, 3.8968860035239697`*^9, 3.8968864617678823`*^9, 
  3.8969562792238617`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"9be5af9f-83b1-43ed-a4d3-53bb69ed1443"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vwminloop1", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ffinal", "[", 
         RowBox[{"x", ",", "y", ",", "z", ",", "startwf"}], "]"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "x", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wmin1", " ", "=", " ", "startwf"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"vwminloop1", ">", "vmingoalf"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vwminloop1", " ", "=", " ", 
      RowBox[{
       RowBox[{"FindMaximum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ffinal", "[", 
            RowBox[{"x", ",", "y", ",", "z", ",", "wmin1"}], "]"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "x", "<", "Infinity"}], ",", 
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
           
           RowBox[{
            RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wmin1", " ", "=", " ", 
      RowBox[{"wmin1", " ", "-", " ", "inc"}]}]}]}], "\[IndentingNewLine]", 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vwminloop2", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindMaximum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"finit", "[", 
         RowBox[{"x", ",", "y", ",", "z", ",", "startwi"}], "]"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "x", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
        RowBox[{
         RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wmin2", " ", "=", " ", "startwi"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"vwminloop2", ">", "vmingoali"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vwminloop2", " ", "=", " ", 
     RowBox[{
      RowBox[{"FindMaximum", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"finit", "[", 
           RowBox[{"x", ",", "y", ",", "z", ",", "wmin2"}], "]"}], ",", 
          RowBox[{
           RowBox[{"-", "Infinity"}], "<", "x", "<", "Infinity"}], ",", 
          RowBox[{
           RowBox[{"-", "Infinity"}], "<", "y", "<", " ", "Infinity"}], ",", 
          RowBox[{
           RowBox[{"-", "Infinity"}], "<", "z", "<", " ", "Infinity"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"wmin2", " ", "=", " ", 
     RowBox[{"wmin2", " ", "-", " ", "inc"}]}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"wmin1", "<", "wmin2"}], ",", 
    RowBox[{"wmin", "=", "wmin1"}], ",", 
    RowBox[{"wmin", "=", "wmin2"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", "wmin"}], "Input",
 CellChangeTimes->{{3.896780164149012*^9, 3.896780207101118*^9}, {
   3.896786296684153*^9, 3.896786300053812*^9}, {3.896786396463726*^9, 
   3.8967864624356117`*^9}, 3.8967900456374187`*^9, {3.896956171858206*^9, 
   3.896956179388686*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"ec7380cc-1196-4a8d-81e1-6238d2fe213f"],

Cell[BoxData[
 RowBox[{"-", "2.6299999999998214`"}]], "Output",
 CellChangeTimes->{3.896872517898323*^9, 3.8968746391919107`*^9, 
  3.896877498108923*^9, 3.89688006324512*^9, 3.8968819424005823`*^9, 
  3.896882772445374*^9, 3.89688601558235*^9, 3.896886473615543*^9, 
  3.896956291053233*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"79fb88c7-9360-4705-a1f0-444f973d8f51"]
}, Open  ]],

Cell["Un-comment to check accuracy of bounds:", "Text",
 CellChangeTimes->{{3.8967912386043453`*^9, 3.896791248523657*^9}, {
  3.896791326636703*^9, 
  3.896791331187139*^9}},ExpressionUUID->"8f42aa0b-b374-4c53-a36b-\
5a653918fc37"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"ffinal", "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "zmin", ",", "zmax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"w", ",", "wmin", ",", "wmax"}], "}"}]}], "]"}], "/", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"ffinal", "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"w", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8967806302699347`*^9, 3.896780643314619*^9}, {
  3.896789897810319*^9, 3.896789903921008*^9}, {3.896791219213323*^9, 
  3.896791221866905*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"5b6ba242-55bb-4ffa-9df5-905e861cc8de"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"finit", "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "zmin", ",", "zmax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"w", ",", "wmin", ",", "wmax"}], "}"}]}], "]"}], "/", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"finit", "[", 
      RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"w", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.896789881913135*^9, 3.8967898836426687`*^9}, {
  3.896789921621372*^9, 3.896789933358386*^9}, {3.896791224835505*^9, 
  3.8967912282788067`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"4954648c-a879-4b1f-9412-5109c9f157fd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate Derived Quantities", "Section",
 CellChangeTimes->{{3.718713923550826*^9, 
  3.718713930889989*^9}},ExpressionUUID->"e0e7ab5e-f3e0-4e15-9183-\
e8021e4a0211"],

Cell["\<\
Normalize the initial and final sand distributions within the total box.\
\>", "Text",
 CellChangeTimes->{{3.718713478992344*^9, 
  3.7187134885471244`*^9}},ExpressionUUID->"2f742f89-be73-464c-a349-\
b2cc1cd10dd6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"finitnorm", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "w_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"finit", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}], "/", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"finit", "[", 
       RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "zmin", ",", "zmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", "wmin", ",", "wmax"}], "}"}], ",", 
      RowBox[{"Method", "->", 
       RowBox[{"{", "\"\<GlobalAdaptive\>\"", "}"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ffinalnorm", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "w_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"ffinal", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}], "/", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"ffinal", "[", 
       RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"z", ",", "zmin", ",", "zmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", "wmin", ",", "wmax"}], "}"}], ",", 
      RowBox[{"Method", "->", 
       RowBox[{"{", "\"\<GlobalAdaptive\>\"", "}"}]}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7187132897194853`*^9, 3.718713321111663*^9}, {
  3.7187135349379406`*^9, 3.7187136370391617`*^9}, {3.7187144047611823`*^9, 
  3.718714411501978*^9}, {3.7489103073135967`*^9, 3.7489103183341403`*^9}, {
  3.877899043184792*^9, 3.877899063729828*^9}, {3.8778998086251707`*^9, 
  3.877899852051049*^9}, {3.8778998959048777`*^9, 3.8778998974732733`*^9}, {
  3.877900468455474*^9, 3.877900481952978*^9}, {3.8779006359160957`*^9, 
  3.877900651792243*^9}, {3.877900951586198*^9, 3.8779009538842163`*^9}, {
  3.877901024036831*^9, 3.877901026111554*^9}, {3.878055851826264*^9, 
  3.878055861114071*^9}, {3.882272380120509*^9, 3.882272384408659*^9}, {
  3.8822725252952213`*^9, 3.882272527686101*^9}, {3.882272589023706*^9, 
  3.882272609944558*^9}},
 CellLabel->
  "In[607]:=",ExpressionUUID->"2a77889e-11d8-4f31-ad8c-cda205d849c8"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "eincr", 
   "\"The global error of the strategy GlobalAdaptive has increased more than \
\\!\\(\\*RowBox[{\\\"2000\\\"}]\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.139627562047687`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.000015043785456820707`\\\"}]\\) for the integral and \
error estimates.\"", 2, 607, 41, 29599494612071208813, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896872525424984*^9, 3.896874641731399*^9, 
  3.896877504514422*^9, 3.8968800708503428`*^9, 3.8968819492020473`*^9, 
  3.896882779740543*^9, 3.896886022444821*^9, 3.896886480298087*^9},
 CellLabel->
  "During evaluation of \
In[607]:=",ExpressionUUID->"07eaef94-212a-4812-a193-500ab0964df6"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "eincr", 
   "\"The global error of the strategy GlobalAdaptive has increased more than \
\\!\\(\\*RowBox[{\\\"2000\\\"}]\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.139627562047687`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.000015043785455275663`\\\"}]\\) for the integral and \
error estimates.\"", 2, 608, 42, 29599494612071208813, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896872525424984*^9, 3.896874641731399*^9, 
  3.896877504514422*^9, 3.8968800708503428`*^9, 3.8968819492020473`*^9, 
  3.896882779740543*^9, 3.896886022444821*^9, 3.8968864874306498`*^9},
 CellLabel->
  "During evaluation of \
In[607]:=",ExpressionUUID->"34f2177c-d985-4722-8bbe-412aa7b6937f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Remove", " ", "the", " ", "semicolon", " ", "to", " ", "check", " ", 
    "your", " ", "functions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"finitnorm", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ffinalnorm", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.87790098798735*^9, 3.877901020429185*^9}, {
  3.8961861777005997`*^9, 3.89618619776091*^9}},
 CellLabel->
  "In[609]:=",ExpressionUUID->"40d26771-ecfd-4e8a-8c13-34e3394b48a3"],

Cell["\<\
Calculate the amount of sand that needs to be moved from each box of the grid \
and store the results in an nbox x nbox x nbox x nbox grid called diffarray.
This is the difference between the initial and final amounts of sand, so a \
positive amount means sand needs to be moved away from this box (sources) and \
a negative amount means sand needs to be moved into this box (targets)\
\>", "Text",
 CellChangeTimes->{{3.7187140698282948`*^9, 3.7187140763068504`*^9}, {
   3.7187149943912573`*^9, 3.7187150387746525`*^9}, {3.7187152642361326`*^9, 
   3.718715281446309*^9}, 3.747570827784646*^9, {3.747570864771738*^9, 
   3.7475709001404667`*^9}, {3.747571046420991*^9, 3.7475710917247972`*^9}, {
   3.896186234867902*^9, 3.8961862390083103`*^9}, 
   3.896186297375317*^9},ExpressionUUID->"5056ba11-e6fe-48f6-a451-\
1bf0171bb80b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dx", "=", 
   FractionBox[
    RowBox[{"xmax", "-", "xmin"}], "nbox"]}], ";", 
  RowBox[{"dy", "=", 
   FractionBox[
    RowBox[{"ymax", "-", "ymin"}], "nbox"]}], ";", 
  RowBox[{"dz", "=", 
   FractionBox[
    RowBox[{"zmax", "-", "zmin"}], "nbox"]}], ";", 
  RowBox[{"dw", "=", 
   FractionBox[
    RowBox[{"wmax", "-", "wmin"}], "nbox"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"diffcutoff", " ", "=", " ", 
  RowBox[{"gridboxcutoff", "/", 
   RowBox[{"(", 
    RowBox[{"10", "*", 
     RowBox[{"(", 
      RowBox[{"dx", "^", "2"}], ")"}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.896343854607193*^9, 3.896343878369545*^9}, {
  3.896353606678575*^9, 3.896353692477675*^9}, {3.8963585795101547`*^9, 
  3.896358579717266*^9}, {3.896368603256733*^9, 3.896368604269182*^9}, {
  3.89678769394191*^9, 3.896787694862924*^9}, {3.8967890039961557`*^9, 
  3.896789004892864*^9}, {3.89679040216253*^9, 3.89679040318612*^9}, {
  3.896791125405999*^9, 3.896791129391163*^9}, {3.896795583586502*^9, 
  3.8967955848683977`*^9}, {3.896798184560483*^9, 3.896798185381884*^9}},
 CellLabel->
  "In[611]:=",ExpressionUUID->"fa56e065-e7e0-40b2-a355-8f239c849f9f"],

Cell[BoxData["8.701826687459427`*^-6"], "Output",
 CellChangeTimes->{3.89687253403491*^9, 3.8968746563191757`*^9, 
  3.8968775113604727`*^9, 3.8968800779101267`*^9, 3.896881955645048*^9, 
  3.896882787275331*^9, 3.896886030058202*^9, 3.8968864878735523`*^9},
 CellLabel->
  "Out[612]=",ExpressionUUID->"79755acb-713f-4bd6-a08b-1d4ed6c8dc9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Un", "-", 
    RowBox[{
    "comment", " ", "print", " ", "statement", " ", "to", " ", "track", " ", 
     "the", " ", "iteration", " ", "of", " ", "the", " ", "table"}]}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "The", " ", "\"\<If\>\"", " ", "statement", " ", "in", " ", "the", " ", 
     "following", " ", "samples", " ", "the", " ", "middle", " ", "of", " ", 
     "the", " ", "box", " ", "to", " ", "see", " ", "if", " ", "the", " ", 
     "difference", " ", "between", " ", "the", " ", "function", " ", "is", 
     " ", "less", " ", "than", " ", "the", " ", "cutoff"}], ",", " ", 
    RowBox[{
    "meaning", " ", "the", " ", "difference", " ", "is", " ", "very", " ", 
     RowBox[{"small", ".", " ", "If"}], " ", "the", " ", "difference", " ", 
     "is", " ", "very", " ", "small", " ", "we", " ", "assume", " ", "that", 
     " ", "the", " ", "difference", " ", "between", " ", "the", " ", 
     "initial", " ", "and", " ", "final", " ", "functions", " ", "are", " ", 
     "very", " ", "close", " ", "in", " ", "that", " ", "box"}], ",", " ", 
    RowBox[{
    "and", " ", "that", " ", "their", " ", "integral", " ", "is", " ", 
     "approximately", " ", 
     RowBox[{"zero", ".", " ", "This"}], " ", "way"}], ",", " ", 
    RowBox[{
    "the", " ", "table", " ", "cell", " ", "runs", " ", "faster", " ", 
     "without", " ", "facing", " ", "roundoff", " ", 
     RowBox[{"error", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"diffarray", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<i=\>\"", ",", "i", ",", "\"\<, j=\>\"", ",", "j", ",", 
          "\"\<, k=\>\"", ",", "k", ",", "\"\<, l=\>\"", ",", "l"}], "]"}], 
        ";"}], "*)"}], 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"finitnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "0.5"}], ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"j", "-", "0.5"}], ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"k", "-", "0.5"}], ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"l", "-", "0.5"}], ")"}], "*", "dw"}]}]}], "]"}], 
             "-", 
             RowBox[{"ffinalnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "0.5"}], ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"j", "-", "0.5"}], ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"k", "-", "0.5"}], ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"l", "-", "0.5"}], ")"}], "*", "dw"}]}]}], "]"}]}], 
            "]"}], "<", "diffcutoff"}], "&&", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"finitnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"j", "-", "1"}], ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"k", "-", "1"}], ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"l", "-", "1"}], ")"}], "*", "dw"}]}]}], "]"}], "-", 
             RowBox[{"ffinalnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"j", "-", "1"}], ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"k", "-", "1"}], ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"l", "-", "1"}], ")"}], "*", "dw"}]}]}], "]"}]}], 
            "]"}], "<", "diffcutoff"}], "&&", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"finitnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"j", "-", "1"}], ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"k", "-", "1"}], ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", "l", ")"}], "*", "dw"}]}]}], "]"}], "-", 
             RowBox[{"ffinalnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"j", "-", "1"}], ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"k", "-", "1"}], ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", "l", ")"}], "*", "dw"}]}]}], "]"}]}], "]"}], 
           "<", "diffcutoff"}], "&&", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"finitnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"j", "-", "1"}], ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", "k", ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"l", "-", "1"}], ")"}], "*", "dw"}]}]}], "]"}], "-", 
             RowBox[{"ffinalnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"j", "-", "1"}], ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", "k", ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"l", "-", "1"}], ")"}], "*", "dw"}]}]}], "]"}]}], 
            "]"}], "<", "diffcutoff"}], "&&", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"finitnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", "j", ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"k", "-", "1"}], ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"l", "-", "1"}], ")"}], "*", "dw"}]}]}], "]"}], "-", 
             RowBox[{"ffinalnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", "j", ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"k", "-", "1"}], ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"l", "-", "1"}], ")"}], "*", "dw"}]}]}], "]"}]}], 
            "]"}], "<", "diffcutoff"}], "&&", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"finitnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", "i", ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"j", "-", "1"}], ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"k", "-", "1"}], ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"l", "-", "1"}], ")"}], "*", "dw"}]}]}], "]"}], "-", 
             RowBox[{"ffinalnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", "i", ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"j", "-", "1"}], ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"k", "-", "1"}], ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"l", "-", "1"}], ")"}], "*", "dw"}]}]}], "]"}]}], 
            "]"}], "<", "diffcutoff"}], "&&", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"finitnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", "i", ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", "j", ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"k", "-", "1"}], ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"l", "-", "1"}], ")"}], "*", "dw"}]}]}], "]"}], "-", 
             RowBox[{"ffinalnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", "i", ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", "j", ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"k", "-", "1"}], ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"l", "-", "1"}], ")"}], "*", "dw"}]}]}], "]"}]}], 
            "]"}], "<", "diffcutoff"}], "&&", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"finitnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", "i", ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"j", "-", "1"}], ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"k", "-", "1"}], ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", "l", ")"}], "*", "dw"}]}]}], "]"}], "-", 
             RowBox[{"ffinalnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", "i", ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"j", "-", "1"}], ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"k", "-", "1"}], ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", "l", ")"}], "*", "dw"}]}]}], "]"}]}], "]"}], 
           "<", "diffcutoff"}], "&&", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"finitnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"j", "-", "1"}], ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", "k", ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", "l", ")"}], "*", "dw"}]}]}], "]"}], "-", 
             RowBox[{"ffinalnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"j", "-", "1"}], ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", "k", ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", "l", ")"}], "*", "dw"}]}]}], "]"}]}], "]"}], 
           "<", "diffcutoff"}], "&&", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"finitnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", "j", ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", "k", ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"l", "-", "1"}], ")"}], "*", "dw"}]}]}], "]"}], "-", 
             RowBox[{"ffinalnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", "j", ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", "k", ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"l", "-", "1"}], ")"}], "*", "dw"}]}]}], "]"}]}], 
            "]"}], "<", "diffcutoff"}], "&&", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"finitnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", "i", ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", "j", ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", "k", ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", "l", ")"}], "*", "dw"}]}]}], "]"}], "-", 
             RowBox[{"ffinalnorm", "[", 
              RowBox[{
               RowBox[{"xmin", "+", 
                RowBox[{
                 RowBox[{"(", "i", ")"}], "*", "dx"}]}], ",", 
               RowBox[{"ymin", "+", 
                RowBox[{
                 RowBox[{"(", "j", ")"}], "*", "dy"}]}], ",", 
               RowBox[{"zmin", "+", 
                RowBox[{
                 RowBox[{"(", "k", ")"}], "*", "dz"}]}], ",", 
               RowBox[{"wmin", "+", 
                RowBox[{
                 RowBox[{"(", "l", ")"}], "*", "dw"}]}]}], "]"}]}], "]"}], 
           "<", "diffcutoff"}]}], ",", "\[IndentingNewLine]", "0", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"NIntegrate", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"finitnorm", "[", 
             RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}], "-", 
            RowBox[{"ffinalnorm", "[", 
             RowBox[{"x", ",", "y", ",", "z", ",", "w"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"xmin", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
             RowBox[{"xmin", "+", 
              RowBox[{"i", "*", "dx"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"ymin", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"j", "-", "1"}], ")"}], "*", "dy"}]}], ",", 
             RowBox[{"ymin", "+", 
              RowBox[{"j", "*", "dy"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"z", ",", 
             RowBox[{"zmin", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"k", "-", "1"}], ")"}], "*", "dz"}]}], ",", 
             RowBox[{"zmin", "+", 
              RowBox[{"k", "*", "dz"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"w", ",", 
             RowBox[{"wmin", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"l", "-", "1"}], ")"}], "*", "dw"}]}], ",", 
             RowBox[{"wmin", "+", 
              RowBox[{"l", "*", "dw"}]}]}], "}"}], ",", 
           RowBox[{"Method", "->", 
            RowBox[{"{", "\"\<GlobalAdaptive\>\"", "}"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nbox"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "nbox"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "nbox"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "1", ",", "nbox"}], "}"}]}], "]"}]}], ";"}], 
   "\n"}]}]], "Input",
 CellChangeTimes->{{3.718714081814747*^9, 3.7187141129027367`*^9}, {
   3.7187141544741526`*^9, 3.7187143172783017`*^9}, {3.718714421055709*^9, 
   3.7187144213419113`*^9}, {3.7187144546094537`*^9, 3.718714464540495*^9}, {
   3.7187147534778547`*^9, 3.718714755470257*^9}, {3.7187149653917446`*^9, 
   3.7187149895938635`*^9}, {3.718715133954979*^9, 3.7187151581871185`*^9}, {
   3.877899098908813*^9, 3.877899147844853*^9}, {3.877899208971393*^9, 
   3.8778992574903097`*^9}, {3.877899786887785*^9, 3.8778997879687443`*^9}, {
   3.8779003497883453`*^9, 3.877900351359305*^9}, {3.87790235845516*^9, 
   3.877902358569243*^9}, {3.878055846834485*^9, 3.878055846979607*^9}, {
   3.8822710258003473`*^9, 3.88227102616685*^9}, {3.8822722225270767`*^9, 
   3.8822722227597713`*^9}, 3.882272254226655*^9, {3.882272646041637*^9, 
   3.8822726538455887`*^9}, {3.895923467212141*^9, 3.895923505401207*^9}, {
   3.895923973362968*^9, 3.895923985090439*^9}, {3.895924028056428*^9, 
   3.895924036877789*^9}, {3.8959241314210567`*^9, 3.895924137013422*^9}, {
   3.895924172537408*^9, 3.895924199567526*^9}, {3.895924570136174*^9, 
   3.89592458164721*^9}, {3.895924805515646*^9, 3.895924839645648*^9}, {
   3.895924924929891*^9, 3.895924994512683*^9}, {3.8959250672054453`*^9, 
   3.895925068022744*^9}, {3.8959251952111893`*^9, 3.8959252224598207`*^9}, {
   3.895925282174285*^9, 3.895925326493002*^9}, {3.895925375234013*^9, 
   3.895925398927339*^9}, {3.895925584299713*^9, 3.89592559974809*^9}, {
   3.895925748490678*^9, 3.8959257768414993`*^9}, {3.895926026608893*^9, 
   3.895926038199679*^9}, {3.8959300794538517`*^9, 3.895930086768016*^9}, 
   3.896177640043562*^9, {3.896177929780888*^9, 3.8961779349602203`*^9}, {
   3.8961784703897123`*^9, 3.896178481230187*^9}, {3.896178535834509*^9, 
   3.896178536944907*^9}, 3.896179009069387*^9, 3.896179214595422*^9, {
   3.896179605887463*^9, 3.896179666852302*^9}, {3.896179699876377*^9, 
   3.896179700875081*^9}, {3.896185424235263*^9, 3.896185444014757*^9}, {
   3.896186210217972*^9, 3.896186222013208*^9}, {3.896186257760446*^9, 
   3.896186269073998*^9}, {3.896186802803656*^9, 3.896186968461359*^9}, {
   3.896263601735806*^9, 3.896263603098274*^9}, {3.896264526541308*^9, 
   3.896264527596877*^9}, {3.896265061231979*^9, 3.896265092393018*^9}, {
   3.8962657853574877`*^9, 3.896265851609437*^9}, {3.896266594332131*^9, 
   3.896266595774708*^9}, {3.896268309825925*^9, 3.89626831494171*^9}, {
   3.896269110098776*^9, 3.896269121043015*^9}, {3.8962699449782667`*^9, 
   3.896269961493717*^9}, {3.89627113949063*^9, 3.8962711756856747`*^9}, 
   3.896343850546733*^9, {3.896343972483086*^9, 3.896343976935287*^9}, {
   3.8963440725934353`*^9, 3.896344099069195*^9}, {3.8963441424572763`*^9, 
   3.896344153745784*^9}, 3.896351380351779*^9, {3.8963515737819138`*^9, 
   3.896351618798766*^9}, {3.896353536466631*^9, 3.896353537722087*^9}, 
   3.89635357840202*^9, 3.8963537059683*^9, {3.8963538888638163`*^9, 
   3.896353900614468*^9}, {3.896354155681286*^9, 3.896354190774232*^9}, {
   3.896356551030181*^9, 3.8963565511603613`*^9}, 3.896356889732986*^9, {
   3.896361654985915*^9, 3.896361700872527*^9}, {3.89636288138759*^9, 
   3.896362963071854*^9}, {3.896367849573484*^9, 3.8963679016344233`*^9}, {
   3.8963679449080563`*^9, 3.896367986487905*^9}, {3.896368023662017*^9, 
   3.896368181177845*^9}, {3.8963686326078568`*^9, 3.896368696467929*^9}, {
   3.8963687662703257`*^9, 3.896368845161715*^9}, {3.896368879089903*^9, 
   3.896368883836047*^9}, {3.896371407303581*^9, 3.896371453284659*^9}, {
   3.896371491960689*^9, 3.8963714922382517`*^9}, {3.896432882169793*^9, 
   3.8964328860408897`*^9}, {3.89679008335086*^9, 3.896790092790434*^9}, {
   3.8967910370034*^9, 3.896791102231453*^9}, {3.8967911438009663`*^9, 
   3.8967911444017067`*^9}, {3.89679134672676*^9, 3.896791390489753*^9}, {
   3.896792231101465*^9, 3.896792231995434*^9}, {3.896792325232265*^9, 
   3.8967923273661613`*^9}, {3.8967947236728163`*^9, 3.8967947272591*^9}, {
   3.8967954433944597`*^9, 3.896795446781354*^9}, {3.896795695696458*^9, 
   3.896795697636445*^9}},
 CellLabel->
  "In[613]:=",ExpressionUUID->"635f47ee-8d43-4eff-9889-9452aa61e4ae"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 613, 43, 
   29599494612071208813, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896872551202536*^9, 3.896874671810156*^9, 
  3.89687752345184*^9, 3.8968800919439783`*^9, 3.896881963783152*^9, 
  3.896882807256576*^9, 3.896886038372201*^9, 3.8968865051220427`*^9},
 CellLabel->
  "During evaluation of \
In[613]:=",ExpressionUUID->"3c247c5f-0232-4535-af96-e320fce454af"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "eincr", 
   "\"The global error of the strategy GlobalAdaptive has increased more than \
\\!\\(\\*RowBox[{\\\"2000\\\"}]\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.700304260352989`*^-19\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"9.770146027960764`*^-14\\\"}]\\) for the integral and error estimates.\"", 
   2, 613, 44, 29599494612071208813, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896872551202536*^9, 3.896874671810156*^9, 
  3.89687752345184*^9, 3.8968800919439783`*^9, 3.896881963783152*^9, 
  3.896882807256576*^9, 3.896886038372201*^9, 3.896886512335779*^9},
 CellLabel->
  "During evaluation of \
In[613]:=",ExpressionUUID->"a68e60b9-bd6a-4989-874c-d1a2c05a07b8"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 613, 45, 
   29599494612071208813, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896872551202536*^9, 3.896874671810156*^9, 
  3.89687752345184*^9, 3.8968800919439783`*^9, 3.896881963783152*^9, 
  3.896882807256576*^9, 3.896886038372201*^9, 3.896886513891185*^9},
 CellLabel->
  "During evaluation of \
In[613]:=",ExpressionUUID->"d139749a-6d8a-4fa4-904d-40de2797a55b"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "eincr", 
   "\"The global error of the strategy GlobalAdaptive has increased more than \
\\!\\(\\*RowBox[{\\\"2000\\\"}]\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"7.066659807731863`*^-19\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"9.77015676407412`*^-14\\\"}]\\) for the integral and error estimates.\"", 2,
    613, 46, 29599494612071208813, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896872551202536*^9, 3.896874671810156*^9, 
  3.89687752345184*^9, 3.8968800919439783`*^9, 3.896881963783152*^9, 
  3.896882807256576*^9, 3.896886038372201*^9, 3.896886521016594*^9},
 CellLabel->
  "During evaluation of \
In[613]:=",ExpressionUUID->"393a30ae-0c1f-4f6f-a5ca-67e47a2d33c7"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 613, 47, 
   29599494612071208813, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896872551202536*^9, 3.896874671810156*^9, 
  3.89687752345184*^9, 3.8968800919439783`*^9, 3.896881963783152*^9, 
  3.896882807256576*^9, 3.896886038372201*^9, 3.896886524843473*^9},
 CellLabel->
  "During evaluation of \
In[613]:=",ExpressionUUID->"1004cabc-cf2a-4e9c-9e8d-141ba182d067"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 613, 48, 29599494612071208813, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896872551202536*^9, 3.896874671810156*^9, 
  3.89687752345184*^9, 3.8968800919439783`*^9, 3.896881963783152*^9, 
  3.896882807256576*^9, 3.896886038372201*^9, 3.896886524869076*^9},
 CellLabel->
  "During evaluation of \
In[613]:=",ExpressionUUID->"04393291-82fc-4656-92d7-86e2993c0e76"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "eincr", 
   "\"The global error of the strategy GlobalAdaptive has increased more than \
\\!\\(\\*RowBox[{\\\"2000\\\"}]\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"6.824486139794713`*^-19\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"9.770133533915674`*^-14\\\"}]\\) for the integral and error estimates.\"", 
   2, 613, 49, 29599494612071208813, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896872551202536*^9, 3.896874671810156*^9, 
  3.89687752345184*^9, 3.8968800919439783`*^9, 3.896881963783152*^9, 
  3.896882807256576*^9, 3.896886038372201*^9, 3.896886531944255*^9},
 CellLabel->
  "During evaluation of \
In[613]:=",ExpressionUUID->"37c638c8-a7ce-4072-a493-b35de1f79463"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 613, 50, 29599494612071208813, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896872551202536*^9, 3.896874671810156*^9, 
  3.89687752345184*^9, 3.8968800919439783`*^9, 3.896881963783152*^9, 
  3.896882807256576*^9, 3.896886038372201*^9, 3.896886532023316*^9},
 CellLabel->
  "During evaluation of \
In[613]:=",ExpressionUUID->"b5c2efc3-a7da-490b-905d-56829eea98db"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Create Necessary Inputs to run FindMinimumCostFlow", \
"Section"]], "Section",
 CellChangeTimes->{{3.747572405771767*^9, 
  3.7475724495852785`*^9}},ExpressionUUID->"bb089568-7b61-4276-81e4-\
e61d8f801e86"],

Cell["\<\
Create lists of all the boxes from which sand needs to be moved out \
(outboxes) and to which sand needs to be moved in (inboxes).
Each entry in one of those lists will be a list of four numbers: the x, y, z, \
and w coordinates of the center of the grid box.\
\>", "Text",
 CellChangeTimes->{{3.718715393471553*^9, 3.7187154746689825`*^9}, {
   3.7187155475985956`*^9, 3.7187155707979794`*^9}, {3.7187159199009247`*^9, 
   3.7187159375484276`*^9}, {3.718716818132281*^9, 3.718716839031063*^9}, {
   3.7320481965056753`*^9, 3.7320482074735203`*^9}, {3.732048253913473*^9, 
   3.732048254874402*^9}, {3.732048302752951*^9, 3.7320483353762054`*^9}, {
   3.74757182790379*^9, 3.747571829334055*^9}, 3.747572078460015*^9, {
   3.7475721406199784`*^9, 3.747572143906324*^9}, 3.747572220252279*^9, {
   3.7489098635711136`*^9, 3.748909867670958*^9}, {3.896186310539961*^9, 
   3.896186323030116*^9}, 
   3.896186978209367*^9},ExpressionUUID->"36f564ba-b0f9-4d4a-a7fe-\
36b1913f2f6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Check", " ", "the", " ", "dimensions", " ", "of", " ", "the", " ", 
    RowBox[{"diffarray", ":", " ", 
     RowBox[{
     "should", " ", "be", " ", "nbox", " ", "x", " ", "nbox", " ", "x", " ", 
      "nbox", " ", "x", " ", "nbox"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Dimensions", "[", "diffarray", "]"}]}]], "Input",
 CellChangeTimes->{{3.882271163476316*^9, 3.882271165281177*^9}, {
  3.882271800400872*^9, 3.8822718199347467`*^9}, {3.896186276077376*^9, 
  3.896186303484317*^9}},
 CellLabel->
  "In[614]:=",ExpressionUUID->"63ddfda6-a19b-4ba6-a873-7f3274221625"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "4", ",", "4", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.896873501244516*^9, 3.8968753316927156`*^9, 
  3.896878879746986*^9, 3.896880477196321*^9, 3.8968821338927183`*^9, 
  3.8968840100536737`*^9, 3.896886201015387*^9, 3.896886855726812*^9},
 CellLabel->
  "Out[614]=",ExpressionUUID->"deda8e47-ae88-492b-8270-112a0c254967"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"outboxes", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"inboxes", "=", 
   RowBox[{"{", "}"}]}], ";", " ", 
  RowBox[{"supplyamount", " ", "=", 
   RowBox[{"{", "}"}]}], ";", " ", 
  RowBox[{"demandamount", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "nbox"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "\[LessEqual]", "nbox"}], ",", 
      RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "<=", "nbox"}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"l", "=", "1"}], ",", 
          RowBox[{"l", "<=", "nbox"}], ",", 
          RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"diffarray", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}], 
               "]"}], ">", "gridboxcutoff"}], ",", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"outboxes", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"xmin", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "-", ".5"}], ")"}], "*", "dx"}]}], ",", 
                  RowBox[{"ymin", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", ".5"}], ")"}], "*", "dy"}]}], ",", 
                  RowBox[{"zmin", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"k", "-", ".5"}], ")"}], "*", "dz"}]}], ",", 
                  RowBox[{"wmin", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"l", "-", ".5"}], ")"}], "*", "dw"}]}]}], "}"}]}],
                "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"supplyamount", ",", 
                RowBox[{"diffarray", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}]}],
                "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"diffarray", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}], 
              "<", 
              RowBox[{"-", "gridboxcutoff"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"inboxes", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"xmin", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "-", ".5"}], ")"}], "*", "dx"}]}], ",", 
                  RowBox[{"ymin", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", ".5"}], ")"}], "*", "dy"}]}], ",", 
                  RowBox[{"zmin", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "-", ".5"}], ")"}], "*", "dz"}]}], ",", 
                  RowBox[{"wmin", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "-", ".5"}], ")"}], "*", "dw"}]}]}], "}"}]}],
                "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"demandamount", ",", 
                RowBox[{"diffarray", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}]}],
                "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7187151011727943`*^9, 3.718715117019005*^9}, {
   3.718715160978093*^9, 3.7187152354207497`*^9}, {3.7187152967701454`*^9, 
   3.718715389759921*^9}, {3.7187156660373745`*^9, 3.718715666405613*^9}, {
   3.7187158859058685`*^9, 3.7187159117441483`*^9}, {3.718716801836755*^9, 
   3.7187168126474085`*^9}, {3.7320454350464597`*^9, 3.732045475137607*^9}, {
   3.7320457835063353`*^9, 3.7320457839907713`*^9}, {3.7320459096176043`*^9, 
   3.732045914589596*^9}, {3.7320464038568344`*^9, 3.732046435487783*^9}, {
   3.732046561441983*^9, 3.7320465621295185`*^9}, {3.7320472556593637`*^9, 
   3.732047292387204*^9}, {3.7320473932194576`*^9, 3.7320474334639626`*^9}, 
   3.7320483527897673`*^9, {3.732632461103332*^9, 3.732632483734434*^9}, 
   3.7326325609955654`*^9, 3.7337936572063227`*^9, 3.7475711172050734`*^9, {
   3.747571190786585*^9, 3.747571242142131*^9}, {3.747571329054353*^9, 
   3.747571378354741*^9}, {3.7475714173245277`*^9, 3.7475714285559196`*^9}, {
   3.7475714797340403`*^9, 3.747571530544854*^9}, {3.7475718018644857`*^9, 
   3.747571819019231*^9}, 3.7475719317060776`*^9, 3.747571992940705*^9, 
   3.7475720498855886`*^9, 3.747572148700659*^9, 3.747572215160716*^9, {
   3.87789945621411*^9, 3.877899613084569*^9}, {3.8822719805425377`*^9, 
   3.882272002848894*^9}, {3.8822721015490837`*^9, 3.88227210427993*^9}, {
   3.8822728633368177`*^9, 3.8822728917074747`*^9}, {3.896186342303931*^9, 
   3.89618635033461*^9}, 3.896186985696108*^9, 3.896359659532282*^9, {
   3.8963597541952887`*^9, 3.896359807571097*^9}, {3.896359856930723*^9, 
   3.8963598605627003`*^9}, {3.896360430775208*^9, 3.896360441374647*^9}, {
   3.896360497919245*^9, 3.8963605141420918`*^9}},
 CellLabel->
  "In[615]:=",ExpressionUUID->"75f50500-5987-4ce1-b94f-f1b12fc2d3b7"],

Cell["\<\
The variables nout and nin are the numbers of boxes from which sand will be \
moved out or in.
 Their product, nvars, represents the total number of possible sand movements.\
\>", "Text",
 CellChangeTimes->{
  3.747572202183044*^9},ExpressionUUID->"93c04e31-c304-4b59-b474-\
1a05c709133d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nout", "=", 
   RowBox[{"Length", "[", "outboxes", "]"}]}], ";", 
  RowBox[{"nin", "=", 
   RowBox[{"Length", "[", "inboxes", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nvars", "=", 
   RowBox[{"nout", "*", "nin"}]}], ";"}]}], "Input",
 CellLabel->
  "In[617]:=",ExpressionUUID->"c81fda12-65f1-4247-a27e-683000f3788f"],

Cell["\<\
Creating a graph of vertices and edges contributing to the flow (bipartite \
graph of two sets of vertices: source set and target sets) 
EdgeCost: Assigning cost to each edge which is calculated by the Euclidean \
Distance between the two vertices. \
\>", "Text",
 CellChangeTimes->{{3.7475721628591304`*^9, 3.7475721776949883`*^9}, {
  3.896186398190297*^9, 
  3.896186401171027*^9}},ExpressionUUID->"230b3234-e4e3-4739-9f60-\
f916e214d461"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nout", "+", "nin"}]], "Input",
 CellChangeTimes->{{3.875793799868103*^9, 3.875793802614621*^9}},
 CellLabel->
  "In[619]:=",ExpressionUUID->"8a5b18f8-423d-4292-b5f6-ed2920e3cb6e"],

Cell[BoxData["117"], "Output",
 CellChangeTimes->{3.89687350130688*^9, 3.896875331965426*^9, 
  3.896878880236065*^9, 3.896880477292471*^9, 3.896882134048463*^9, 
  3.896884010695734*^9, 3.896886201204088*^9, 3.896886855986318*^9},
 CellLabel->
  "Out[619]=",ExpressionUUID->"f9db410f-a17e-433f-8bef-736f1be07910"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Running FindMinimumCostFlow", "Section",
 CellChangeTimes->{{3.8413586497106695`*^9, 3.8413586567506685`*^9}, {
  3.896186435243294*^9, 
  3.896186442152184*^9}},ExpressionUUID->"dff856d7-2e11-4775-bfb3-\
c48611676489"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "mat0", ",", "i", ",", "j", ",", "mat", ",", "k", ",", "l", ",", "m", ",", 
   "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.8414455693714323`*^9, 3.841445573032248*^9}, {
  3.841446523782212*^9, 3.8414465288888655`*^9}, {3.8414467553688374`*^9, 
  3.841446758540719*^9}, {3.841447872694888*^9, 3.8414478747358923`*^9}, {
  3.8414801748109426`*^9, 3.8414802033999434`*^9}, {3.841481094388789*^9, 
  3.8414810992017703`*^9}, {3.84148121384779*^9, 3.8414812146497726`*^9}, {
  3.841481352167692*^9, 3.8414813523376937`*^9}},
 CellLabel->
  "In[620]:=",ExpressionUUID->"e4dba550-6cb8-4fbb-9025-d3b6c0e09dfa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Create", " ", "the", " ", "cost", " ", "matrix", " ", "with", " ", "rows",
     " ", "being", " ", "all", " ", "supplying", " ", "boxes", " ", "and", 
    " ", "columns", " ", "being", " ", "all", " ", "demanding", " ", 
    RowBox[{"boxes", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"mat", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EuclideanDistance", "[", 
        RowBox[{
         RowBox[{"outboxes", "[", 
          RowBox[{"[", "o", "]"}], "]"}], ",", " ", 
         RowBox[{"inboxes", "[", 
          RowBox[{"[", "q", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"o", ",", 
         RowBox[{"Length", "@", "outboxes"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"q", ",", " ", 
         RowBox[{"Length", "@", "inboxes"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "FindMinimumCostFlow", " ", "method", " ", "requires", " ", "the", " ", 
      "columns", " ", "and", " ", "the", " ", "rows", " ", "to", " ", 
      "contain", " ", "all", " ", "boxes"}], ",", " ", 
     RowBox[{
     "no", " ", "matter", " ", "supplying", " ", "or", " ", "demanding"}], 
     ",", " ", 
     RowBox[{
     "though", " ", "I", " ", "think", " ", "the", " ", "method", " ", "will",
       " ", "not", " ", "actually", " ", "use", " ", "the", " ", "diagonally",
       " ", "lower", " ", "half", " ", "of", " ", "the", " ", "matrix"}], ",",
      " ", 
     RowBox[{
      RowBox[{
      "so", " ", "we", " ", "can", " ", "keep", " ", "elements", " ", "in", 
       " ", "that", " ", "part", " ", "quatiling", " ", "to", " ", "0.", " ", 
       "\[IndentingNewLine]", "Now", " ", "create", " ", "a", " ", "zero", 
       " ", "matrix", " ", "with", " ", "number", " ", "of", " ", "columns"}],
       " ", "=", " ", 
      RowBox[{
       RowBox[{"number", " ", "of", " ", "rows"}], " ", "=", " ", 
       RowBox[{"number", " ", "of", " ", "all", " ", "boxes"}]}]}], ",", " ", 
     
     RowBox[{
     "and", " ", "put", " ", "the", " ", "cost", " ", "matrix", " ", "from", 
      " ", "previous", " ", "section", " ", "onto", " ", "the", " ", "upper", 
      " ", "right", " ", "part", " ", "of", " ", "the", " ", "zero", " ", 
      "matrix"}], ",", 
     RowBox[{
     "where", " ", "the", " ", "rows", " ", "are", " ", "supplying", " ", 
      "boxes", " ", "and", " ", "columns", " ", "are", " ", "demanding", " ", 
      
      RowBox[{"boxes", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "@", "outboxes"}], "+", 
         RowBox[{"Length", "@", "inboxes"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "@", "outboxes"}], "+", 
         RowBox[{"Length", "@", "inboxes"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", 
      RowBox[{"Length", "@", "outboxes"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", 
        RowBox[{
         RowBox[{"Length", "@", "outboxes"}], "+", "1"}]}], ",", 
       RowBox[{"j", "\[LessEqual]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "@", "inboxes"}], "+", 
          RowBox[{"Length", "@", "outboxes"}]}], ")"}]}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"mat", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", 
           RowBox[{"j", "-", 
            RowBox[{"Length", "@", "outboxes"}]}]}], "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"m", "=", 
      RowBox[{
       RowBox[{"Length", "@", "outboxes"}], "+", "1"}]}], ",", 
     RowBox[{"m", "\[LessEqual]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "@", "inboxes"}], "+", 
        RowBox[{"Length", "@", "outboxes"}], "-", "1"}], ")"}]}], ",", 
     RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "@", "outboxes"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "m"}], "]"}], "]"}], "=", 
        RowBox[{"mat", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", 
           RowBox[{"m", "-", 
            RowBox[{"Length", "@", "outboxes"}]}]}], "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", "//", "MatrixForm"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8414481719044375`*^9, 3.841448263199439*^9}, {
   3.8414482987994437`*^9, 3.8414483691114388`*^9}, {3.8414485856880803`*^9, 
   3.8414486575770683`*^9}, 3.8414793839445667`*^9, {3.8414796056779747`*^9, 
   3.8414796184409695`*^9}, {3.8414796666909957`*^9, 
   3.8414796693719974`*^9}, {3.8414797189669995`*^9, 3.841479736503998*^9}, {
   3.8414797957833433`*^9, 3.841479808655347*^9}, {3.8414798408483453`*^9, 
   3.8414798409783597`*^9}, {3.84147992159634*^9, 3.8414800628595266`*^9}, {
   3.841481328512048*^9, 3.8414813388010445`*^9}, 3.875793730245781*^9, {
   3.87660389009202*^9, 3.8766039646544323`*^9}, {3.8766040101822023`*^9, 
   3.876604013907318*^9}, {3.876604069481089*^9, 3.876604084193413*^9}, {
   3.876604188980917*^9, 3.876604207241887*^9}, {3.876604251078076*^9, 
   3.876604256005031*^9}, {3.8766046287970743`*^9, 3.8766046377635937`*^9}, 
   3.8961864664525013`*^9, {3.896186520532077*^9, 3.8961865383365927`*^9}},
 CellLabel->
  "In[621]:=",ExpressionUUID->"025a0413-7e6d-4fe5-aa24-67b8f2e86375"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "mat0", "]"}]], "Input",
 CellChangeTimes->{{3.87660465674741*^9, 3.8766046585749807`*^9}},
 CellLabel->
  "In[626]:=",ExpressionUUID->"ed3d084b-4a9d-4e63-9ef2-5ed99907a94b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"117", ",", "117"}], "}"}]], "Output",
 CellChangeTimes->{3.8968735015193443`*^9, 3.8968753331202307`*^9, 
  3.896878886159552*^9, 3.896880478223381*^9, 3.8968821342048903`*^9, 
  3.896884013494972*^9, 3.896886201374008*^9, 3.8968868562823763`*^9},
 CellLabel->
  "Out[626]=",ExpressionUUID->"2a490474-ff17-426b-ab57-facdaa29910e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Then", " ", "put", " ", "in", " ", "the", " ", "numbers", " ", "for", " ",
     "the", " ", "upper", " ", "left", " ", "section"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "1"}], ",", 
     RowBox[{"k", "<=", 
      RowBox[{"Length", "@", "outboxes"}]}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"l", "=", 
        RowBox[{"k", "+", "1"}]}], ",", 
       RowBox[{"l", "\[LessEqual]", 
        RowBox[{"Length", "@", "outboxes"}]}], ",", 
       RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "l"}], "]"}], "]"}], "=", 
        RowBox[{"EuclideanDistance", "[", 
         RowBox[{
          RowBox[{"outboxes", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", " ", 
          RowBox[{"outboxes", "[", 
           RowBox[{"[", "l", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]",
       "]"}]}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", "//", "MatrixForm"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.841479395850571*^9, 3.8414793960655684`*^9}, {
   3.841479742842001*^9, 3.8414797697763433`*^9}, {3.841479816531345*^9, 
   3.841479843832347*^9}, 3.875793734593319*^9, {3.896187017915361*^9, 
   3.896187022286365*^9}},
 CellLabel->
  "In[627]:=",ExpressionUUID->"e4177d24-60bd-47b7-a910-c07bb28cf687"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"For", " ", "the", " ", "lower", " ", "right"}], ".."}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"m", "=", 
      RowBox[{
       RowBox[{"Length", "@", "outboxes"}], "+", "1"}]}], ",", 
     RowBox[{"m", "\[LessEqual]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "@", "inboxes"}], "+", 
        RowBox[{"Length", "@", "outboxes"}], "-", "1"}], ")"}]}], ",", 
     RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"n", "=", 
        RowBox[{"m", "+", "1"}]}], ",", 
       RowBox[{"n", "\[LessEqual]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "@", "inboxes"}], "+", 
          RowBox[{"Length", "@", "outboxes"}]}], ")"}]}], ",", 
       RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"m", ",", "n"}], "]"}], "]"}], "=", 
        RowBox[{"EuclideanDistance", "[", 
         RowBox[{
          RowBox[{"inboxes", "[", 
           RowBox[{"[", 
            RowBox[{"m", "-", 
             RowBox[{"Length", "@", "outboxes"}]}], "]"}], "]"}], ",", " ", 
          RowBox[{"inboxes", "[", 
           RowBox[{"[", 
            RowBox[{"n", "-", 
             RowBox[{"Length", "@", "outboxes"}]}], "]"}], "]"}]}], "]"}]}]}],
       "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", "//", "MatrixForm"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.841479846079341*^9, 3.841479878728359*^9}, {
   3.841481153466199*^9, 3.841481159092202*^9}, 3.8757939306154327`*^9, {
   3.876262330300892*^9, 3.87626235304852*^9}, {3.87630306970643*^9, 
   3.876303071201099*^9}, 3.896187027154681*^9},
 CellLabel->
  "In[629]:=",ExpressionUUID->"f8f99767-d7e9-4263-a0a8-6fc78c7f8c8d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "mat0", "]"}]], "Input",
 CellLabel->
  "In[631]:=",ExpressionUUID->"78c34b62-3a8d-486e-98ba-b18f69517ec8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"117", ",", "117"}], "}"}]], "Output",
 CellChangeTimes->{3.896873501675158*^9, 3.8968753333827868`*^9, 
  3.896878889806254*^9, 3.8968804783159447`*^9, 3.896882134344417*^9, 
  3.896884015392961*^9, 3.896886201560264*^9, 3.8968868565368958`*^9},
 CellLabel->
  "Out[631]=",ExpressionUUID->"1bc8e66c-7d04-48fe-bf9e-a991541097f4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Uncomment", " ", "to", " ", "export", " ", "the", " ", "CSVs"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<supplyamount.csv\>\"", ",", "supplyamount", ",", "\"\<CSV\>\""}], 
     "]"}], "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<demandamount.csv\>\"", ",", "demandamount", ",", "\"\<CSV\>\""}], 
     "]"}], "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{"\"\<mat0.csv\>\"", ",", "mat0", ",", "\"\<CSV\>\""}], "]"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.896186477448241*^9, 3.896186492945067*^9}, {
  3.896187031439362*^9, 3.89618704100214*^9}, {3.896880265437928*^9, 
  3.896880268053938*^9}, {3.896881834083799*^9, 3.896881836303108*^9}},
 CellLabel->
  "In[632]:=",ExpressionUUID->"98b7f662-b3ff-42b3-afeb-14c332e09264"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Find", " ", "the", " ", "minimum", " ", "cost", " ", "flow"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FMCF", " ", "=", " ", 
   RowBox[{"FindMinimumCostFlow", "[", " ", 
    RowBox[{"mat0", ",", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"supplyamount", ",", "demandamount"}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.841479871470343*^9, 3.8414798990173435`*^9}, {
   3.8762622784028587`*^9, 3.8762623497679367`*^9}, {3.876262407259721*^9, 
   3.876262409381081*^9}, 3.8762624633824673`*^9, {3.8763029991594877`*^9, 
   3.876302999420178*^9}, {3.876303041838646*^9, 3.876303057947942*^9}, {
   3.876303192509048*^9, 3.876303195754176*^9}, {3.8763032640470037`*^9, 
   3.876303345178494*^9}, {3.876304469196013*^9, 3.8763044811269207`*^9}, {
   3.876304640583706*^9, 3.8763046407153883`*^9}, 3.8765854310417347`*^9, 
   3.896187045916844*^9, {3.89636251884578*^9, 3.896362521220821*^9}},
 CellLabel->
  "In[633]:=",ExpressionUUID->"a52e930f-b623-48e1-8e73-79fc80aab877"],

Cell[BoxData["0.18168165017321408`"], "Output",
 CellChangeTimes->{3.8968753335265093`*^9, 3.89688047876538*^9, 
  3.896882134458351*^9, 3.896884015994824*^9, 3.896886201718096*^9, 
  3.896886856779467*^9},
 CellLabel->
  "Out[633]=",ExpressionUUID->"930011ff-0263-41d2-a601-f4e2e1f9e1b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"totaltime", "=", 
  RowBox[{
   RowBox[{"AbsoluteTime", "[", "]"}], "-", "begint"}]}]], "Input",
 CellChangeTimes->{{3.8822738087106047`*^9, 3.882273819514697*^9}, {
   3.896789782153775*^9, 3.896789786438531*^9}, 3.896790969507348*^9},
 CellLabel->
  "In[634]:=",ExpressionUUID->"49bb1f05-5809-4849-81f0-09fa549277f6"],

Cell[BoxData["502.614724`9.152780200510762"], "Output",
 CellChangeTimes->{3.896875333570312*^9, 3.896880478793859*^9, 
  3.896882134508994*^9, 3.896884016390933*^9, 3.896886201794773*^9, 
  3.89688685688605*^9},
 CellLabel->
  "Out[634]=",ExpressionUUID->"0a1c2b6f-f2cf-4e80-8d91-b8427005f248"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"analytical", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.1", "^", "2"}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{"0.1", "^", "2"}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{"0.1", "^", "2"}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{"0.1", "^", "2"}], ")"}]}], ")"}], "^", 
   RowBox[{"(", 
    RowBox[{"1", "/", "2"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.8963712925535603`*^9, 3.8963713186329527`*^9}, {
  3.896451168049049*^9, 3.89645116981402*^9}, {3.896789798324996*^9, 
  3.896789801334113*^9}},
 CellLabel->
  "In[635]:=",ExpressionUUID->"6e3ebabc-f2c7-4794-b1ff-b67e2f88c31f"],

Cell[BoxData["0.2`"], "Output",
 CellChangeTimes->{3.8968753336411867`*^9, 3.8968804788402567`*^9, 
  3.896882134633176*^9, 3.896884016644012*^9, 3.8968862019219007`*^9, 
  3.8968868569856157`*^9},
 CellLabel->
  "Out[635]=",ExpressionUUID->"ba449320-55e2-4c82-9faf-51233cad5a65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"error", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"analytical", "-", "FMCF"}], ")"}], " ", "/", " ", 
    "analytical"}], " ", "*", " ", "100"}]}]], "Input",
 CellChangeTimes->{{3.896371815424324*^9, 3.896371834379306*^9}, {
  3.8967898068933992`*^9, 3.896789816463475*^9}},
 CellLabel->
  "In[636]:=",ExpressionUUID->"093d740f-5a24-4194-9c98-1b299b982b9b"],

Cell[BoxData["9.159174913392965`"], "Output",
 CellChangeTimes->{3.896875333687046*^9, 3.896880478871594*^9, 
  3.896882134691296*^9, 3.8968840167519293`*^9, 3.896886202147326*^9, 
  3.896886857333581*^9},
 CellLabel->
  "Out[636]=",ExpressionUUID->"2e9e3a60-a4aa-48aa-92e4-3a01d0ebaca0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Precision", "[", "diffarray", "]"}]], "Input",
 CellChangeTimes->{{3.896358546078804*^9, 3.8963585538933077`*^9}},
 CellLabel->
  "In[637]:=",ExpressionUUID->"8453f7a9-315d-4352-b786-792c40ab2130"],

Cell[BoxData["MachinePrecision"], "Output",
 CellChangeTimes->{3.896875333825273*^9, 3.89688047892188*^9, 
  3.896882135139699*^9, 3.8968840170390377`*^9, 3.896886202201818*^9, 
  3.896886857435829*^9},
 CellLabel->
  "Out[637]=",ExpressionUUID->"9837cbcc-7930-4580-963d-a2f5b483cc7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Precision", "[", "inboxes", "]"}]], "Input",
 CellChangeTimes->{{3.896358556743539*^9, 3.896358566371264*^9}, {
  3.896358735853765*^9, 3.896358738925202*^9}},
 CellLabel->
  "In[638]:=",ExpressionUUID->"6c2e10e0-a21c-4f0c-9a31-da4f3b804118"],

Cell[BoxData["MachinePrecision"], "Output",
 CellChangeTimes->{3.896875334470211*^9, 3.8968804789506407`*^9, 
  3.8968821354393797`*^9, 3.896884017254191*^9, 3.896886202308433*^9, 
  3.896886857719235*^9},
 CellLabel->
  "Out[638]=",ExpressionUUID->"f6ab0427-3d59-4e28-9604-5c8fc772e286"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1332, 766},
WindowMargins->{{29, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.2 for Mac OS X x86 (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"138057f3-0bed-45fb-9f3a-1affce05f7df"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 383, 8, 52, "Input",ExpressionUUID->"5cb2e6f8-0bef-42eb-aed1-0958555aff08"],
Cell[966, 32, 373, 5, 34, "Output",ExpressionUUID->"15a786d5-c067-4963-a20a-475caccc2003"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1376, 42, 291, 4, 98, "Title",ExpressionUUID->"182e4daf-f8e0-4ea7-b4fc-e4286a087ed3"],
Cell[1670, 48, 791, 22, 58, "Text",ExpressionUUID->"2efdddf3-3d5e-4867-b561-434f57f2a2eb"],
Cell[2464, 72, 363, 7, 35, "Text",ExpressionUUID->"a01f8cd4-2c22-4b21-bf42-36c6be61d6f0"],
Cell[CellGroupData[{
Cell[2852, 83, 161, 3, 67, "Section",ExpressionUUID->"b54b99db-dbe2-4a59-82a8-75f2a4bddb4a"],
Cell[3016, 88, 306, 7, 35, "Text",ExpressionUUID->"e5fbb593-1277-4955-9272-ec016bd89a17"],
Cell[3325, 97, 2827, 47, 115, "Input",ExpressionUUID->"7fbe2868-dd88-4902-a0bf-51594abd96b9"],
Cell[6155, 146, 3362, 102, 252, "Input",ExpressionUUID->"39d037e1-56a7-4255-9e5a-8655d5e22f35"],
Cell[CellGroupData[{
Cell[9542, 252, 1602, 41, 73, "Input",ExpressionUUID->"d5757a24-c2cb-474e-936a-e83d028cf1aa"],
Cell[11147, 295, 160501, 2615, 302, "Output",ExpressionUUID->"29562a53-43f8-4717-9d6b-7bdd767f50e6"],
Cell[171651, 2912, 160503, 2615, 302, "Output",ExpressionUUID->"9b0348c0-5fc9-4851-afaf-b4591731c834"]
}, Open  ]],
Cell[332169, 5530, 524, 11, 81, "Text",ExpressionUUID->"3b66b3cc-f36f-4e4f-9ae4-7e69ec7486ab"],
Cell[332696, 5543, 4533, 71, 52, "Input",ExpressionUUID->"a3e3bdaf-9933-4490-837c-b57073743a74"],
Cell[337232, 5616, 678, 13, 81, "Text",ExpressionUUID->"b0c46f15-0580-44c0-9d77-65b52ff38a0f"],
Cell[337913, 5631, 871, 20, 78, "Input",ExpressionUUID->"d2441d78-437b-44f9-a639-8490da281f0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338821, 5656, 217, 4, 67, "Section",ExpressionUUID->"ac0f21a7-3b56-4487-b3e4-fb1787eb39c9"],
Cell[339041, 5662, 865, 15, 150, "Text",ExpressionUUID->"783a6ca1-94c7-40a6-a774-eba66a4cda2e"],
Cell[339909, 5679, 3630, 97, 367, "Input",ExpressionUUID->"58583300-1c15-4916-a5ee-476e6cdf6903"],
Cell[CellGroupData[{
Cell[343564, 5780, 160, 3, 54, "Subsection",ExpressionUUID->"9aa27b33-54b4-497f-9871-83084ce692ba"],
Cell[CellGroupData[{
Cell[343749, 5787, 4434, 110, 346, "Input",ExpressionUUID->"c6f6b84f-a5f0-40b9-86d5-e444f8d4a070"],
Cell[348186, 5899, 352, 5, 34, "Output",ExpressionUUID->"c0933dd3-2b6c-48d3-9213-1dc38dd90742"]
}, Open  ]],
Cell[CellGroupData[{
Cell[348575, 5909, 4204, 108, 346, "Input",ExpressionUUID->"d5bec322-266c-4f44-941b-7f54afccf2cc"],
Cell[352782, 6019, 371, 6, 34, "Output",ExpressionUUID->"bf60d77c-7778-4aed-a36f-02d826f79a53"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[353202, 6031, 158, 3, 54, "Subsection",ExpressionUUID->"68508581-1c4b-4645-a6ca-915b753d99e0"],
Cell[CellGroupData[{
Cell[353385, 6038, 4205, 106, 346, "Input",ExpressionUUID->"054b6f9e-0bc0-4c9b-b296-482425fdba4e"],
Cell[357593, 6146, 360, 5, 34, "Output",ExpressionUUID->"bcbd1640-ed89-406b-8b9b-841f43b1d177"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357990, 6156, 4362, 111, 346, "Input",ExpressionUUID->"c69848a4-340c-4648-bb5b-ba609b636b5f"],
Cell[362355, 6269, 368, 6, 34, "Output",ExpressionUUID->"4cb167e3-e102-4cdd-8cb5-1403c9ec599a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[362772, 6281, 157, 3, 54, "Subsection",ExpressionUUID->"52aab64f-0ef2-4010-a447-71db4f2b6f6e"],
Cell[CellGroupData[{
Cell[362954, 6288, 4319, 107, 325, "Input",ExpressionUUID->"0cc9036c-80e8-4092-952a-2cbd0e873dd9"],
Cell[367276, 6397, 358, 5, 34, "Output",ExpressionUUID->"e51394be-ba15-45eb-930f-0daf57e1bf1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367671, 6407, 4191, 105, 304, "Input",ExpressionUUID->"8ce54ada-1e86-4cf5-a9c5-a24f8c24e900"],
Cell[371865, 6514, 373, 6, 34, "Output",ExpressionUUID->"e2f31451-633c-4c82-9e7c-e6c0c7c41661"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[372287, 6526, 158, 3, 54, "Subsection",ExpressionUUID->"ed6f7e39-d8e6-4dc2-ab44-a5c0d35c103e"],
Cell[CellGroupData[{
Cell[372470, 6533, 4021, 103, 325, "Input",ExpressionUUID->"8fd13dc6-1716-4351-a4af-0f547453c56c"],
Cell[376494, 6638, 358, 5, 34, "Output",ExpressionUUID->"9be5af9f-83b1-43ed-a4d3-53bb69ed1443"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376889, 6648, 4169, 106, 325, "Input",ExpressionUUID->"ec7380cc-1196-4a8d-81e1-6238d2fe213f"],
Cell[381061, 6756, 371, 6, 34, "Output",ExpressionUUID->"79fb88c7-9360-4705-a1f0-444f973d8f51"]
}, Open  ]],
Cell[381447, 6765, 232, 4, 35, "Text",ExpressionUUID->"8f42aa0b-b374-4c53-a36b-5a653918fc37"],
Cell[381682, 6771, 1350, 35, 53, "Input",ExpressionUUID->"5b6ba242-55bb-4ffa-9df5-905e861cc8de"],
Cell[383035, 6808, 1350, 35, 83, "Input",ExpressionUUID->"4954648c-a879-4b1f-9412-5109c9f157fd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[384434, 6849, 173, 3, 67, "Section",ExpressionUUID->"e0e7ab5e-f3e0-4e15-9183-e8021e4a0211"],
Cell[384610, 6854, 224, 5, 35, "Text",ExpressionUUID->"2f742f89-be73-464c-a349-b2cc1cd10dd6"],
Cell[CellGroupData[{
Cell[384859, 6863, 2488, 57, 94, "Input",ExpressionUUID->"2a77889e-11d8-4f31-ad8c-cda205d849c8"],
Cell[387350, 6922, 1197, 20, 64, "Message",ExpressionUUID->"07eaef94-212a-4812-a193-500ab0964df6"],
Cell[388550, 6944, 1199, 20, 64, "Message",ExpressionUUID->"34f2177c-d985-4722-8bbe-412aa7b6937f"]
}, Open  ]],
Cell[389764, 6967, 656, 17, 73, "Input",ExpressionUUID->"40d26771-ecfd-4e8a-8c13-34e3394b48a3"],
Cell[390423, 6986, 841, 13, 81, "Text",ExpressionUUID->"5056ba11-e6fe-48f6-a451-1bf0171bb80b"],
Cell[CellGroupData[{
Cell[391289, 7003, 1188, 28, 73, "Input",ExpressionUUID->"fa56e065-e7e0-40b2-a355-8f239c849f9f"],
Cell[392480, 7033, 341, 5, 34, "Output",ExpressionUUID->"79755acb-713f-4bd6-a08b-1d4ed6c8dc9c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392858, 7043, 24391, 564, 808, "Input",ExpressionUUID->"635f47ee-8d43-4eff-9889-9452aa61e4ae"],
Cell[417252, 7609, 649, 13, 28, "Message",ExpressionUUID->"3c247c5f-0232-4535-af96-e320fce454af"],
Cell[417904, 7624, 1200, 20, 64, "Message",ExpressionUUID->"a68e60b9-bd6a-4989-874c-d1a2c05a07b8"],
Cell[419107, 7646, 647, 13, 28, "Message",ExpressionUUID->"d139749a-6d8a-4fa4-904d-40de2797a55b"],
Cell[419757, 7661, 1199, 20, 64, "Message",ExpressionUUID->"393a30ae-0c1f-4f6f-a5ca-67e47a2d33c7"],
Cell[420959, 7683, 647, 13, 28, "Message",ExpressionUUID->"1004cabc-cf2a-4e9c-9e8d-141ba182d067"],
Cell[421609, 7698, 620, 12, 28, "Message",ExpressionUUID->"04393291-82fc-4656-92d7-86e2993c0e76"],
Cell[422232, 7712, 1200, 20, 64, "Message",ExpressionUUID->"37c638c8-a7ce-4072-a493-b35de1f79463"],
Cell[423435, 7734, 619, 12, 28, "Message",ExpressionUUID->"b5c2efc3-a7da-490b-905d-56829eea98db"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[424103, 7752, 230, 4, 67, "Section",ExpressionUUID->"bb089568-7b61-4276-81e4-e61d8f801e86"],
Cell[424336, 7758, 987, 16, 58, "Text",ExpressionUUID->"36f564ba-b0f9-4d4a-a7fe-36b1913f2f6d"],
Cell[CellGroupData[{
Cell[425348, 7778, 633, 13, 52, "Input",ExpressionUUID->"63ddfda6-a19b-4ba6-a873-7f3274221625"],
Cell[425984, 7793, 384, 7, 34, "Output",ExpressionUUID->"deda8e47-ae88-492b-8270-112a0c254967"]
}, Open  ]],
Cell[426383, 7803, 6100, 131, 325, "Input",ExpressionUUID->"75f50500-5987-4ce1-b94f-f1b12fc2d3b7"],
Cell[432486, 7936, 299, 7, 58, "Text",ExpressionUUID->"93c04e31-c304-4b59-b474-1a05c709133d"],
Cell[432788, 7945, 372, 10, 52, "Input",ExpressionUUID->"c81fda12-65f1-4247-a27e-683000f3788f"],
Cell[433163, 7957, 452, 9, 58, "Text",ExpressionUUID->"230b3234-e4e3-4739-9f60-f916e214d461"],
Cell[CellGroupData[{
Cell[433640, 7970, 203, 4, 30, "Input",ExpressionUUID->"8a5b18f8-423d-4292-b5f6-ed2920e3cb6e"],
Cell[433846, 7976, 314, 5, 34, "Output",ExpressionUUID->"f9db410f-a17e-433f-8bef-736f1be07910"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[434209, 7987, 225, 4, 67, "Section",ExpressionUUID->"dff856d7-2e11-4775-bfb3-c48611676489"],
Cell[434437, 7993, 656, 12, 30, "Input",ExpressionUUID->"e4dba550-6cb8-4fbb-9025-d3b6c0e09dfa"],
Cell[435096, 8007, 6240, 146, 472, "Input",ExpressionUUID->"025a0413-7e6d-4fe5-aa24-67b8f2e86375"],
Cell[CellGroupData[{
Cell[441361, 8157, 216, 4, 30, "Input",ExpressionUUID->"ed3d084b-4a9d-4e63-9ef2-5ed99907a94b"],
Cell[441580, 8163, 370, 7, 34, "Output",ExpressionUUID->"2a490474-ff17-426b-ab57-facdaa29910e"]
}, Open  ]],
Cell[441965, 8173, 1553, 39, 157, "Input",ExpressionUUID->"e4177d24-60bd-47b7-a910-c07bb28cf687"],
Cell[443521, 8214, 1924, 50, 136, "Input",ExpressionUUID->"f8f99767-d7e9-4263-a0a8-6fc78c7f8c8d"],
Cell[CellGroupData[{
Cell[445470, 8268, 149, 3, 30, "Input",ExpressionUUID->"78c34b62-3a8d-486e-98ba-b18f69517ec8"],
Cell[445622, 8273, 368, 7, 34, "Output",ExpressionUUID->"1bc8e66c-7d04-48fe-bf9e-a991541097f4"]
}, Open  ]],
Cell[446005, 8283, 913, 22, 94, "Input",ExpressionUUID->"98b7f662-b3ff-42b3-afeb-14c332e09264"],
Cell[CellGroupData[{
Cell[446943, 8309, 1050, 20, 52, "Input",ExpressionUUID->"a52e930f-b623-48e1-8e73-79fc80aab877"],
Cell[447996, 8331, 289, 5, 34, "Output",ExpressionUUID->"930011ff-0263-41d2-a601-f4e2e1f9e1b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[448322, 8341, 343, 7, 30, "Input",ExpressionUUID->"49bb1f05-5809-4849-81f0-09fa549277f6"],
Cell[448668, 8350, 295, 5, 34, "Output",ExpressionUUID->"0a1c2b6f-f2cf-4e80-8d91-b8427005f248"]
}, Open  ]],
Cell[CellGroupData[{
Cell[449000, 8360, 669, 19, 30, "Input",ExpressionUUID->"6e3ebabc-f2c7-4794-b1ff-b67e2f88c31f"],
Cell[449672, 8381, 280, 5, 34, "Output",ExpressionUUID->"ba449320-55e2-4c82-9faf-51233cad5a65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[449989, 8391, 399, 10, 30, "Input",ExpressionUUID->"093d740f-5a24-4194-9c98-1b299b982b9b"],
Cell[450391, 8403, 288, 5, 34, "Output",ExpressionUUID->"2e9e3a60-a4aa-48aa-92e4-3a01d0ebaca0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[450716, 8413, 221, 4, 30, "Input",ExpressionUUID->"8453f7a9-315d-4352-b786-792c40ab2130"],
Cell[450940, 8419, 285, 5, 34, "Output",ExpressionUUID->"9837cbcc-7930-4580-963d-a2f5b483cc7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451262, 8429, 266, 5, 30, "Input",ExpressionUUID->"6c2e10e0-a21c-4f0c-9a31-da4f3b804118"],
Cell[451531, 8436, 288, 5, 82, "Output",ExpressionUUID->"f6ab0427-3d59-4e28-9604-5c8fc772e286"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

