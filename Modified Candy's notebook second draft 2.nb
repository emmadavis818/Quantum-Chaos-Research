(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    268744,       4959]
NotebookOptionsPosition[    262016,       4845]
NotebookOutlinePosition[    262442,       4862]
CellTagsIndexPosition[    262399,       4859]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Numerical Calculation: FindMininumCostFlow", "Title",
 CellChangeTimes->{{3.718713698564654*^9, 3.7187137052744064`*^9}, {
  3.7475729787223797`*^9, 
  3.7475730185404563`*^9}},ExpressionUUID->"db21e94a-4d5b-44de-85a4-\
2189ac2807bc"],

Cell[TextData[{
 "This notebook is designed to take two distributions of sand in a specified \
box, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "init"], "(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]],ExpressionUUID->
  "19f9cbb0-a700-4b59-9eaa-fea409db045b"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "final"], "(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]],ExpressionUUID->
  "32f43643-95fd-4deb-adb5-20113f5da990"],
 " and calculate the cost of moving the sand from the initial to the final \
distribution. Cost is defined as the amount of sand moved times the distance."
}], "Text",
 CellChangeTimes->{{3.7187137106772213`*^9, 
  3.7187138091258593`*^9}},ExpressionUUID->"b7678db6-d45f-455b-85ec-\
513458b119c0"],

Cell["\<\
The FindMinimumCostFlow function will output the minimum total cost of \
flowing moving from supply to demand. \
\>", "Text",
 CellChangeTimes->{{3.718837968909587*^9, 3.71883798673643*^9}, {
  3.7188381917295427`*^9, 3.7188382769472013`*^9}, {3.7475730726166506`*^9, 
  3.7475731381142893`*^9}},ExpressionUUID->"41db1386-6c3a-4e02-80a7-\
437487129e45"],

Cell[CellGroupData[{

Cell["Enter Parameters", "Section",
 CellChangeTimes->{{3.718713659939337*^9, 
  3.718713668392317*^9}},ExpressionUUID->"6b7c1d83-4d3a-49ff-8eba-\
e2fc473f6487"],

Cell["\<\
Define the initial and final sand configurations. (These will be \
automatically normalized below.)\
\>", "Text",
 CellChangeTimes->{{3.7187134100605803`*^9, 3.7187134589721775`*^9}, {
  3.7187138265382032`*^9, 
  3.7187138348340445`*^9}},ExpressionUUID->"20bc7c2e-b83f-4d5b-8aa9-\
ecd013b816cc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x1", "=", "0"}], ";", 
  RowBox[{"y1", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", "0"}], ";", 
  RowBox[{"y2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", "0.5"}], ";", " ", 
  RowBox[{"p", "=", "0.25"}], ";", " ", 
  RowBox[{"\[Theta]", "=", 
   FractionBox["\[Pi]", "4"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.732030528018759*^9, 3.7320305301988163`*^9}, {
   3.733793701148775*^9, 3.733793752075521*^9}, {3.73379453747824*^9, 
   3.733794545885833*^9}, {3.7337945876704054`*^9, 3.7337946009734435`*^9}, 
   3.7489099147051525`*^9, 3.748909982229043*^9, 3.7489102241472054`*^9, 
   3.748912084949465*^9, {3.748914401723262*^9, 3.7489144045763044`*^9}, {
   3.7489147918774853`*^9, 3.7489147965147*^9}, {3.873990337461932*^9, 
   3.873990355564694*^9}, {3.873990878511148*^9, 3.873990914210498*^9}, {
   3.87555583102358*^9, 3.875555843913355*^9}, {3.875609105293663*^9, 
   3.875609107493991*^9}, {3.875609145886279*^9, 3.875609148480603*^9}, {
   3.875609202745201*^9, 3.875609216215477*^9}, {3.875609399538727*^9, 
   3.8756094011066103`*^9}, {3.875610311101206*^9, 3.875610321206208*^9}, {
   3.8756308759891157`*^9, 3.8756309051654797`*^9}, {3.875630979382516*^9, 
   3.875630981106518*^9}, {3.8757936773518553`*^9, 3.875793677490267*^9}, {
   3.875793740357883*^9, 3.875793760326046*^9}, {3.875793978051387*^9, 
   3.875793980718894*^9}, {3.876605412007324*^9, 3.876605412443317*^9}, {
   3.876923519352556*^9, 3.876923523288248*^9}, {3.87692415815628*^9, 
   3.8769241583366117`*^9}, {3.878056063426066*^9, 3.8780560666719027`*^9}, {
   3.878736272280702*^9, 3.8787362872397423`*^9}},
 FontWeight->"Plain",
 CellLabel->
  "In[148]:=",ExpressionUUID->"b6d1e559-02c0-4274-956a-6b1a937d77b2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa", "=", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], ")"}], "2"], 
      SuperscriptBox["p", "2"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["p", "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "2"]}], 
      SuperscriptBox["\[Rho]", "2"]]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bb", "=", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox["p", "2"]], "-", 
      FractionBox[
       SuperscriptBox["p", "2"], 
       SuperscriptBox["\[Rho]", "2"]]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc", "=", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "2"], 
      SuperscriptBox["p", "2"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["p", "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], ")"}], "2"]}], 
      SuperscriptBox["\[Rho]", "2"]]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"finit", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], "=", 
   RowBox[{
    FractionBox["1", "\[Pi]"], 
    SuperscriptBox["E", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", "x", ")"}], "2"]}], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", "y", ")"}], "2"], 
       SuperscriptBox["\[Rho]", "2"]]}]]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ffinal", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", 
    RowBox[{
     FractionBox["1", "\[Pi]"], 
     SuperscriptBox["E", 
      RowBox[{
       FractionBox[
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "x2"}], ")"}], "2"]}], 
        SuperscriptBox["p", "2"]], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["p", "2"], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"y", "-", "y2"}], ")"}], "2"]}], 
        SuperscriptBox["\[Rho]", "2"]], " "}]]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ffinal", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   FractionBox["1", "\[Pi]"], 
   SuperscriptBox["E", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"aa", "*", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "x2"}], ")"}], "2"]}], "+", 
       RowBox[{"bb", "*", 
        RowBox[{"(", 
         RowBox[{"x", "-", "x2"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{"y", "-", "y2"}], ")"}]}], "+", 
       RowBox[{"cc", "*", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"y", "-", "y2"}], ")"}], "2"]}]}], ")"}]}]]}]}]}], "Input",
 CellChangeTimes->{{3.875609362452834*^9, 3.875609362464476*^9}, {
  3.875630944243865*^9, 3.8756309683511887`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"1f2696b0-e746-46e3-b02b-7f37f5ad28ef"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"4.`34.69897000433602", " ", 
     SuperscriptBox["y", "2"]}]}]], "\[Pi]"]], "Output",
 CellChangeTimes->{
  3.875609406933152*^9, 3.875609922946134*^9, 3.875610008609488*^9, 
   3.875610049278322*^9, 3.875610324114811*^9, {3.875630886687756*^9, 
   3.875630909451852*^9}, {3.875630972212187*^9, 3.875630983788144*^9}, {
   3.875793687502449*^9, 3.875793762847867*^9}, 3.875793809432104*^9, {
   3.875793880052947*^9, 3.875793950673831*^9}, {3.875793983274036*^9, 
   3.875794009408383*^9}, 3.875794095504784*^9, 3.875794160894525*^9, {
   3.876262291122809*^9, 3.8762624658306313`*^9}, 3.876303015676037*^9, {
   3.876303046255165*^9, 3.876303060581039*^9}, 3.876303166545682*^9, {
   3.876303296307084*^9, 3.876303348149238*^9}, 3.8763044881038847`*^9, {
   3.876585409633469*^9, 3.876585434130595*^9}, 3.876605200053411*^9, 
   3.876605343580845*^9, 3.876605432412238*^9, {3.876605611648827*^9, 
   3.876605636776754*^9}, 3.876605824432742*^9, 3.8766061874843607`*^9, 
   3.8787362971141987`*^9, 3.878736353183859*^9, 3.87874038294977*^9, 
   3.87874077342028*^9, {3.8848056572055683`*^9, 3.884805699289071*^9}, 
   3.8848057472267227`*^9, 3.88480579480256*^9, 3.895320301577512*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"8488d0b6-dbed-4fb7-a469-f91c18ab4a94"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "8.125`34.692339425437005"}], " ", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"15.75`34.67876661824773", " ", "x", " ", "y"}], "-", 
    RowBox[{"8.125`34.692339425437005", " ", 
     SuperscriptBox["y", "2"]}]}]], "\[Pi]"]], "Output",
 CellChangeTimes->{
  3.875609406933152*^9, 3.875609922946134*^9, 3.875610008609488*^9, 
   3.875610049278322*^9, 3.875610324114811*^9, {3.875630886687756*^9, 
   3.875630909451852*^9}, {3.875630972212187*^9, 3.875630983788144*^9}, {
   3.875793687502449*^9, 3.875793762847867*^9}, 3.875793809432104*^9, {
   3.875793880052947*^9, 3.875793950673831*^9}, {3.875793983274036*^9, 
   3.875794009408383*^9}, 3.875794095504784*^9, 3.875794160894525*^9, {
   3.876262291122809*^9, 3.8762624658306313`*^9}, 3.876303015676037*^9, {
   3.876303046255165*^9, 3.876303060581039*^9}, 3.876303166545682*^9, {
   3.876303296307084*^9, 3.876303348149238*^9}, 3.8763044881038847`*^9, {
   3.876585409633469*^9, 3.876585434130595*^9}, 3.876605200053411*^9, 
   3.876605343580845*^9, 3.876605432412238*^9, {3.876605611648827*^9, 
   3.876605636776754*^9}, 3.876605824432742*^9, 3.8766061874843607`*^9, 
   3.8787362971141987`*^9, 3.878736353183859*^9, 3.87874038294977*^9, 
   3.87874077342028*^9, {3.8848056572055683`*^9, 3.884805699289071*^9}, 
   3.8848057472267227`*^9, 3.88480579480256*^9, 3.895320301581519*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"20a3e2f5-5707-4a15-a6d5-455cc26d56ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ffinal", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"finit", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.873990292424479*^9, 3.8739903286377487`*^9}, 
   3.8739904466766567`*^9, {3.874159135512912*^9, 3.874159135817031*^9}, {
   3.875555862705727*^9, 3.875555892757313*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"aa317fa4-c1f8-449a-a609-2ea7db5867da"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"1352.7380339200533`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 156, 11, 
   29588862054409120966, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.878736297423736*^9, 3.8787363534302893`*^9, 3.8787403834885683`*^9, 
   3.878740773678212*^9, {3.884805682582389*^9, 3.884805699334062*^9}, 
   3.884805747268485*^9, 3.884805794841113*^9, 3.8953203017807693`*^9},
 CellLabel->
  "During evaluation of \
In[156]:=",ExpressionUUID->"0a8ff157-e92c-43f6-a0b7-cddecaa10f27"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
frsDxOeoM/IBn5XxvBPj9pUh/kedkdcdAvkC6oxcpeefuDQP8hfSOALyF9QZ
+YQoyHdQZ+TDN0N+hDoj19F8CnVG3p7Lv/Iz/p3ma6gzcrf2kN+hvchru/P5
IPJl6yF/RJ2Rb6kI+SbqjHxQhjI/dWLcowfks6gz8nMdIP9FnZGrdf4Dl45B
Pk7eR0M+jjojr7MS8nfUGXnrDpDvo87Iux+G+gDqjHwxV0/Iz/j0cVB/QJ2R
/50D9Qq0F/n1anx9A3nQUqiHoM7In5eH+gnqjPzUbGW9xYnxNluhPoM6I0c7
UGc1R53/wLFuRrC+pKrXEaxHqep1BOtXqnodwXqXql5H+PoYq9cRrKep6nUE
629oL/I/1OsI1vdU9TqC9UBVvY7w9UNWryNYb1TV6yx0VnNVvY5x6D9NPCb3
d1tsH1mkgNOnQPq7ThOQF1jXZtLWVueQiwuBC1fXclxA7hIF/ZyqMMb7fkpp
aeQIx2/15mF8bb6/ak7bE+TVg2Prl9q3MATtR/49tv+r8NTn1dGeU/L8+Shu
2Dnla/j5p5HIMV/4vcEv2D5yLb3vP9l4U3IPNKmalGL+HVHe9knZ4AF1AqKw
H7Du5pGOD4vbtf6ykI0X+X3Kaf9MhxH5Dir6TxMOgZ3Ci11gp0ofohov4zhe
lT5ErZv6/mL/6jq2qr0059tq79G9b7HnHdof95TTgcXP7zaCnqr+Cfajul/M
nk/jX8Qn3HeT7hbVd/eMMdtDOUF+vemNj3GDCobgdfH+1lj38kbBv1cy/fH+
eiaGh7f3usj0x/u4+vis0/veD6b3/Y0wXuZnBO/fwbXIdHtsz+bzCgnas3om
5UdztlwvHtCBzX+8j++pPapxEbRfNS6mA/PP1M6e0359qptxhPZ/XbwOdoo3
6++pmpr/fyx/wfbJuWAPjgvbF+9VpUXDjaNYP+dlO5+KP0Y5NmzTtw1rj7x7
5BOh6Y/D2J71M3XRi4kuJa5jexF1+6sn9I/2oz5XVPZj+0TaD+qG86cxvV94
XWzfvoFyvNeFFLBTkEaD/fi7UM8ftBPtz/2pvL9v2O/3ZW5QwcRN9Zk92L7Y
g27nHfvEM4723PHxn33TJYXZg/04DTbu6PL7FJuH2E+lSsr2aWxcr2n/OB/w
dzc2/Or83E+7cJ6w3xFy/B2p54+qvdqvst9RphSdWbrEriC8L2j/nUFgP84H
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
/b8o/YOe8Zm+Sn+iZbx6c6X/0TC+gvNXmWzf1nrOv2Wy/Vl+r5T+UMP2Sf2K
U/pPLeM1E5X+Vs/41UClfzYw/qaT0p+7MH6hrdL/GxlvnqB8XhjZPqnlNZXP
FxfG91xWPo8M5v1cZZXPLz3jfQson3daxkvfUz4fNYxH1FQ+TzPZ/ix7nfL5
m8n2YWXMUj6vNWw/VNvVyue7lvFhDZTxgJ7xLwuV8YOB8a7dlfGGC+OTlinj
EyPj1ZKU8YyR7YfS91bGPy6M5xZXxksGxmfdUsZXesZDuXhMy7jtA2X8pmF8
CBfvZbJ9WBkrlfFhJttvpW+rjCc1bN/T9dbK+FPLuHtxZbyqZzy5ojK+NTAe
4aKMh10Yb1pDGT8bLfZboZ64P+j4cWV87sJ4tJcynjcwfui1Mv7XM/4Ply9o
Gf94QZlfaBhfNUKZj2Sy/VbFpyrzl0y2r8r9b2W+o2H7m4b3U+ZHWsYXxijz
KT3jbdOV+ZeB8cs9lfmaC+MdfinzO6PFvirUE/cBfd+gzB9dGF8SrMxDDYyf
5fJZPeOhOcq8WMv4MS6/1jC+47cyT89k+6relVHm+5ls/1T32cq6gYbtYzpw
V1l/0DK+84CyjqFn/Pt4ZT3EwLh+q7Ku4mKxTwr1/ANn68n3cnk6q/8QPt9n
dR7C1w1YPYfw9QdWtyHnuDoGq88Qvh7C6jBEXVdBfperz7C6CqnP1XlY/YQM
5+pFrE5CUrm6E6uHEL5+5WKxXh11k/8Za1k3G9Yl/86E+5b1sTcnbGLvBzlZ
1MFiPQvp895TqOtdtyfppJR3ThZ1rQYviwzIq0ur61dyXWWds/U61RjLehSs
f7esO7knFPPLszNCErj60r/y79FJ2rdm9qdLXjdYPljYz3VOnp11hhcMX9Ry
FatXjJlrJHl2GiYo549RKh75c6VnjL2FbvDDd7Co87zN0y3FwaLOcydPnwRH
izqPrKeT3qLOI+uZoLeo88h6ntNb1HnGyvbbW9R5+rT0WJWbay91UNV5WpXw
1uTZ+THpUkh/RZ1HuOcTm2fnYvtS3gXGzGO6yXqa7PxUPbuOss4m62myU11P
k+0x2amum/mOzBZi5hWy0LOErLPWos6TX/5XZ1HneSfrrLOo84DOhS3qPMdl
f1LkD3WeIhZ1HqhTFbKo84DOWqnXzgVcnaevrLNWurTD+Ll471JMT9BZJ/31
9Paxcoq6GZF1LizteM3XzSotryrNNdmprpsViw10z7NTXTeruf/j44T7lnWe
yrLO+S3qPC6yzgUs6jwF5H9tLOo8oLONRZ0HdC74hzqPrUWdB3TOJ6Xa8HUe
0Dm/dGNJcLlPz8x1nnGyzgWkT0k9enctXJ3pCToXkMp9e8fVzVrLOttY1M1q
yDoXtKibgc6WdbOdGf/lesZ8s6jzTO73TLyf8t2iztMh6+2YeZ4/Leo8/rL+
vyzqPLbyvzkWdZ57sp65FnWeuzLXSD9f8nWeibI+38SH9z70UtZ52so6fBev
ep3LsJvqzvSsIo/3p5hkn29+pqJulr9c6Nh6JjsDVHWzu5tqktzc36K6bva/
Kg01eXaq62ags8aibpZyetWYBymvLOo8Xa7tyY2Z99aizuPw8MyY/QkfLOo8
oPNHizqPn6zzJ4s6D/wQsizqPB1lfV6JGdtXdPWpvoHpZivr8FZsHzxxp7tb
V6bbLnm8H0RDIb4+VlnW86NFfQz0/GRRHwM9P1vUx7bL/X+xqI/FXk34lXg/
RVTXeR4Un5Az8P4ZUV3nObumZ+58z2uius5T6tDM3H73b4vqOk8/Wf8HIl/n
yRSWdUzWxJuum+/VtvHjdsQzfYbI/Izov8wrce/7buw54lBnkGau6brqOlis
3P62RR0sZcgxTV3TddV1MFu5n6cWdbDdzSaNzcl9ZlEHWwHcop7zOVrux6Ke
MxOua1HPCQU7Leo5L+R+rqnqOZlCdm7e3zPB9vKedfpPBqZPI3l+PhVO7Th5
q3LSBhaf1AGdBXW9K+ugfF8Edb1rBdxHQV3vmgX3XVDXu05ekeeJoK53rYN5
ZVG3uQzz0KJu862sPG8t6jblYJ5b1G2Ww+9CKG3L120+y/28FUZUOhm7ehar
2whXZT/2RRjerOilsPPH2fP0l6znZ4t6lzf8ri3qXc3BD1jUu74/kP2GRb2r
MfgZi3rXGvBLFvWuCPBjFvUZ0DNXUNdnLoGfFNT1GdDzl9BbVZ/xBD8sXOb8
sEZqAn5biOX8dqY4Evy84HBf6eczhevwXCAVVPUu0DnXot4FOv+2qHeVh+eU
Rb0LdP5pUe8aBc9Bi3rXBnhuWtS7KsBz1qI+AzoXtKjPNIfnuEV9pic89wn/
3NdKoyBOIHWnKOMErCfkJ65LlXFFprgR4hBS2Zavd0G+aWtR77oBcY5FvesV
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
k8zxA5w/UEQKe9al+8gR61j8AHl3Eal2ydLJm5/vZvGDB63jTb1me0L5XPOg
9m9q3Kxkg9fHWfwwm9o///DNprlJ3Vj8gPY7jdl5t1GjVLb+pw+1f/TDmvWj
Cn9kzzW0v/2otnei291jz7Voav/PRUKFQa0ms+fabmp/2oITGw4vtwlGneF3
lE8qY1++qDIeLivbn18K7VnMRhkPg/0FpBsjAt4uUMTDYH8BqffAut73tprj
YbDfRup/I3D468vmeBjsLygdF5r4DRM+sHgY9LeVOtu+j/a984t9n2gPreNt
m/eLi9P2UPvbrG+fmdSmCIuHPaj9by69zcy5/D8WD6P9mhN376ya4cTi4V/U
/j1Trja7Wj6MrdND+8Mmf5zucMibrW+8Q+2vcfL1pklVP7I4rTa1/7ptuE++
veY4Dc49+ibO67qihjK/6yX3/1188iwpo78iv6sp9/NTHD+//8VURX7nJo/r
lxj57sS0e0PN+d13WLcjJpSrPPvEPHN+d1O2M1dsWLFH7eQT/7H8DvTXSL+e
rHP6dOYlyzuiaR1vTZENXN4xjdp//mXs1U7TspnOcdT+wm//a7tlYTLL72pQ
+/vGxtyaUTiX6Wyk9ru1FWLP3/NlecdXan9Itdqv0prVZHnHdWr/nG6xpypU
Mucdt6n9o1bv811fx5x39JDteSW+bu8RrqxLuMrXfStODif7airqEpflfj6I
Z2p1aRSmqEvUpOeQOIQc734g1VyXKC3380m8uCji/eg0c13iG6xPE110nj8v
f4xjeXEnas/jYjb6Kz3Gs7zYQO25umPv1kVnK7L6wwVqT/328VE3XyxmeTGh
9qRp4jY03fid6Wak9nTWpbybcM+cF2dTe1o/rnXhsiIvvib3/0WcPuzm0HhF
XjxA/h2liAWz3e8q62AzZH5G7Ok7KU5ZB6si23NNTLT9seiEog62RG5/Wxx6
LX7FGEUdrJBs5wNx57rDR9Md2bogIZBeNyB+aYRr5BHzOlJ63VbeifP/Fzqc
6VOBXrf4xCK9ajQozuozC+h1P3b0XNbkkrk+o6HXvd4x/McgRX0mUO7nqViq
eKfZ0Yr6zBt4zys2fNuogbI+o5P/TRec3ii5i9QS+hFWG5T9GCR4kfZAeNtB
eV29dBPsFFpwdmqlnjAuYfcE5bgyBT297pRroctufFrP9GlHr9s+yvVhId+h
TJ869LpPOJ315B69bhp3XwykH72udyHlfXQhReSDs84ISyor77uRdIYDtYQi
X5XzxCg9gXkl/B6inFcudB17lhD7SDkPDZIvzFvBTquct3qpKcxzITO3h2Ke
a6XX8LsQBrZT/i40UiD8joT46UfeTdvpzeqB/8DvTnhyYunBey4TmZ7p1E6X
F/uPFdhai+mppXamapW/Xy2pTO3kf+960pza2ZrzDwbyntpZv7bSn7iQMGrn
tAil/zGSCdTOax2U/sooPQL/RjqvVPo3FykN/KHQvavSHxoksD9H8PRX+k89
1fmXMLa10t9qpWbgn4W3nZT+WSMNA38ulH6j9OeZIpwj9U3w5f2/RqR1tumq
euATav+3x9zzhaRT+49UUD6PtERH7Sfc80tPqlD7O3DPOwNpQe3/zT0fXchw
an/TdOXz1EiWU/t7dlM+f40SnGtnS/oVVD6vXSQ4H7EgSTmufL4bpEEQD5C1
E5XxgF6ykf+1Ic8mK+MHrQTnKRYg2uPKeEMjVYT4hIy9qIxPMsXDEM+Q6HVc
PKNpTOtsTVT1wMbU/gwbLl4iT6j9WVHK+EpL0H4HLh7T0/UqNqQ6F78ZyCJq
/wMu3nMhPtT+E1x8aCRHqP2vuHgS69tFSJ35yvjTRWoE8Sp5/68yXjVQf1KY
rBuhjG/1VH8dafxAGQ9rqf46Ej9aGT9rJLBfS+YdUsbbmSLoX4ikN+Lic80R
WmfTquqBR6j9FVy4+J80pvaPTFPmC1qC9meVVuYXejKY2v83l48YqP46MojL
X1xIMrW/X4gy3zFS/QuRY1x+ZJQWQD5Fejko8ykX6SHkX8S9ijL/ovVAJz2x
CVLma3qqvyNx/VeZ32mp/g7kvL0yH8R9NA5kTZIyf8wUQX97cmcwl29qKtI6
W5yqHoj2hzTh8lnyiNqf+UCZ/9J6oMl+9w/KfFlP0P73nZT5tYHq70Dac/m4
C7Gl9r/g8ncj1d+exHL5Pq0HrnMmOd3LN3censXqVPOhbkB6HVTWDQyg/zsn
kjFCWWfQS95QlyDzBWVdQiv1hzoGWddeWcfA+nZR8uGlsu6RKcr7H8cWJa0O
cnUS+h6hKClqrR6Yt+7xJleHIQuo/QdqKes2WoL2D+HqPHqC9j//R1kXMpAB
1P6aXB0J69tFSV2u7pQpZtK46zsf52g20ve2I+k59tj+F12P90DVfg99v9aQ
a0/X3a1zlmrGKe+XkdSlXFJxqqf0qK6ybpYp3qTx8ykufsgUB9I4P5mL8zPZ
+avJ3PtHrCumRtzk3/NqzlL79fx4hT40TtjH5xGaffT5u3C08vnL9nGT7lzd
z0gKUN6yLs+pDsRNpQPeT9U6MYlyia/TajT4ftPI2a/R4DmWG+h5ocjxXMrp
Kg5/0pFR9DsRSBbRfg5bbf8kQt1+B+1/ldX2qRFj+fbUnz8VB3NxdSY7F3TN
xADicXI3481pPnJ3q/14+5vm86DWQf4iRHH5SyY7F3SWqh/IX1IEHy4PMt13
Gp+n8v1LYdTOfpydGukUzZtC+euyc0Q38dcVb9L8qwJ/XdGHjitbdd0sOq5y
XP9YN3sqtOF1Y+eOLlBdN5DmEWVU161Jx/uCvy69j9li1mg+znxEf49t+Xhe
c5j+7qJU8xB/j/VVvy+IH9LF8bUPHdw+dYWZ0/zx1LKm9T02bmb3F/abZ4k/
dl3xWDGwuIDf55Wx4vwE/G6gmuN3e9Ucv9uLvJzxwZVeTcMK4Xd7kWe9jfxx
vmKaAb/bi1x7rOu4tk1WueN3PJE7H9rvvtB+sI9G+Wfi/YNq9VyW1YF9Hxl5
SqHY7IUrO7DvqiPvF2NssLXnoAj8bi9yl/z5nq0/vwK/O8z4X9pZv1t8eRKF
3+1FrvcNCpyr/xmJ3+1Fnuk66WtA2LxwTk+Ng3U9FZzT08Sf0vMWOD1NPGLL
x1fvorMdOT1NvEN5d5/ONkONnJ4mfl4+b0FXntPTxJvMiTl5efHeqpyeJq5t
t/x5w7ihQZyeJh56+2hE2JuG4ZyeJl6tYrFpC/uGRnF6mvjat5u3ZDhHCpye
Jn69iVeUY7OTvJ4mPueq64+ZpUrxepq4cca8tITsKey7tMibHm/+cMNL+0Be
Z90fdDZzXmeddMC/xPyE37sL8zrrJJGew8DrrJN+/W9gZIX69crxOuuklqEL
taO67PXlddZJl3rX848Wgtj3ppFXedP/+6pFV0J5nXWSzYuNTadWGR3J62y6
buetXvOn1BB4nXWS9r+ETcW6VVfprJPGl0p1i18ZrdJZJ3nG1u89+u2QcF5n
nbTlRNmYSm0OBfE666TLPpt/b59bzI/X2Ua6krLrXPHw4gV5nW3+oLONdN/t
UPO3FUs48zrbSLeXzLGtEFe1DK+zjfSEns/A62wjuaRc27Xp+Ep/XmcbaaR8
PsPXYF5nG8ljft4+x7gIXmcbafKjG4krC7+L4nW2kX4ZG2wscHiKSmcbyWdr
l2uv3hVT6Wwj/XhaON6noW0kr7ONlO+CRwOPMfahvM420vOCYZXmdakYwOts
Iw071GDhuN4dKvE654jl12TU2Of6zJ7XOUfMP6v787IWOueIveVzGw678jrn
iG7XzwibgzZ78TrniIfqPdZW7b69Cq9zjriJntvA65wj9kv2K/eq0TfMmzTI
+78tlV7AnUTxOueIGzYJ+/6+t1Tgdc4Re02oXnls5kyVzjliix7axSMeCLwf
NvEle1svruRlG87rnCNqf2gcytmmV+d1NvV/JLNj9sw7VXidc8Sai+0n3imY
5sXrnCX+7ij+fvvzXTFe5yxxrabhZk9tSy2vc5Y4Nr3bqon+yz14nbPE6BGf
BzmN7lqJ1zlL9JqSt487KoDXOUs0BTp1N7bwC+V1zhIP5xui2CeOf1ni3u3J
pzQbWgq8zlliml2VVUuzd6p0zhI3tKiqHVijjErnLHECaVO4+M0NEbzOWeKW
zIPtnu2MDuF1zhKHRL+Ynn3lhz+vc5b4aHPPNu9mna7I65wlGpuneVyfsaEM
r3O6OGZwtyoVPKqV5nVOFwtdXveq3oHjel7ndPFCgk7b0+NAeV7ndDFk4loS
kt7Sj9c5XRwkn/9QKJjXOV2U3gwtWTbyWjivc7q4fcv1cmPrOrM6FfIhQw4f
39VtlUrndLHNnZIGv3/WqHROFwO7hddb2CEzktc5Xaxku9imUuumYbzOJvtX
6351DDkdyOucLi4YNuj5o3fNKvM6p4tPQhfcttv3uRyvc7pYqlJkt7JVtrnw
Oms0oUF57Z+5q/QXagZx/bD2aV55/SxTzf90IdML+ufvi0Zz5kaenTV8VPdL
iBkM9vP3S6MZd21OcmzIPn/VfRQ2Lgcd+Puo0cy5MXd1YdeGwar7K8yzUeqZ
n7XfsfRGs/KR+SJU911o0hXuC3/fNZrNFct3LNPvieq+azSJNJ/i77tGo3WD
9vx912iEItvDypmvi/dFePIW5hs/HzSa3FUfQ8Wk4GDVPBGkDOW8dWLt3z0q
tzI0faKfav4Ic5Jg/vPzR6P5q+rTZb08Msqr5pVQYTD8jvh5pdE8FWZ2qujR
tbRqvglTErnfKWvfpdwHp/oHPupV81D4dg1+vyq/KtRYz/kHxn81Av+g8qtC
txrgZ1R+Vej+HvySyq8Km6KUfoz5VeFGc/B7Kr8qFLRX+knmPwVjAfC3Kv8p
OISDf1b5T2HUDKU/dzK3Hw3+X+U/he5v4Hmh8p9CZhz33GG8U0F47qjiAWHR
Qe65xvi9BfBcU8UDwpqv8HxUxQNCmz3wPFXFA8K47srnL4sHhIIT4XmtigeE
Q/T5ruH+coRK76zGA8LYJRA/qOIBwYee16GKBwTXJsr4hMUDQrW7EM+o4gFh
W1uIf1TxgHBiAxdHMY5xlCq+JdsLcHEa49VSIE5TxbckPhXiPVV8Sw48gfhQ
Fd+Sxlw8yeJbElYa4k9VfEsyH0O8yutsQ7z+tRrfkvqrIR5Wxbfk4UGIn1Xx
LXm2UBlvs/iWTF4F8bkqviWfvSCeV8W3JJ/I5QWMo8WqfI1clri8g/FF5SHv
UOVrZEMnyF9U+RppQfMdVb5GntxV5kcsXyN+sZBPqfI1Mvol5F+8zjqS773V
fI38Ew/5nSpfI/pIyAdV+RrJ2qPMH1m+RqrR8z1U+RrpGgT5qSpfY3qq8rU/
6OxAlk/n8mjG7xyDPFpVfyC2NB9X1R/IiqaQv6vqD8SZy/dZ/YHU94H6gKr+
QGLvQj2B19nUvoPV+gO5Og/qFar6A5kaA/UNVf2BhFZS1kNY/YHs3wH1E1X9
gdSj536o6g9/0NnMVXUz0qgU1H9U9TEyj9aLVPUxcoPWl1T1MZLN1aNYfYy4
NoD6lao+RqoXgXoXJ6eJPw2zWh8ji49CPU1VHyNFjkP9TVUfIws+Ket1rD5G
1pWF+p6qPqbWx4Jzeip4rUVdX6QklMDxSsinVDl9MeG+ua5YltYVk6c3iYvB
79OY+GdaV/Q4ZAjYn1CAcR2tK7aUz8nKYnVFA60rBg7+eM435gTjWFc8NP32
4rme+dBOSaoL+lfrWPRSuZjCjPdKXnQ97361lM+hKMp48YG/cooefxKlH3uy
pGeMuX5os+lTwXweI6MuZsQGJNx3ZbzezNu7izn+jExqltMwJYHpI3VI8t7n
tW9YCKwzpvpoHKTHtE4IujkzHk7rhA4dpy2+n2LPeEdaJwTdbBhPpXXCGkMq
xvW7n83qhE1pnbBh9JWc8uw7aA6SjtYJD8v6oN9xkDw8o1bsKxopLN4+5cVc
dq6xg3SvxFD/pg0nRsE5ocUYX97704CrXiejisr6uDJ+YP66D3n+B/RxY3zY
NPBjOXS9NXBzvW6SPE8cGM+h9TrQoSDjWK+rWmLlxXme3y3rddfWJx9MuM84
1useRb+5WG8erm/XScfeX9p9qGhlYYk83mKMTy54K7aP6XkE53WWZLx7cXh+
wXjdGN9G628/5XE5UjttpGe0DgbjsmUc62BGeZ7/ZHWw4bQO1q5K1GIv9p1E
G+n6DIgTwH5ch28jrff53jcvPgH7SzL+6zzEM2B/acYzaP0K7MTzbXPELbRe
VFjW+TerFzWl9aJAeV69YNzwftOzvPjwsWwPrv8313PAntKM96H1HFinmMvq
JD/ouZfQD77vM9cl3GU/Y5n/dpf9UgnGMW+F87zM+ekmmp/elfu3Y3wuzUO7
yP0UYNzWOVjON2/K7bOwziD06Lhs6vnoNUJgif8FlEM/Y+Jb8jXR3mi/X4D1
T7j/Il04Ss9H+vtaWMA89D8mPlI+d3FhxCfZDxdmfNkjyDcDw+42ZP7HxI/Q
vDJTbm/OBzF/hPNqXRnHPLGXPC5zfof5YBlZT9TNlNfQfK2b3N6Z8R40X4Pz
/uwZb1oS8jXQ04bx966ah/1N+dpJ+feezfK1uBeef2fd2io0k3W7zviSClKp
gn/PFuA8X9yfYrKHnq8IuukYt6N53AiZF2Uc87jqsm7FGHekedxHWTdXxuNo
Hge6uTGOeRzogzrkCFt2Q551Rh6XA+NjOreYn5dnNZX1Kci47y5nKeraTGGX
7Fe/szxri8H7fWcfg2C3dsKlvcwvmfKm+LQin24tpTrgfhxTPzSfOtpreckY
5q/M+RToUIzxAJpPgQ4lGd9K8ymYP26MSzSfijq0NE7hr0gTt70PJpjymrPy
eG0Zvz1sf/gF+whhlXy+JPNX5HavriUX3ksSusr3l/kr4ppTNiYv34H3lGi/
DUmjeQqMi/kxMp3mKTAu5sfIR5qnwLiYHyMFaJ4C9qMf05GA+M7Oht6lhDnX
jsfdY35MR/qtPnV+hilfIPJ5TC8YP+OyQc4XwE60R0f8aTx/TLbThfFYGs+D
naUZ19C/0UOCL+Uw/+ZAKhQ6PjUvfnaV7/sbxhvT+Bmui/07kLo0joXrGhnH
/j9n9FvyO/cDixv9aNwI61c+sLroAup/9oC/YvXP3d0KLQqJ3irQ+ESi/UjY
vyquk079z/tddOrp6gb5OfWG+e2WTfLOZ7sWOZf/XYvjJs8btmxtNI1705g9
t1KLh7x1KCak835VPHb22dzehmaRfHuN5urD4natvyyk+Qh+F1ijOUh59h/q
e9RvMz9c6Rz0T/0Pqxf9SgI7J/E6kCM0ToP7Yl7HUoOe56Z6n07ctoM+tD3q
xu7XJD4OZFxVlxYCt0Idmx9vuqA5B7rN5e0XO1D/Se8L43t6PzrSPWGLSrd0
8WqJmX/1H3hByFHpuYfXk+nforSyXsrq7YIfrZ8H8vNBiOgD193LPx/FM2kB
51PH9hHyy+3vMy4u/NL9aEJd4T3MW2bneXq+2X3Z/7xgvNu5Np41i55G+5md
Naj9Gu4vXWhJ6//w3/h9cI1mDK0PP1L1U/UxN9/YeDOobrQftk4zju+HXd/l
EfQTyP/uhOxnoENN0IHxp1QHyNfeMHti8gUXTNxUn9pznfX/Y5BxR5ffp5Cz
9p8op/2w9is00E9NXn9h0z8jiabfOeEw6Mz4Aqozr2eWsL/h56Sr+99FXYfn
O5tvB+ZfuDVp51qBxnWM59Bz58Cen+w+jj2y3q5MSRvhOf87Fef8OGq4MSVZ
6C/71e+Mx6+/px0XXlHgvjtv8kuFI3vtM+/bdWd82OGI53c79Qrgvkdv4o0P
VUy9sYQEcd+jN/FZ7e1qXyrXNJj7Hr2Jn08cPmlun7Ih3PfoTfzySX1aqa0H
Qrjv0Zt4i9XKdY90vpn44kFhd2e98A/lvkevaM99j97Eq52C/rnv0Zt4x+Fg
D/c9ehN37AD2c9+jN/EbdLzc9+hNvEEU6MbpacrLou+Nu5Y4MjuI09PEP7ao
XmPKo/7VOT1NvKqDv7xOldPTxNe/bZm/bonmoZyeJm57/ufP0es8wzg9Tdzx
w61beet1OT1NvPvgziTmaLFwTk8TrzjeVV7vzelp4rNpe05PE/+H9s/paeJb
qD2cniYe/A7s5/Q08baOMF5OTxNvfp/TjXHUjddZJxlbbXw6Z9iSEF5nndQq
/6G4uBNOwbzOOml4bSGl5avnobzOOpOd5WrkrdPmddZJk1zWfazTKDWc11kn
DetifL25TmwEr7NOOpT+NvfuooMRvM46qUHCwW/OK+9E8DrrpHe0Pa+zTjpA
++d11kl1S4I9vM466Sm1n9dZJ92JhvHyOuuktq053RhH3XidbaSh1wv22V3+
SSivs41U/1vBmn+/bB3C62wj9f8yP3WP5BPO62wj3RrYqs0HTVgEr7ONVDa6
Scf7W+0jeZ1tpE1zV5+v+3htJK+zjbT9RafuiQLuc0GdbaTSEblBle4Yo3id
bSS7l9Ce19nE50H/vM4mO6k9vM420n+DwH5eZxtpZzaMl9fZRgq5wenGOOrG
65wjZrffnxP742QYr3OOWORf/2eFWkSE8jrniPdd65zfPU0fweucIx7s0eZZ
GYN7JK9zjlh38t+G7W0/qXTOEZ2CRpzxmj8litc5R5xZaebkyObPonidc8Qp
uxuvrnQrn8DrnCPuoe15nXPEcbR/XuccMZXaw+ucI7aPA/t5nXPENaVgvLzO
OaJDR043xlE3XucsccCuAcLaJ3XDeZ2zxBF1un/1eSepdM4SbbQT2tY4PV+l
c5ZYrnzW3KnBa1U6Z4kPll253evd0Che5yxxW2TnuS6d7QVe5yzx44QntbaX
6KmKr7LEIetqeIU3naTSOUv0nAjteZ2zRP8o6J/XOUscthzs4XXOEq9S+3md
TfbQ8fI6Z4nibk43xlE3XmdTXBrw2qXk+aHhPNdo7oTuzU6+vlClf7rY2j72
xMj09yo/Y4rHui2JP1pZH8bfl3RxxeWdkZsKn4jguUbjR/f78PcrXWw3Tiza
auq1SJ6bZor3jamBnT6p7mO62Lhl8fOT86+L4rlGU+V34aT4L6dU9zdd3Fv+
YOc5l8IEnms0C1YNN7x16qC67+li89s/y1y596/qvqeL0hzN8tOV9qrue7o4
nrbn73u66FsBrstzjcZpNVyXnw/p4j06Lp5rNBIdFz9P0sVvVDeeazTryoNu
/PxJF4ddgfvCc43GkA73hZ9X6eLHQJgnPNdoSoRz84S1V80T1h7niWoeCjfp
PKTtGW9L+1HNK2E7nVeq+SP0oTqo5onQleqpmg/CxfLW7ku6UJveL9V9Ed7T
flT6C9rxcF2VzsIUqrNKT8GmOjdexnG8Kn8o/MEfCm2t+0NBa90fCp7W/aHw
xLo/FDZZ94fCW+v+UBhk3R8K7tb9oeBr3R8Kw637Q+EP/lDIsu4PBcm6P2S6
qZ7vwgnrz3dBWmD1+S7stP58F+ZYf74LLtaf78Lt6laf70I76893oZ3157sw
3vrzXahp/fkuLLb+fBf8rD/fhWHWn+/CvQ5Wn+9MN1W8Smysx6tk21er8Spx
sx6vkhbW41Uyq7bVeJVEW49XibP1eJXMCLcar5IBL6zGq2TzXKvxKiHW41VS
znq8Sjpbj1dJIevxKtNNlX+RTi2t5l/kcj6r+Re5V8tq/kVWvrWaf5HbJazm
XyS/9fyL5Leef5F18VbzLxJkPf8itaznX2SJi9X8i8RYz79ImPX8iyxtZTX/
Yrqp6gkk+j+r9QSitV5PIBvsrdYTyN03VusJpNY5q/UEYvfeaj2BJA+yWk8g
/cZZrSeQU4Os1hPIyPdW6wkk45zVegLp/dZqPYFMdrBaTyD/u2e1nsB0U9XB
yIAIqOeo6l3kykGr9S7iZL3eRcKt17uIk/V6Fzm2ymq9izhar3ex9qp6Fxly
0mq9i1xNtFrvIvPbW613kZbW611kF18nZHwGrRPCvnTzepXE3dAP7BM21wkz
W8B16b5xxl36g52w39u8XsX3AIwLzu8wr1dplww63JXHZV6vMiAedKtNz1lA
Pi6/s9zPTLm9eb3Kt4Oz5evC+WLm9Sotk8pG59kJ50yZ64Gbt8bdyRsX7E82
r1epfTJy5wOTPnI3ivUqi7wcM1ol9QqA/Y3mdSmeTZvK8xn24ZvXpXgnZcvz
H/Qxr0vp9Pyy/HuR6P5J5L9s2sm/rxTZTvO6lPFni8u/R9DBvC7lUUXHwv+Y
+q9D95Mjf565c0uePaCDeV1KwvOAaodMvy+Yb+Z1KX1++61x/Ds7SB6WYl2K
zcEGz36/6l8d9m2a1588WuL4Ic9/wr598/qT9iu6ZuT5Wzh/x7z+5LpDrd95
/tlmv9wR47fqPM/O8+dwrpl5/cn9rLtXF5r8MIzLvP7kYq1tk+69ex4K+67N
60/WHDiypsDxJfR3YV5/krb8Tad9c4sFw/5nW2qnjWQsvORHHdPz94U8YPM6
k9TXMeWGmZ7Xm+R+zOtM5s6Y1s7H9HyH88vM60zyhcelvH3qGw7nc5nXmbSM
HdN+wZ1Mqr95nYlY58JRtyULQ0bK3LyepEL/Nl8ymz2Lukz3wSJ/3c/R8evN
fPTcOvN6kkvNxl/u9sQvHPQxryd5NPKfCRWqp4dCe/O6kbvnt6xy+XEj7KEq
f79N8/eDf8i7/1Xl179pfp32hzw6+Q/58kruuaPRnC3qv2OiUwr1g68s3kNN
4p47Go3eCdrPUOXFsTQvvqXKf1flgj2zVXmuhoD9e1T5rMb9rDzeO6q8VaNJ
lfWB1zhlFDw2IS8/faT0k6a8bP84v1Ubq+6KOKT0kyY+a91YuzF7pUgfpZ80
8Zzvp3MC9POj0pR+0sQjAiO77JhXUfBX+kkTnzTL9urSrpOFb0o/aeJFeme3
STq5U6ip9JMmHrLon6GJxeKobuZ1Nb7VctMHG33p+QXmdTVNL+z3+fRlAc0L
zPnpsmUbPCI7nYjcrfSTJm7cfj14y/PdEfeUftLEV33rU3Dx9bhw3k9mCZWf
erw96+IXOYTzk1lC+nuffsfX5Y+qxPnJLKHTxdsJmTYrok5xfjJLaJVPiB3a
11k4w/nJLMHueYNxu8b0pDqY18nEfnvfvWAVe4H3k1lC6B1BfzB1aFQfzk9m
CY3nHEnvUmJtJO8nswS/pR9H+K6bH7GP85NZQtkpxjI7DtQNP8r5yRyhZ6ev
dvP/qkjHa14PU81j9TZjmc+RbTg/mSM8bpzhXH/DlCg95ydNeV/otCuOLZ5R
/2Ne97IkNC2jmykvi+b8pCmP8/Z6+sjZPbI35ydzhC6vpmb0N+VlvJ/MEa5f
jwrRm/IylZ8k53ok/F1qh33ka95Pkl/2Nd71N/nP7byfJDXX+d8eafKfKj9J
Qn4eqPPelL+o/CSZPTfvnBmfcJWfJAeWbJJ2mfKX0Zyf1JGzpdsIW0zPl5uc
n9SRB6MjC/1ner64c35SR/x2vNmTF7fzflJHVtnefZQXt3+Xx2VefxLUsZ/8
/HXn/KcDuV9mlBx/buN/d6Id/d35Amf1vWKUD+e5gJzGFaCzIq6AdiweY+9t
szg7s0Tt2Znx32u1oH7VvM6k2mdj702XWwhruPuSLp4YaF99kuv/VFyj2bIs
xXVf90vCeODM316kHPyweX2IH+3/IW8/2cbbzzjGkw/4OIr8j7bnr5sufKJ2
wn+b1yf8Q58LySr791I7+fbpwjlad93N6aPRHD6/c2DnM9fpfTGP9zbtZxA3
Xo3mDG0/W/U8+k6fX9NUPKeo8jll7v807R9+F+Z1OMeoP1fVh4UZtD5cgff/
4l7ans/jTPeLXnebSp+19LqqerXQnvZ/A37XzM41qW69t5O5Qmf+vov16X2H
c3bM62rc6TxU3Ucxjd7HH6p1LMvpOR7L4ffL+KngPgnfdOuELeDnWf/eMVUf
zFpcUvitWkdReDec78Hbny4O7nnhR9liA4USvM7infjb1SIypgjgf8zrKH52
vt2wWPsxgv0ref0YW4ewh56zcRjWm0nQ3nyuRQCsW2Pv2cvTcyQmwzo3xgvb
wjq3YbAujv7/zec2HIJ1dIzvp+c2tIP1eOz9ctMSsB5vCazfYzyYrt+LhvV+
BHlzut7PH9YH0v5tpIv0fAOwpyTj/9FzDMAeA+O36DkGY2EdI3sPu+sXrGP8
H6x7ZHwRXfd4GdZJEuRBdJ0k2OnIuD9dV/kW1mHS65rPBwD7SzLel54DMBTW
eTJehp4DcBDWhTJ+hJ4D0AjWl7L3m6Xo+tLjsB6V8QLFYD1qW1i/SpDP2Anr
V2FcDow3iYX1ruVgfSzjr+k+RFh3jePKEn/S/fjvYP0t4//Qffcw3mKM16H7
7mG8RRn3pvvuB8N6YMaP0H33T2AdMkF+vBSsQ24D65YZ9y0F65Z7wjpnxnG/
PIyrBOND6X55WGdu3uf+D93/DuN1ZRz3ucP9Nb/vw33ufrCum/GBdJ/7a1gH
zvjQh7AOvDesSyfI39J16TBeO8Z96P50WM9suT8d1oGXYBz3p3vCunrGcX96
GdW+8hC6D727an86GQz7xzep9pUvk9fb7/N/q9o/PlVeb0+Cu6j2iec45Y3r
SdinP+zL7v2H/deZf9hnve0P+6l7/WHf9H3Yd0DtMe93DuTXVQqtm8J614Ww
r4G2N8WldD8v9OPC+Gq6b/cv2DfB3keco/smXGGfBeOd6L7aFrBfg/ZjQ7bS
faxwXebH2H5VuC7zYyS2IuwHGQb7R1h9/vYs2D/iA/tNGI+h+0xnwP4Ugvwp
3WfqAPtcaP86conu9wQ7SzKeYYB9MYtgHw3jbeg+mnuw74bxcXTfTQDs02H1
7QJ0n2YY7OthfAzdp2mAfUAEeVG6T3M67BtiHPdpnoP9R/S6DiRrKuw/gnG5
Mu5D9ys1h/1NjPfrA/ubQP+ijE9zgf1Q+2D/FONzysH+qbGw34rVkxvQfZGN
YX8W49fovsiVsJ+LIJ9M90UWg/1fjIfRfZF1YL8Y4wfovsjzsB8N7DHFn6fo
fjR72L/G+AS6fw3GW5TxOXS/my/sj2O89mLYHwfjzcc4nsc1HfbfsXpvGt23
GAv79RjHfYvlYX8fQW5H9y2ugP2AjM+n+xanwf5BxtfTfYt1Yb8h4xr6B88L
amfe+/ftsO/mtcrPvN4EfmYwv09HrFAtqfUl75ZRL1TrzFPpOvPXqvMr1naK
2XI/Ol/E3/x1hWQ/rh8Wr84aB/3AB9fxPMZ0oQld/6xafy49oucoflbGmSb+
k563CedgmuO3ITSPo/sLGN9Mzxc9y8W3DlLlTpAPZnPxp4MUSL/HAd/LMcd1
5WheCdc1x3UJ2yEPpfspGB9Dz5VdxcXDOun0P5DPdof8l/HRbpD/0n1qBPnv
f+B83f6QR9P+baTyNI+G80bN8d7yOZB3w3eVzPHeqx+Qp9P9KYzH0POHR3Jx
vo0Uuh7y/atcHG4jnXCA+gDUi8xxYLGeUE+AvMAcB86m33eA9zLmOPDdNahL
DIA6BuNnMqCOAedEm+PAc15Q94BxmePAerROAufJahmPpudab4DCN4sDK4dB
vSWSyxdyxNlNoD7TE+o5BPkbWs/ZCfUfxjd3hvoPnItqjg/r0e8pwPspc3x4
czLUkUAHc3xYewnUnUAHc3y4ejbUqUAHc3y44jbUtZpAHYzxJ1+hDgY6aBi/
Q89Xh+9YmOPGHpeg/gbjNceNxz5AvQ7eK5njRtc0qO/BeM1xY2/6vQOubmDy
JwW+Qp0Q6s/muDFjG9QVof5sjhu3LIU6JJzrao4be56HuiXUB8xxY5A/1Dmh
PmyOG7/R+iqM1xw37v0B9VioD5vjxqbroX4L9WFz3Lh7PNR7YbzmuLEr/U4B
569MfkxHv1Pwgs+LhXR6Xi7vr7KEruegbs/7qyyhFT23/zifjws6mo9/5vNl
QUu/f9GA81c5QtAIeF9QnvNXOcLOpvB+AfbfGRgvTs+xX8r5qxzhMH1PEcv5
qxzBSN9rfOf8VY4whP7uBvD+inytDe9HGvL+ijzuBO9TKvD+ijQMhfcvYCfz
V6RQEviTwby/Ijb0Pc4l3l+RqfS9z07eXxE3+p7oG++vCH5Ph/dXOmKg75t4
f6Ujq1Lg/RTvr3Tkag14n1WB81c6kvwZ3n/x/kpHptBz1Jdw/kpHqtL3aGGc
v9KRpvS9Wxznr3SkAn1Pt4PzVzryib7X4/2Vjsyhz6mDnL9yIMYD8H7wX85f
OZDOP+F94kDOXzmQw8/g/WMjzl85kKQP8L6yKeevHMiwCvB+E/YRaxg/Qc8z
78jVqRzIyTPwnnQjV0cy2UPfq5bm/JsDuZgO72HjOP/mYJo/8N72DuffHEhG
E3jP+5Pzbyb9mkL8wPkxU9zV5zi8R+b8WF6ctgXeO3N+zMTbTob31JwfM/E7
B+C9NuhjjjN75IP34PYyyGTrELrT+CdcWX828fS+8D6dq4+Z+JlF0J7zk3nn
eOyH9/Wcn8zb30ff73N+0sS/0PUAd5V+0sRH0fUDnJ15636p3yvAc+E05b+V
ftUU1+XQ87F/8pxMpHzJ4ry/cxbvE+vy78XEXwvhvVgTpZ4mvo3yBar3mOn0
Pea/qrrrI1p3rc/3I7yi/cB/u+D9Yv3Bn4HxDhuGLzhwoRqEvejHTHz0qL3T
7U7cNADXMj54z8QGR75Md6cdMb765pR+Xc+0oucJs/kgXZzRv/jZ6X54HjjT
88iPMj0rzOzPvo+A/Ky+hjQ851/2vQ/kbRtsDP/07Qb/3eq8c0viqr5uOAu5
C+NjE3JOe+p/4ndA6PgdpLv0fA9OBxP36RaTvHT2J0dOBxN3eewTcrNgvJHT
wcSPyed7fPfmdDDxQn33/3UscWlVTgcT/504KiluSkPVdx5N/cd1Hzo4NETg
xpu378m7VbFvPcoJ3Hjzzh8eeepG//CT/HjzzvfQr8jOy5fhv9n7I+kmPaeI
H69O2kvP9+DHq5OOes5aNLlfrXL8eHXS1KLjIn8O2eTLj1cnLW65ql3wRQ92
Hj7y7a28u7jW2Yzf6SDIf1RP6tr7SlXVuHTSCacg574ro1Xj0klra0Idgx+X
+XwP3n4b6Qw934O330YaVa/jpKhri/x5+22k7vL5Hi+DefttpEPy+R512Hff
kA9P/i3Xc3g7baQcer4Hb6f5fA/enhxxKj3fg7cnR0zs4X4iMyCTfS8D+e+X
06sWHOul0sd8vgd/XfP5Hnz/WeJ1er4H3958vgfltL3JHy5P6VBk32c6H1wY
P2pfIKLNkcaVqT6MXxsSnjOh6THVd1fTBbsVu0cu31qTfZ8FueOw+MgEuwfs
OzjIt3jOcdN3ZOfJE+Qb77d3qXXFm32/BvnuNKjT0usyjud1UDsZx/M66LgY
x/M6eH3M53XwOmQJiwq5BWZd+eHP65Al9P+ycEacc032/RTkM30jDrkOWMG+
B4T8dMANj4Qajjhexiv6v9qcuHaeSgfzuRy8DuZzOXgdzOdy8DqYz+XgdTCf
y8HrYD6Xgx9vjrCjbFqdil627PtHyPsUELpVGh3KvmuG/OutL98yn41TjTdH
cKg/eMhtW/P3MpCv6xwdO/8/PBfR8lwOfrzmczn48ZrP5eDHaz6Xgx+v+VwO
flw2xPPbu19j3+H3v5ifITWO37kW2DtINS4b8kJr9+Fi/SmqcZniwc3l483n
EFqey8Hbbz6Xg7fffC4Hb7/5XA7eTh0Z4Ncrwq13KZWdOhIe4/Rq1pQaKjt1
JKqR8hw/y3M5eHvM53Lw9pjP5eCv60Ci6Lkc/HUdSGvuXDvLczn4/s3ncnD9
KM7loNzifSvtB+2RVP2w+luV29w5e3hdyd1WaT/2Y37fSu1nHN+38v3rpLMN
uPMSCXIb7r5oGXfn7iNe1/y+lb+u+X0r/Lfl+1beHhtp0Ubl/ER7bKT13HzW
Mp4mKec/m88S/3tBO83vW3k7ze9beTvN71tp/4zj+1be/hzx/21de3RNVxrf
0ogEiWgi0cRUFhWVSVMa1VDL2R4xQzAJpVdpPVJSqhmTiFeXKCrNeEQjgpJI
iTBKpY2YEtVzjIXUqKoyEY943WqCMXpdUSrp3Cx3f4+d3P/ut846Z+99z/m+
3+Pu82WzvKHGX29uHkLzDOQTs5jlJcgnZk9Pmscgn5hPP0fzHugn4LfyeaHf
yueFfiufF/qt7nFCXPmtfPyueE9aRyD/mxEv0roD+d985wGtU5D/zfJWtK4B
HgC/lc8L/VY+L/Rb+bzQb+XzspvLrtI6DnjAHF1J6z7gAXPy4R/+UXX6JvQN
VPHSORRXAB4wHQUUhwAeML3nU9wCeMBcGEBxDuABc85miovU+qA/y9dHiK0H
nvizfH2E2OFRlT8hZm8Pvj5CtKxPnBkSM1hbHyFuBxxbfPhCjbY+QlQEfjDk
2WRLe06FWN6Oxr0hLk92D98D5/GHuG9Nw+/SVcNLQnw37UT84D/M1/CSEJ8G
tRjs+8w1DS8JUdA2KsGrbIL7Pmns5/I4+rbu80Nc+bZPvsNzbUTUUDwMz7Xx
eCrFz5APwbfl5/eUyeUUt6O+F72O4nzIh7I6i/ICyIfStpnyCMiHcnYc5R1Q
F8C35ePxkeH9Kd8BviZXM36Eet1uxqegjkh/G+VfUEfk6TGUr0EdkWFBlN8B
X5Pru1E+CPVRjmK8Evi1jGQ8FPi1/OR9yluBX8vSLpTnAr+W/5xCeTHUXxn2
PuXRUH/l3GTKu4Ffy7VDKE8Hfi1tdsrrgV/Lk0lUBwD9RNYxPQH0E1nE9AfQ
T2Qt0ytAP5Fz2lJ9A/QTWVxH9RDAJ/LtVU3qJ3LfOaq3gH4iv9hH9RnQT+TD
xVTPAf1E+u+k+g/oJ+71UB/UzeLc7zHjcafZc9cvJ259f0h7XpzG7M9pHN/f
9Xlgsz7V+7Zwvtz4uuBTHOTXhf/jHe6fXz/8hd1aXIgexWXHXrjZRx+n0WFA
U8fbzc1un5cfL8S0L5s6j91IYccDLzOr3O9Z0uZr3WB99xB//sb6MyL+vPg4
new7a+wX8/H7WVXVU8l+OsSlyi/m5/exnv34qyu4fxBx6dGXS0ob/OIn3xv7
xfy6PlZ0+zc9KmG/JOLVGz3vdGrwi598R7yq/GI+Hk9r0oe7Ddw3ini1+UBb
34Z9pnw8LvzZ/sqyBr/4yffGfjEfpwvHrv1RzoX9s4hjk+J/uTDucqHGoz2t
Y1U/pcbt9tXwg6eVlUn7+SKOPbSteUU87C9GHNv7vTU+65f5Q59rFe/W2uva
rwFh0OdaxYv/nPRNis0BfZlVPJb1QUZ8+0lUeG4S7L9GfHsgNeWn7zZkanW/
3mwTvLrvwe8d2rxc41nT8t1r6V01fufCvS/R/tGIb8d8NnnVo0q1bx3x7V+v
b0/sU5ajzddpTh5nO5DWtVCbr9MsaX9k+70zaZo+4DQrbLv6R/fy1fUQ8xzr
x4154M6egAVnx09s9Dx6uv+vy9fBaY5440hCFytb491Oc+PxgNdv+T3U1sFp
Do8avTX/bISm+7nW4TLtY4442aNfi+ezRszS1sduRizYtiI20tTWx24mryzt
VFPzb2197GaH5tE368LytfWxmztbfly+saSHNi+7GVhZ2zbeQ80XcW/Gwtz0
+OPYl1zFU2z3gkeSvuQq/l97UcIg0pdcxYfdpv3uUSeMv9VU3GnEtCiZuc47
Rr9PDOGg64b1wtn072h8y353xI3WkolXJxWW6c+dIQIzvn7gV6vlDVfciiP3
M+LJSFvvFX6vORrhyfJF3Zt19DyvP0daX3LEma17/e3h8lfP6XlMfvNBxvW9
Voiex+TMJTGfhTQL0fOYFNZZkmcQf/a7WO2Y1Lmlzsfl8dpNk2ZW/U/PY/LK
vpH3Ck7n63lM6+uNuFRs7Ntx+x9z9bogPfKWdoyOO6/XBTlw+4zxl3yuqj7L
EH90/+1T4amF7vmi7iTKaf5HvFrh/9rj7OLDeh2RpaF148vaFel1RF4eJG0X
VmAfbRVvY99V0JX00VZx3kcbceyaCTcvJB5w6HVWPir7Ifn2qRjoP67i/s1L
4uODB0D/cRX/6m6+XPhRK03fduFb36Gtpmevhr7YKn53JeuLDfj2caJPYlB6
R72Oy24bWp1J6FwPfa5VfOG1E4H/+QL7XKt4gtX+xJsZ2OdaxV8eW1h+kvS5
VnHe5xpx79GzPTbl7XsF+oOreNRLvw0Ogv7UiHvzUkdFxOa0UX2iIR4dEvr3
nLg86Fut4odGFRyqP1kNfatVPIvhIsTD5hYfr8TzIZzXuOJdfl/w1PBBD6A/
tYqvmtX2rXkvYn9qFQ+YvbFkMelPreIRjzxL1pH+1DDO3AHBnaA/Nfqq11gc
fdWh7Dzoq/Zm10VftV0aHSf6qs+JdDIv9FWPFrJ1ECq+2r3fX1sfaydbZ/Rb
vULp74J+a3Qa/R3Rb30+mv7u6LcGVjRxn7jwZyW739BX3c/uT/RVp1yn9zP6
qvM20vsffdXhU9jzIlQ8zP1eSjbfBh+WPY/ot7Z20OcX/dZeXvR5R7/V+yDN
D+i3Rk2i+QR91e4sL6GvOjaW5jH0VdM60LyHvurStixPChXv534/JJ+Xj2Wr
pXkY/VYny9votwZvonke/dbkPFoX0Fftv5/WF/RVcx7QeoS+6l1ev4SKe7vf
u8jH6Tqe1Uf0W88sovUU/dYNr9D6i77q6MW0jqOvup7XfaHiae73F/Hr1pvT
GK5Av7XNUopDkBcXcDwjVHyU+z1U/DxO02J4CXXFhOnXK2N/zdFwlBAlMff2
ptsuanhSiHkfJf2r/P4NDU8KcTGueO7v90s1PCnEO5ejUoeGxmp4UojlLI46
oTGMngd1wrBMel3UCat603GiTjjy3abmZTdmXaf4E/3lla9TvIr+cnU6xbfo
L395juJh9bEbB937NPl87UZIK4qr0Uf296I4HH3kzCyK29FH/jqd4nz0kSMN
ygvQL34USfkF+sV7vqV8BP3ii2Mpf0G/eMz0y0UfDvRvpHukTEvp7NktSb8P
jZHsPkQfecxYyr/QRx7xDOVrxEceT/kd+shv2SkfRB95607KH9EvfjqH8lD0
i8cFUd6KfrEv47noFxucFwsVf4M91+gXiyGUd6NfvIXxdPSLf2S8Hv3iou1U
B0BfeP4lqiegL7zlL1R/QF+4IJfpFULFs15tMk9KB9ND0BeuZfoJ+sIOpreg
/9ud6Tbo/w4LZjqPUPFtM2jdQf83sxfVkdD/zWO6E/q8P//M9Cuh4jMW0TqO
Pu+gOqqPuT8unObH8A/qlrvc/+vT4kY5i4MOad35E9PrQA88GWr595Omfryc
wY5XH7tZyvIMftS+cvdXqeI5I6dGXGq2pJGeeYRdF/8PM/9O7cRTO2bqeqZR
xOaFPloqOx79o+n7w62kxHX68cZ7TZ/fzHbvp9bGY67dkXF/aofpxv8BGJUj
Fg==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
6H1t+b1V8N6J7/316Pq77ld6QBpAc+a/1vSWeA==
            "]], Polygon3DBox[CompressedData["
1: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
aeJJS3Eb8SLxKvH+4tbihRXr6z3F+/C7Ffsj9NToaH33t8YPFB8sXizeJVmv
doiOLzsn6+1Lo+PbPsn5w43R+nu/5Pzk5mh9ur/4NvEt0flB02T9fVV0fG6c
rM+vjI7P9ZP1y4XR8X2HZD1xQbTeaJSsfy+Ljn+/63r3YG1hp8S3auvnQ8S/
iuslx9Pzo/XGrsn5yuXR8XSm9t9YvLP4EbSm7LM7c6NnvpvG/xR/JP41OD71
1vFbsN7E92n/D8Vbi08Njq8fJecLpwfr9ffFW7K+xR3FH4u3LazPyWc+EG8l
PiU4/hIjnhI/nP3Hh2X7m+uC5/MKjb8hfl7jO2j8xuTrfV3cUHy9uBuxDl8m
/kjH7858BM/nZ8n5zcXB9/tpcr5yobgz/qJsfxpyfCL5Ql/XyPGlRsXxqZzj
x7k6/n7xY+KhGusl3lx8nM53r/ivsmPv+uB4+E/Z8avI8a6P9t8O/xGcH34i
rst8Been1RXH10qOR3+XHQ//DdYj6GXizRsa31H8Qdn+lCSa9d5aNrtjlTUE
WqKXxuuznoPXS++y7eeyYHvAvzM/u+t8T4vnVXt+m4qf4vq0/774+2D/uqja
17unxruIu2m8jH8Jtnc0Bdpi2+jnMb56w60X20WvnwnVzvPrRq+PGeKN8DXR
87Gw2s9nD/EzzFfZ8eGuYH//Wdn2fXdwfPi4bHu4JXj9/1Tt9bqbjn+c9ajx
Rvj34PjSp2x/cGtwfPix2vO3q/Z/LPuX2uJG4kfxX9Vez43RaOSLZfub/wXH
o1ixfizl+Dq32uu7ifhJjfXV/m3FHYP9db+y/U2nYH+9uOz1+7N4V/LzivVj
dY7faLiJhbUB2u4n7f+keFSwPcwRP4x/FG+P9hN3xp8G65MFZdvPDPHOaNWy
7W20uL74lOT9O0bXU37R+Ovi6RrfSTxP/KJ4YrC9zS9b/0wKXn/kg13FL0Sf
7yHxF+I+0XpnrvZ/QTwh2D53Kzm3XazxLcXLNd5X40uD9d2asvXXmmA9vko8
iHgRrKdXl33+1cH6e23Z+mhtsH5cWPb1zBTvIr4w+fqfjH4+KzXeX7w8WD8t
E38u/jNYby4VfyZeEqyvV4j7iZcF6yt0DnqHHJkcal3Zen5dsB6+I9l/vhf9
+4OT6zc3BNvLt7l+wvoh/+mUfD0fROvH4cn1q/8G11vuS34+vaPXx0hxG/F9
wfWV25P15rvR8/tVcn3ntuB8qF9y/eby4PX9TbI93xGcX36dXD+7Pbg+cluy
3n0nev5HJNcv7gnOl79LrnfcG1yP6ptcv8KfYC/3JD/PXtF6b0hyPejG4PrQ
l8n59/XB9j1U3Fx8U3D96Yvk/BD/jz/qmPz834+OT4OS7fnqYP80LLn+hj1T
PwsV52cp5wMDk/Ppq4LtsX9yvnhFsH8YkFwfujLYvs8RdxI/quOH5PxraXQO
2yLZJ+ObqeGQOxyi9dy0yjWhFjlfIvdtLG5Xsj4sqrzPoSXvz7maZD6o5H35
jvzwQPGuVV5j25esodHSa/Q5ItkH4AvIF3YoOUcnVyeHJ/FFc6I9d9I52nCu
krUkMYHYQK5YW9s19Pk9+pq5dnJM7pUa19zC+SbfoWfZn+OOz9qMa+eauc+9
StamaGy09pzk395Unz1LPmZttCbmXGguamvkhGgx5oy5wyej1Zgj5oo5wZey
xlhrrEFqodOJscGa8NHkNcnaxKao7Uyr2BaxSXJtbAxbw2ejFalxUOtoVzhX
YM6Ze9YEvp41xdpizRALz9c5HtT2E7rm4RXbHLaHDVDrxIawJWyI2g1rnLWO
zVMbZU2ztrEBaq3YNLbNmqW2Sp5KvrpVlfNBfAS+Ahsh1mID2AKaiFiNzWA7
2AixEpvFdrF5ap3YPLaPD6E2Qg2N9cDzX6ftbTUHdbW9eZXzC3QCa4Ma53X5
HscH1xC59y8rjhXEDLQaNcBxwTU/aoODiX/BNcGzk21mTHDNDlv6RjwluOZ4
aXLN+aHgGhO1aDTU2OCaINrqa/Hk4JrgJeKvKo41xBxyb3IA7A+NRG7QT/xV
8BydmKxx0DoNCmvlgeIR+CbxackxbGI+H1qyr8aHB9c4j0/OQWpm+yY3+Rwf
E6z5jiW2iUfiO8RniAfhE/Gt4tPFtUu2nxLrP/nDNjVY6pHUe7A77K9JyRpt
YXS+jX1y/EWFawDUS3cuuRbAdw2Ta57UPskJyQ33KTm3JWckd6TeRN2AY3Yp
ud7A2mJ/juMY6qvLo89FjZl4HLFpjfUU/1U4Z2uIlizZ9+CD6ubf2zzb9+HJ
Ns42OSP1Yr6DN6tyvl2HT5V/c4/sH+4t7FPwT4cl/zbXgDb4LfnZ4APxhfVK
9nXL9alfcs2BuEv8JT/9Vs9/anANu0NyfYteCz2XzUvWoGhzNB3alJhObCdG
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
QZuRH+Nb1mb7Ozqvz/8D8mSaDg==
            "]], Polygon3DBox[CompressedData["
1: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
Ssqyj1kxlqD+B1d2K6Y=
            "]], 
           Polygon3DBox[{{1603, 1602, 2314, 1002, 1003, 2315}, {1761, 892, 
            990, 2311, 1607, 1608}}]},
          Annotation[#, "Charting`Private`Tag$376187#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
7bo8unamcfdIdC1YuujB6HqrtO4D0XVY6Za3o+uk0tuDo72o1riR0d5bfX5i
dO1Pc9Sg6Hq61qax0bU89YE9M9fWpQn3yFxbl56skLm2Lk34WfQehvrJJ9H7
W/KSA6Pr+Fr79spcf5du/Dzap2ls7pN5fZKmrZx5nZBWWRk9zjXnVMu8tknb
jI6uRWqc7p95DZPOOSm6Rq8199To2qXG3SnRNUrNyeOja4ta38dF1yi1plfN
vP5JU9XIvP8h/VYl8zoqvTQmujaqcfpOdF1bvuOt6Dq1/M770bVs+Zrbo/e9
NLffFb1/o7FwT/ReoMbLndF7RRqb90bvq2mMXBu9X6U15fLouq3mwMuia7ua
k1dH15c1H14RXV/WnLkleu9N3vPu6P1LjcfbovfD5Blvjd5Lk0/UHqLWhSXE
s6NrVZpntL+pupxqdfUz73FqzN4UvccmH3pz9P6cPOaN0Xty8l+3RO/hybeu
iq6Jay27LnpfSnryhuhaoXTm9dF1dq0Xl0bX07UOromuDWk+Xxe9Xyi//FL0
3olqIKpTSYevla+J3luSP30xeq9Fev716H0medhrov22/PKb0fsu8rAfRO9J
yFe+HL3npLrKe9F7EvKe2utVre0K4vPRezPyER9F7zerDvBa9D6WvPPaaD+v
tW9T9H6efO7G6H0+ee2ro/cd5cc3RO9HyqdfFb1PqVpBk8z7rJrPr4zeQ1Wd
4ZXoPTbVc+6IXoOlMe6L3qdRTWNr9F6R6h7boveKVHvpF71HJe16QfTapjXu
ouh6vdbT86P3J6Tzz4veS5CGvzB6/0Dr9eTo+qC09yL4oMT67eLomr7W91qZ
9Ye01i/R+9zy2gvhNon11ezoOpp0++6Z9+TkSc8g3zaxZlsSvXciT7E0er9E
XmNSdN1QOn9Z9L6CNMlZ0TVNab/F8MGJ9eE50XsJ8g7nRu+1yIOcCbdLrOum
R9c3pS2nRdc9pbebZtaIqm1+l9+/fF/MvG8k331a9D6CNOpumfcU5bvnRe8F
yOP8kD8r1R++z3+jfNxP+X2qtvBjfj+qOTTM7Dl7wgui9x2kjW8Kro8pPyu6
Hiq/MCW6fiq/NjW6firv0DhzTUH7+HOi65XyWadH73FI3zbKrC9Ve58bXVeV
/6qXWQfo/z98GP1/KVTzGRJdJ5We0f+fUP1b++OVMvsN+dz+0fug8k0Dovdx
5X0qZvYbqiEcH723qvpP3+i9VXnnfTN7CXnnCdH7T9JR/wdElgUW
            "]], Polygon3DBox[CompressedData["
1:eJwtmnWgVsUWxe93nfHM+a6BiiglIWKChYgiHSqISiPSoXS3hKAioIKFYItg
gIqN3dj9fM/u7u586+c6f5x7Z505OWdm77XW/hoMm9hjQmVFRcVG/Qn6X7+q
ouLqWFFRQ/i0VFHRI6+oeLpUUXGBOleWKypGZRUV3YV/F/6v8CDhw4W/E35O
+ACd0094d+HnhX/VNlvtjdr3gI49XltHtb/WvqfVN1C4s/C3ws8K/6Ntkdp3
at+T6ns1c7ufninXsy3W9bfWszXVtlztAervpP5vdM4zOvd3bSepfZP2PaS+
ftraqf259j2pvr+1LVT7Du17gmfX+92m9nztW6a+77VNUvsq7btT/adqG692
Dd3/XfV9qe0E9V+ofVerby89w9Fq19G+x8o+5wLhQ6OvNUG4r3BJ+FXhscK9
hP/W8f8T3kfnHyu8i/ATwnsLHyNcV/hx4T2FuwnXFn5UuJrG4HLO1b6Pda19
1d9b7UbF+/fRvjbCnxbn99T7PSO8SvgC4e94JrWv1L7bdWzj5O9XXfseUV9f
7Wsr/FnxPL2FWwt/UrzfYOEjhL8vvu/+ye/XuPj+vXS/F4UvFl4l/Je2k9Xe
pH2P69xxmZ/3H+17WX1rNC7b6Vvuou1GtW/QVkftuto2qr1A199G7ZvV3k3v
fpHwTsLXCO8qfEby8dcLNxJ+QtdtIFxL2wrtW6+tptr1tc1Q32+65xz9v1HP
8KCe5Sr171jp+c6875d7bBnji3XsHrrmKLV3Vv9K7q12PbV30HZl9BphPl4a
vXYaats5eIxm6Vq1he8U/opvrvvtkXxudW2L1K6l/jvU/6X6/1L/n7rnAuHb
hR8Tvk/XPazS9+c5GAfGo5m229S+KfrdeMdr1d5T15up465nzer6ewv3Fz5T
eLXwGbrmNOabjv1A99pF/Y+r/0/t21r9p6l/gto7qf899f+hbS731b6H+XZ6
p/+ofYn2rVbfQ9Hv30bbI2ofrGuMUP+BxfxuLjxEuKnwS8LTdY1BwpmOfV34
NeG7hI8TLutZTsp8/jbCb6m/gfZN17kbtG+m7j1X/SPV3lb9b6v/9GJ+HFJ8
n3nqP0H91dT/jvqnCQ8U3lL4NeEZwoOFk/Abwk2T1+OuRTwar/4+whXqf0W4
v+75mvA69V8qXEfP84DaP3FNnbtKW0vd+9BKj/c9On+1+g7T+T/q+H35/oyL
+tcxf4Rv1Pkf6ZifdexRuv7Dap+pfSuIh8JvCl8jfIXwvZljTStd4yfh5zLH
0mOEt9C1nhW+Qfho4UrhpzKPVVfhCuGXM6+9PsKZcFPOUXu59l2nvlcyx8K+
2pfU92Lmb91DeEvhi4mBwvsIf6L7P5957RwrHNT/QuZY2104CpeqPA+Zj0uS
n+GU4G/Msx2j93tU7RXad66u1134KeGVwucL76zjb1L7Y+37hfWZ/KxHsj7V
vlRbJ7Wf1j0+1vGddf6t6p+nc5YKn5K8nlnXHwk31vVujV4v56rviNxrizV2
hvrP174Wlf4+56n9ufaNIHbpmCt1/7szt1vqGj+or5vOf0T4LB1ztvDRwpuF
lwufI/w1MV7ty7XvRp37lfAY4cuEbxD+Rngc31b4ZuFntN2j9lG6/unq65R7
7bKGlwh3yd2/WPgs4QHCb5B7uIfwF9pGBs+5dZnn3BTha0qei8NzzzXm3NXk
rsz55Vfh/wifKTxduJ7u/6Hw8Tr+deGreGbh49TfXvgL4aeEm2g8p6m9njHU
sSMz579ftO9Fxi5zvvpZ+AXhEzPnt9+K9T9S53wqfKvwtcL7Ja+33Yr8v52u
fwW5gZyjc4fp+A/V3khOVv9Q4Q8YS+F1wl11/sXCJwrvo3P7CbfVt2yn7eLk
bzaZdy/5Ww7R+e+rfb32rSWfCb/HWiAnwmeE3xXeILxG+Bdts4LX2P2Z78G9
LmLO6dgVuse+utctGr+fy96uUPu6kvs4h2/fNvpacCDmRrtobtRV17hX+HRd
c3nZnORa5ns0V2HNTw3eRywgZzF32kfnMmIyubxjdKxmPFrpeVpru5Cx1fVf
Uv+lcBa+v/BnwrfxDYW31/usUfsVOEPmnMNYHR6di+BQa4Q7RHMrcjhz64jo
3A5HYy50ieZufXX9/wpfxhgxX5L5Yr2Cfx0nvG2lx4zx+THz95wa/Xw/Zf7e
06LPJyeSG+dFx8OtdM4fxEvGWLgs/Jvwsuj3+SHz950SnZ+q1P+78BnCG4Qr
hL8VPjn6+ybhX4SXCF9TdkxmvUyPzv+/ZZ6vs4UvET5SeH/hN/Q+95WdM8md
Z6n/evhV5vk0OZr//J55vOdE548/hD8XPil6ffXinXStDtrXn/yv7Qu150av
7+68o/qbESPgXtr2U/t17bu37BxELjoten1XCn8nvDB6PnPNHsJfBt8L/t1T
+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
Bm3TIFnboInQRv8Ha9GJ5g==
            "]], Polygon3DBox[CompressedData["
1:eJwt12XYFdUWAOBDfH6Hg0pKKQg2iCBIGpTSktId0t3dirSEAYiSCjYiFiio
2K3gBePaXikJ42Lju575fqzn2eudtWfmTKzZp1yfEW2H506lUgdElqiUL5W6
wKBj3lRqXq5Uaml2KtWUdWG3sFvFokwq1ZoNYivkd4gVrAI7j7WRzzJ3vrlX
sotYZ7aALWcviNXGr/BXxQw1LdKpVFXjHaKWE7pDPp7fK39J1GEPmleZXSjv
ZH/z7WMZu0TtN/IiohZrza5QV05dB3YbW8JqqPtdfr5owwayWuy0/GLRgQ1j
Ndk/8otEezaUXc1y2d+lrBMbEcdgh+Vp0YB1ZrXTyYW8hHVkw1k1dkpeWrRi
/dkGNsO4FXtf/Ub5DeJ844ZsvG2L1V3F/i8/T7Rk/Vh19pu8jGjNBrCb/d7b
zH2CbROb3Y9y6j4zzhJV1TVTdwH7XJ4trmLN2eXsoDyvqMc6sovZ1/JComac
JyvP/idPiTqsPavAfpDnFnVZB9bZuUx0LhvYRrHGuVRUd8j4DFFfXSd1pdl+
+d95PHesEbuQfcnOEtVZC1aWfSrPI6qwpux89ok8l7iSNWEXsa/kBUQN1pJd
z8o4lxvYOLYonkl2Ql5UNGY94rlix+WFRSPWnV3H0uZWYr3YBDbJb3uEPSry
eybPVVNXFJBXV9df3TR117JsdgXrycazS9m38nNEbdaGXcPOUFeR9WDjWD1W
kNVgA9h0Vthxj8jzizNFO9e0vrpi6q6VD1d3q7oGrDi7jo1gc1kddjarxvqx
qayA/f1Xnk9k4n2wv6rsMnXd5beru1tdQ3Mrsnbx7rM1rKK6sqw9m8tuZyPZ
XexF9pJ40v4qmXvMuKBoqK6buirspLyYaMJ6sqrsJ3kJ0ZT1Yl3iutrfTnEf
2xXPvWNcLu+lbjlbHe8HK896sKVsJWtsbiU2xTmsj3ctjqvuYtZF3UJ1K1gj
dVewyeruld8X76q6CqynumXqVrEy6g7IT3tOK7PGrKi6n9llojPrk53cz7iv
G+J9FhPVjDd3hPGqeM9tO66mH5/PXmanWFrNALaQvcJ+Zxm2Kp30vT1RK6ar
mcymG29R94W6f3Le/XlZyXWP6186v98e/YU9KP9S3Wl161kj++vK3rVtnXy4
6GE8j+1S94W6oawTm82eY5+wTo4xjj3GvmO/smHqOrM5bAf7lI1ivdnCeA7Y
12wE68nms93sSzaEdWSz2LPsABsX58NWsvfYsXjf2AS2nh1gv7EJbCRbzT5g
J3Kev7vZB3Gdo8e7BoPYYvaa/E91Z5o3hC1jb0Ufcy0KssFsKXsz7rG6Amwo
W87ejh6jrhAbzVaxj6J/suJxjcV97J2s5NqulY9St1L+YfQ7VoyNZfewffHO
sZKsP1vA9rDfHDcfG8gWxXeR/cHyx28VvdiCuL/sK793Ynwf4x6y/ewUG2Pu
arY3vkmOUSJ+m+jAZrJn1O2P66xuDfs43n11pdTcI+obv8bXiglqxsb5GC9X
96a5h+IY8ayyZewNdjB6RHy/2Vy2k73DHhePRR+0rbptx7xjT8i3Rl9lNdhx
1s54lPFD5n5l7k+238j6sHvYh+zb7GS9MTgr+Z7Ed6WI+9uGDWGb5J+oO6yu
PRvNHmZfs5PsJjaMPcA+Y0dZx/h90cfZt+wX1oGNYY+wb9jP7EmxLXqobTVt
O+Gc2xoPNb5f3afqjtjekt3M7mV72XesFesX/YvtY9+zFqwvW8M+Yt/k9OIv
cvp69PfdjvEofyS+D7ZVU/9jJulj0c9qscrscCZZm3XNylmDxXzXZZ2atbHe
yZf0t4PqGhg3NJ4WvdlxX43vPivN2rLZbAEbHc8lW8peZz/EN1Rdo+g/bHus
21gz1o3dyd5in7HmrDu7i73NPo9vGavNRrBN7Lnou+wmtoi9zPbl9N7owTXz
Jb37kHN+Sr5d1GW12EnW2Lid8WJz95i71/YHxP2xRrOtim1H1W2Sb4x+zK5k
R1gT4/bGS8x9xdyPo4exFfH+xhrG8184+jW7k70XayJWlLVJJ8/srEzyPMRz
UVzdn7H+EJXjHtt2DvvFuLzo4hi91RVjv8oriK6sb6x9WJb9Xc2GsDGx5mJF
WVM2mc1m57G8rDYbzEazUiw3q8kGslHsXJYn1s5sEBvJSrC/Ys0kerNBrGes
M9UNZxvZHtabNWGj2Rb2RqypzT2HNWNT2BzWS11jNoptZq+zqWwu28p+YNny
kub+La8q+rDB6pqkk2d2aia5L3F/FrGyru/W6GPRo+SXmlvSuKW5LeI9VF+e
nctay2fa3zxzp6ldwp5lx9jZ8kLqvpeXEs1ZW3UF2XfykqIZuyk7OUaJ+E/B
6sb1yiTrq6PG5UTZeKYzyf39IycP78zKsHxZyf2O+96LFWE/Gl8g2jpGl1hn
s0LxTWAT2Ex2GSuVlaz5Y+1/W6x3WWHWmE1kM2Idy4qwJmwSm5WdHDeTlZxv
nPfnjluWncnqy0epm6SuHDuLNWCj2eRYK7P8rB4bySay4ewO9i7L4x4Ucf26
xTeADWHr1L2orge7ng2LvsteZu3Y1awvu5vtYN3sbyp7ih1mf0bfTSfv7Rzn
+rT8mejP7Bp2s7qV6nbGWi/WNexJdpD9Hr0znfS9GZnkOxLfk9bp5FsyM5N8
R+J70jSdvN/TMkkPiF7Q0/5msR32d8L+UrH+Zf+R/2UNd01c03TyP2VSVvJ/
Kf43ldQ7+7Bb2Avyn9XljfUMm8OeZz+xPKwvu5XtYr+wrPhGs9lsJzvJcsf1
ZHXY+LzJsx7PfNt08i2ZnUn6W/S57qwBG6puvbkvsa7mTmHb2SH2R5i6emww
W8t2x3qStYz1JnuMvRf7M3cae5odYX+x/upasUnscfY+Gxi9jU2Ja8A+ZANY
azaZbWUfsL6sGRvLHmJvxTeUXcf6503+z8f/+sWxpvY7t8f9jH04jx5ipvFz
6o6ryxX7Sie9erprsNm8LWIO28RuVDdd3S2xdhHXsn5sFXteXR/WlI1hD7I3
2aC4rtFf2Db2UayLWXM2jj3M3mb/AlNzBAk=
            "]], 
           Polygon3DBox[{{2126, 1331, 1464, 2427, 1964, 1965}, {2205, 1481, 
            1101, 1102, 1482, 2206}, {2372, 1356, 1157, 1156, 1450, 2184}, {
            1960, 1959, 2428, 1471, 1472, 2429}}]},
          Annotation[#, "Charting`Private`Tag$376187#2"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[
           0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
          "Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0ksrpmEYB/DbOPO+4zAOybkoTbGdMnyCkZCklyTZsCA7NlIWbDS7mY0t
i1nzCfgCjuN8iJKSjVDelN9d6rme3/Ws/td130/j2HTfVEYIYVHVa2Jf5nXH
newQinnJej6yje/sZCInhC5Wc4jfOcl2/lRz+n4uc4x/OcN1LnCTv7kds3ND
eGKT7D3W8o2FmSHsxyweMMlDfuV/FvGIxTxmCU9YylN+41nciecs5wUreMlK
XvGGz2yWe806pvnPfLtc5RZXuMF5rnGafzjKJfaxV83qf3CCLUyxir9YwA6m
nWMrH1gXZ3UG92yQXcQavnL8i33jGTIZs5jgCAs5zAKmmM9B5nGAufEOmBNn
o6jQwyx209qhi55w6+Pl8z/4AF80OKw=
        "]]}, 
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jssnWEcBvD33Bx1DdoY3MJCXctxNxsYWdjEwkQsuolIjkEiXWqTaMJM
0iYVIyJB665ziR2xu/xODE9+/2d6/+/7fdXj00NTkRBCWhqiITQqtSyW/mQI
ffowBznOUc5wkvP8ym9c5Bp/yIp5hxs84C9ec493vOATbxjJDuGBSyxzZpu8
6J9ZLYfxEF71Iwb9mBH+YZR/GeMJ4zxlgmc8lyzzBZO8ZDav+IHXzOE/5nIz
EUIFU5In9VIj5XZ7tkMB7/lq9/985DlvuctL/uQ+17nN3/LdvMo0lznLOU5w
miMc4wAXnPEx8x2kV69jlZTasUf/xG6WsItF7GQhO5jPduZk7igpc5JtTLCV
MX7JvD1bMveJhdDMZzZxyztURt//hzegFDwI
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1489, 1810, 792, 1488, 2432, 1707, 1490, 2433, 1708, 1491, 
        2434, 1709, 1492, 2435, 1710, 1493, 2436, 1711, 1494, 2437, 1712, 
        1495, 2215, 2529, 1496, 2438, 1713, 1497, 2439, 1714, 1498, 2440, 
        1715, 1499, 2441, 1716, 1500, 2442, 1717, 1501, 983, 1718, 1811}], 
       Line3DBox[{1503, 2216, 2530, 1502, 2443, 1719, 1504, 2444, 1720, 1505, 
        2445, 1721, 1506, 2446, 1722, 1507, 2447, 1723, 1508, 2448, 1724, 
        1509, 2217, 2531, 1510, 2218, 2532, 1511, 2449, 1725, 1512, 2450, 
        1726, 1513, 2451, 1727, 1514, 2452, 1728, 1515, 2453, 1729, 1516}], 
       Line3DBox[{1518, 2219, 2533, 1517, 2220, 2534, 1519, 2454, 1730, 1520, 
        2455, 1731, 1521, 2456, 1732, 1522, 2457, 1733, 1523, 2458, 1734, 
        1524, 2221, 2535, 1525, 2222, 2536, 1526, 2223, 2537, 1527, 2459, 
        1735, 1528, 2460, 1736, 1529, 2461, 1737, 1530, 2462, 1738, 1531}], 
       Line3DBox[{1533, 2224, 2538, 1532, 2225, 2539, 1534, 2226, 2540, 1535, 
        2463, 1739, 1536, 2464, 1740, 1537, 2465, 1741, 1538, 2466, 1742, 
        1539, 2227, 2541, 1540, 2228, 2542, 1541, 2229, 2543, 1542, 2230, 
        2544, 1543, 2467, 1743, 1544, 2468, 1744, 1545, 2469, 1745, 1546}], 
       Line3DBox[{1548, 2231, 2545, 1547, 2232, 2546, 1549, 2233, 2547, 1550, 
        2234, 2548, 1551, 2470, 1746, 1552, 2471, 1747, 1553, 2472, 1748, 
        1554, 2235, 2549, 1555, 2236, 2550, 1556, 2237, 2551, 1557, 2238, 
        2552, 1558, 2239, 2553, 1559, 2473, 1749, 1560, 2474, 1750, 1561}], 
       Line3DBox[{1563, 2240, 2554, 1562, 2241, 2555, 1564, 2242, 2556, 1565, 
        2243, 2557, 1566, 2244, 2558, 1567, 2475, 1751, 1568, 2628, 1812, 
        1813, 1569, 1828, 1829, 2633, 1570, 1855, 1856, 2639, 1571, 2245, 
        2559, 1572, 2246, 2560, 1573, 2247, 2561, 1574, 2248, 2562, 1575, 
        2476, 1752, 1576}], 
       Line3DBox[{1578, 2249, 2563, 1577, 2250, 2564, 1579, 2251, 2565, 1580, 
        2252, 2566, 1581, 2253, 2567, 1582, 2310, 2568, 1815, 1583, 2627, 
        1808, 1814, 1836, 1835, 1584, 1809, 1830, 1838, 1837, 2636, 1585, 
        1858, 1859, 1857, 2569, 2312, 1586, 2254, 2570, 1587, 2255, 2571, 
        1588, 2256, 2572, 1589, 2257, 2573, 1590, 2258, 2574, 1591}], 
       Line3DBox[{1595, 2477, 1753, 1593, 2478, 1754, 1597, 2479, 1755, 1599, 
        2480, 1756, 1601, 2481, 1757, 1603, 2315, 2482, 1758, 1833, 2317, 
        2638, 1853, 1843, 1852, 1759, 1840, 1846, 1847, 1827, 2632, 1760, 
        1826, 1819, 2483, 1761, 1608, 2484, 1762, 1610, 2485, 1763, 1612, 
        2486, 1764, 1614, 2487, 1765, 1616, 2488, 1766, 1618}], 
       Line3DBox[{1617, 2586, 2268, 1615, 2585, 2267, 1613, 2584, 2266, 1611, 
        2583, 2265, 1609, 2582, 2264, 1607, 2311, 2581, 1818, 1606, 2313, 
        2634, 1851, 1831, 1817, 1845, 1849, 1844, 1605, 1841, 1850, 1842, 
        1816, 1839, 1848, 2637, 2316, 1604, 1832, 2580, 2314, 1602, 2579, 
        2263, 1600, 2578, 2262, 1598, 2577, 2261, 1596, 2576, 2260, 1592, 
        2575, 2259, 1594}], 
       Line3DBox[{1620, 2269, 2587, 1619, 2489, 1767, 1621, 2490, 1768, 1622, 
        2491, 1769, 1623, 2492, 1770, 1624, 2493, 1771, 1625, 2635, 1834, 
        1772, 1854, 1820, 2270, 2629, 1626, 2494, 1773, 1627, 2495, 1774, 
        1628, 2496, 1775, 1629, 2497, 1776, 1630, 2498, 1777, 1631, 2499, 
        1778, 1632}], 
       Line3DBox[{1634, 2271, 2588, 1633, 2272, 2589, 1635, 2500, 1779, 1636, 
        2501, 1780, 1637, 2502, 1781, 1638, 2503, 1782, 1639, 2504, 1783, 
        1640, 2273, 2590, 1641, 2274, 2591, 1642, 2505, 1784, 1643, 2506, 
        1785, 1644, 2507, 1786, 1645, 2508, 1787, 1646, 2509, 1788, 1647}], 
       Line3DBox[{1649, 2275, 2592, 1648, 2276, 2593, 1650, 2277, 2594, 1651, 
        2510, 1789, 1652, 2511, 1790, 1653, 2512, 1791, 1654, 2513, 1792, 
        1655, 2278, 2595, 1656, 2279, 2596, 1657, 2280, 2597, 1658, 2514, 
        1793, 1659, 2515, 1794, 1660, 2516, 1795, 1661, 2517, 1796, 1662}], 
       Line3DBox[{1664, 2281, 2598, 1663, 2282, 2599, 1665, 2283, 2600, 1666, 
        2284, 2601, 1667, 2518, 1797, 1668, 2519, 1798, 1669, 2520, 1799, 
        1670, 2285, 2602, 1671, 2286, 2603, 1672, 2287, 2604, 1673, 2288, 
        2605, 1674, 2521, 1800, 1675, 2522, 1801, 1676, 2523, 1802, 1677}], 
       Line3DBox[{1679, 2289, 2606, 1678, 2290, 2607, 1680, 2291, 2608, 1681, 
        2292, 2609, 1682, 2293, 2610, 1683, 2524, 1803, 1684, 2525, 1804, 
        1685, 2294, 2611, 1686, 2295, 2612, 1687, 2296, 2613, 1688, 2297, 
        2614, 1689, 2298, 2615, 1690, 2526, 1805, 1691, 2527, 1806, 1692}], 
       Line3DBox[{1706, 1825, 1824, 2631, 1705, 2626, 2309, 1704, 2625, 2308, 
        1703, 2624, 2307, 1702, 2623, 2306, 1701, 2622, 2305, 1700, 2621, 
        2304, 1699, 1807, 2528, 1698, 2620, 2303, 1697, 2619, 2302, 1696, 
        2618, 2301, 1695, 2617, 2300, 1694, 2616, 2299, 1693, 2630, 1822, 
        1821, 1823}], 
       Line3DBox[{1861, 2177, 2318, 2640, 1860, 2745, 2077, 1862, 2746, 2078, 
        1863, 2747, 2079, 1864, 2748, 2080, 1865, 2749, 2081, 1866, 2750, 
        2082, 1867, 2751, 2319, 2641, 1868, 2752, 2083, 1869, 2753, 2084, 
        1870, 2754, 2085, 1871, 2755, 2086, 1872, 2756, 2087, 1873, 2424, 
        2850, 2088, 2178}], 
       Line3DBox[{1875, 2320, 2642, 1874, 2321, 2643, 1876, 2757, 2089, 1877, 
        2758, 2090, 1878, 2759, 2091, 1879, 2760, 2092, 1880, 2761, 2093, 
        1881, 2762, 2322, 2644, 1882, 2323, 2645, 1883, 2763, 2094, 1884, 
        2764, 2095, 1885, 2765, 2096, 1886, 2766, 2097, 1887, 2767, 2098, 
        1888}], Line3DBox[{1890, 2324, 2646, 1889, 2325, 2647, 1891, 2326, 
        2648, 1892, 2768, 2099, 1893, 2769, 2100, 1894, 2770, 2101, 1895, 
        2771, 2102, 1896, 2772, 2327, 2649, 1897, 2328, 2650, 1898, 2329, 
        2651, 1899, 2773, 2103, 1900, 2774, 2104, 1901, 2775, 2105, 1902, 
        2776, 2106, 1903}], 
       Line3DBox[{1905, 2330, 2652, 1904, 2331, 2653, 1906, 2332, 2654, 1907, 
        2333, 2655, 1908, 2777, 2107, 1909, 2778, 2108, 1910, 2779, 2109, 
        1911, 2780, 2334, 2656, 1912, 2335, 2657, 1913, 2336, 2658, 1914, 
        2337, 2659, 1915, 2781, 2110, 1916, 2782, 2111, 1917, 2783, 2112, 
        1918}], Line3DBox[{1920, 2338, 2660, 1919, 2339, 2661, 1921, 2340, 
        2662, 1922, 2341, 2663, 1923, 2342, 2664, 1924, 2784, 2113, 1925, 
        2785, 2114, 1926, 2786, 2343, 2665, 1927, 2344, 2666, 1928, 2345, 
        2667, 1929, 2346, 2668, 1930, 2347, 2669, 1931, 2787, 2115, 1932, 
        2788, 2116, 1933}], 
       Line3DBox[{1935, 2348, 2670, 1934, 2349, 2671, 1936, 2350, 2672, 1937, 
        2351, 2673, 1938, 2352, 2674, 1939, 2353, 2675, 1940, 2789, 2179, 
        2180, 1941, 2790, 2205, 2206, 2676, 1942, 2210, 2211, 2677, 1943, 
        2354, 2678, 1944, 2355, 2679, 1945, 2356, 2680, 1946, 2357, 2681, 
        1947, 2791, 2117, 1948}], 
       Line3DBox[{1952, 2792, 2118, 1950, 2793, 2119, 1954, 2794, 2120, 1956, 
        2795, 2121, 1958, 2796, 2122, 1960, 2429, 2860, 2123, 2201, 2430, 
        2851, 2202, 2182, 2190, 2192, 2124, 2189, 2426, 2854, 2194, 2193, 
        2183, 2197, 2856, 2125, 2196, 2195, 2204, 2855, 2126, 1965, 2797, 
        2127, 1967, 2798, 2128, 1969, 2799, 2129, 1971, 2800, 2130, 1973, 
        2801, 2131, 1975}], 
       Line3DBox[{1974, 2691, 2367, 1972, 2690, 2366, 1970, 2689, 2365, 1968, 
        2688, 2364, 1966, 2687, 2363, 1964, 2427, 2863, 2212, 2214, 2213, 
        1963, 2862, 2208, 2209, 2207, 2175, 2853, 1962, 2174, 2181, 2848, 
        2422, 1961, 2200, 2859, 2428, 1959, 2686, 2362, 1957, 2685, 2361, 
        1955, 2684, 2360, 1953, 2683, 2359, 1949, 2682, 2358, 1951}], 
       Line3DBox[{1977, 2368, 2692, 1976, 2802, 2132, 1978, 2803, 2133, 1979, 
        2804, 2134, 1980, 2805, 2135, 1981, 2431, 2861, 2136, 2203, 2423, 
        2849, 2137, 2191, 2806, 2176, 2188, 2369, 2858, 2199, 2198, 2857, 
        2138, 1982, 2807, 2139, 1983, 2808, 2140, 1984, 2809, 2141, 1985, 
        2810, 2142, 1986, 2811, 2143, 1987}], 
       Line3DBox[{1989, 2370, 2693, 1988, 2371, 2694, 1990, 2812, 2144, 1991, 
        2813, 2145, 1992, 2814, 2146, 1993, 2815, 2147, 1994, 2816, 2148, 
        1995, 2817, 2184, 2372, 2695, 1996, 2373, 2696, 1997, 2818, 2149, 
        1998, 2819, 2150, 1999, 2820, 2151, 2000, 2821, 2152, 2001, 2822, 
        2153, 2002}], 
       Line3DBox[{2004, 2374, 2697, 2003, 2375, 2698, 2005, 2376, 2699, 2006, 
        2823, 2154, 2007, 2824, 2155, 2008, 2825, 2156, 2009, 2826, 2157, 
        2010, 2827, 2377, 2700, 2011, 2378, 2701, 2012, 2379, 2702, 2013, 
        2828, 2158, 2014, 2829, 2159, 2015, 2830, 2160, 2016, 2831, 2161, 
        2017}], Line3DBox[{2019, 2380, 2703, 2018, 2381, 2704, 2020, 2382, 
        2705, 2021, 2383, 2706, 2022, 2832, 2162, 2023, 2833, 2163, 2024, 
        2834, 2164, 2025, 2835, 2384, 2707, 2026, 2385, 2708, 2027, 2386, 
        2709, 2028, 2387, 2710, 2029, 2836, 2165, 2030, 2837, 2166, 2031, 
        2838, 2167, 2032}], 
       Line3DBox[{2034, 2388, 2711, 2033, 2389, 2712, 2035, 2390, 2713, 2036, 
        2391, 2714, 2037, 2392, 2715, 2038, 2839, 2168, 2039, 2840, 2169, 
        2040, 2841, 2393, 2716, 2041, 2394, 2717, 2042, 2395, 2718, 2043, 
        2396, 2719, 2044, 2397, 2720, 2045, 2842, 2170, 2046, 2843, 2171, 
        2047}], Line3DBox[{2049, 2398, 2721, 2048, 2399, 2722, 2050, 2400, 
        2723, 2051, 2401, 2724, 2052, 2402, 2725, 2053, 2403, 2726, 2054, 
        2844, 2172, 2055, 2845, 2404, 2727, 2056, 2405, 2728, 2057, 2406, 
        2729, 2058, 2407, 2730, 2059, 2408, 2731, 2060, 2409, 2732, 2061, 
        2846, 2173, 2062}], 
       Line3DBox[{2076, 2187, 2852, 2425, 2075, 2744, 2421, 2074, 2743, 2420, 
        2073, 2742, 2419, 2072, 2741, 2418, 2071, 2740, 2417, 2070, 2739, 
        2416, 2847, 2069, 2738, 2415, 2068, 2737, 2414, 2067, 2736, 2413, 
        2066, 2735, 2412, 2065, 2734, 2411, 2064, 2733, 2410, 2063, 1451, 
        2185, 2186}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{588, 793, 2432, 589, 806, 2443, 615, 2534, 820, 629, 2539, 
        834, 643, 2546, 848, 657, 2555, 862, 671, 2564, 875, 684, 2576, 887, 
        2478, 697, 899, 2489, 710, 2589, 912, 724, 2593, 926, 738, 2599, 940, 
        752, 2607, 954, 766, 2616, 968, 780}], 
       Line3DBox[{590, 794, 2433, 591, 807, 2444, 616, 821, 2454, 630, 2540, 
        835, 644, 2547, 849, 658, 2556, 863, 672, 2565, 876, 685, 2577, 888, 
        2479, 698, 900, 2490, 711, 913, 2500, 725, 2594, 927, 739, 2600, 941, 
        753, 2608, 955, 767, 2617, 969, 781}], 
       Line3DBox[{592, 795, 2434, 593, 808, 2445, 617, 822, 2455, 631, 836, 
        2463, 645, 2548, 850, 659, 2557, 864, 673, 2566, 877, 686, 2578, 889, 
        2480, 699, 901, 2491, 712, 914, 2501, 726, 928, 2510, 740, 2601, 942, 
        754, 2609, 956, 768, 2618, 970, 782}], 
       Line3DBox[{594, 796, 2435, 595, 809, 2446, 618, 823, 2456, 632, 837, 
        2464, 646, 851, 2470, 660, 2558, 865, 674, 2567, 878, 687, 2579, 890, 
        2481, 700, 902, 2492, 713, 915, 2502, 727, 929, 2511, 741, 943, 2518, 
        755, 2610, 957, 769, 2619, 971, 783}], 
       Line3DBox[{596, 797, 2436, 597, 810, 2447, 619, 824, 2457, 633, 838, 
        2465, 647, 852, 2471, 661, 866, 2475, 675, 2568, 987, 988, 688, 2580, 
        1002, 1003, 2482, 701, 903, 2493, 714, 916, 2503, 728, 930, 2512, 742,
         944, 2519, 756, 958, 2524, 770, 2620, 972, 784}], 
       Line3DBox[{598, 798, 2437, 599, 811, 2448, 620, 825, 2458, 634, 839, 
        2466, 648, 853, 2472, 662, 984, 2628, 985, 986, 980, 2627, 989, 1015, 
        1014, 1016, 2637, 1011, 1012, 1004, 1018, 1017, 2638, 1013, 1005, 
        2635, 1006, 715, 917, 2504, 729, 931, 2513, 743, 945, 2520, 757, 959, 
        2525, 771, 973, 2528, 785}], 
       Line3DBox[{8, 1495, 23, 1509, 38, 1524, 53, 1539, 68, 1554, 83, 1569, 
        98, 1584, 263, 113, 1605, 271, 1840, 128, 295, 1854, 143, 1640, 158, 
        1655, 173, 1670, 188, 1685, 203, 1699, 218}], 
       Line3DBox[{600, 2529, 799, 601, 2531, 812, 621, 2535, 826, 635, 2541, 
        840, 649, 2549, 854, 663, 998, 2633, 867, 676, 1009, 2636, 1010, 1007,
         1008, 879, 689, 2634, 1000, 1001, 997, 891, 2632, 702, 991, 2629, 
        904, 716, 2590, 918, 730, 2595, 932, 744, 2602, 946, 758, 2611, 960, 
        772, 2621, 974, 786}], 
       Line3DBox[{602, 800, 2438, 603, 2532, 813, 622, 2536, 827, 636, 2542, 
        841, 650, 2550, 855, 664, 1019, 2639, 868, 677, 2569, 999, 880, 690, 
        2581, 990, 892, 2483, 703, 905, 2494, 717, 2591, 919, 731, 2596, 933, 
        745, 2603, 947, 759, 2612, 961, 773, 2622, 975, 787}], 
       Line3DBox[{604, 801, 2439, 605, 814, 2449, 623, 2537, 828, 637, 2543, 
        842, 651, 2551, 856, 665, 2559, 869, 678, 2570, 881, 691, 2582, 893, 
        2484, 704, 906, 2495, 718, 920, 2505, 732, 2597, 934, 746, 2604, 948, 
        760, 2613, 962, 774, 2623, 976, 788}], 
       Line3DBox[{606, 802, 2440, 607, 815, 2450, 624, 829, 2459, 638, 2544, 
        843, 652, 2552, 857, 666, 2560, 870, 679, 2571, 882, 692, 2583, 894, 
        2485, 705, 907, 2496, 719, 921, 2506, 733, 935, 2514, 747, 2605, 949, 
        761, 2614, 963, 775, 2624, 977, 789}], 
       Line3DBox[{608, 803, 2441, 609, 816, 2451, 625, 830, 2460, 639, 844, 
        2467, 653, 2553, 858, 667, 2561, 871, 680, 2572, 883, 693, 2584, 895, 
        2486, 706, 908, 2497, 720, 922, 2507, 734, 936, 2515, 748, 950, 2521, 
        762, 2615, 964, 776, 2625, 978, 790}], 
       Line3DBox[{610, 804, 2442, 611, 817, 2452, 626, 831, 2461, 640, 845, 
        2468, 654, 859, 2473, 668, 2562, 872, 681, 2573, 884, 694, 2585, 896, 
        2487, 707, 909, 2498, 721, 923, 2508, 735, 937, 2516, 749, 951, 2522, 
        763, 965, 2526, 777, 2626, 979, 791}], 
       Line3DBox[{612, 982, 983, 613, 818, 2453, 627, 832, 2462, 641, 846, 
        2469, 655, 860, 2474, 669, 873, 2476, 682, 2574, 885, 695, 2586, 897, 
        2488, 708, 910, 2499, 722, 924, 2509, 736, 938, 2517, 750, 952, 2523, 
        764, 966, 2527, 778, 993, 2631, 994, 995}], 
       Line3DBox[{779, 967, 2630, 992, 765, 953, 2606, 751, 939, 2598, 737, 
        925, 2592, 723, 911, 2588, 709, 898, 2587, 696, 2477, 886, 2575, 683, 
        874, 2563, 670, 861, 2554, 656, 847, 2545, 642, 833, 2538, 628, 819, 
        2533, 614, 805, 2530, 587, 792, 981, 996}], 
       Line3DBox[{1021, 1239, 2745, 1022, 2643, 1253, 1050, 2647, 1268, 1065, 
        2653, 1283, 1080, 2661, 1298, 1095, 2671, 1313, 1110, 2683, 1326, 
        2793, 1123, 1338, 2802, 1136, 2694, 1350, 1150, 2698, 1364, 1165, 
        2704, 1379, 1180, 2712, 1394, 1195, 2722, 1409, 1210, 2733, 1424, 
        1225}], Line3DBox[{1023, 1240, 2746, 1024, 1254, 2757, 1051, 2648, 
        1269, 1066, 2654, 1284, 1081, 2662, 1299, 1096, 2672, 1314, 1111, 
        2684, 1327, 2794, 1124, 1339, 2803, 1137, 1351, 2812, 1151, 2699, 
        1365, 1166, 2705, 1380, 1181, 2713, 1395, 1196, 2723, 1410, 1211, 
        2734, 1425, 1226}], 
       Line3DBox[{1025, 1241, 2747, 1026, 1255, 2758, 1052, 1270, 2768, 1067, 
        2655, 1285, 1082, 2663, 1300, 1097, 2673, 1315, 1112, 2685, 1328, 
        2795, 1125, 1340, 2804, 1138, 1352, 2813, 1152, 1366, 2823, 1167, 
        2706, 1381, 1182, 2714, 1396, 1197, 2724, 1411, 1212, 2735, 1426, 
        1227}], Line3DBox[{1027, 1242, 2748, 1028, 1256, 2759, 1053, 1271, 
        2769, 1068, 1286, 2777, 1083, 2664, 1301, 1098, 2674, 1316, 1113, 
        2686, 1329, 2796, 1126, 1341, 2805, 1139, 1353, 2814, 1153, 1367, 
        2824, 1168, 1382, 2832, 1183, 2715, 1397, 1198, 2725, 1412, 1213, 
        2736, 1427, 1228}], 
       Line3DBox[{1029, 1243, 2749, 1030, 1257, 2760, 1054, 1272, 2770, 1069, 
        1287, 2778, 1084, 1302, 2784, 1099, 2675, 1317, 1114, 2859, 1471, 
        1472, 2860, 1127, 1476, 1477, 2861, 1140, 1354, 2815, 1154, 1368, 
        2825, 1169, 1383, 2833, 1184, 1398, 2839, 1199, 2726, 1413, 1214, 
        2737, 1428, 1229}], 
       Line3DBox[{1031, 1244, 2750, 1032, 1258, 2761, 1055, 1273, 2771, 1070, 
        1288, 2779, 1085, 1303, 2785, 1100, 1444, 2789, 1445, 1446, 2848, 
        1437, 1473, 1475, 1474, 2851, 1447, 1479, 1480, 1478, 1439, 2849, 
        1141, 1355, 2816, 1155, 1369, 2826, 1170, 1384, 2834, 1185, 1399, 
        2840, 1200, 1414, 2844, 1215, 2738, 1429, 1230}], 
       Line3DBox[{1033, 1245, 2751, 1035, 1259, 2762, 1056, 1274, 2772, 1071, 
        1289, 2780, 1086, 1304, 2786, 1101, 1481, 2790, 1483, 1484, 1438, 
        2853, 1457, 1460, 1459, 2854, 1463, 1461, 1462, 1458, 2806, 1440, 
        1456, 1448, 2817, 1450, 1156, 1370, 2827, 1171, 1385, 2835, 1186, 
        1400, 2841, 1201, 1415, 2845, 1216, 1430, 2847, 1231}], 
       Line3DBox[{1037, 1247, 2752, 1038, 2645, 1261, 1058, 2650, 1276, 1073, 
        2657, 1291, 1088, 2666, 1306, 1103, 1487, 2677, 1319, 1116, 2863, 
        1464, 1331, 2855, 1129, 1467, 1343, 2857, 1143, 2696, 1357, 1158, 
        2701, 1372, 1173, 2708, 1387, 1188, 2717, 1402, 1203, 2728, 1417, 
        1218, 2740, 1432, 1233}], 
       Line3DBox[{1039, 1248, 2753, 1040, 1262, 2763, 1059, 2651, 1277, 1074, 
        2658, 1292, 1089, 2667, 1307, 1104, 2678, 1320, 1117, 2687, 1332, 
        2797, 1130, 1344, 2807, 1144, 1358, 2818, 1159, 2702, 1373, 1174, 
        2709, 1388, 1189, 2718, 1403, 1204, 2729, 1418, 1219, 2741, 1433, 
        1234}], Line3DBox[{1041, 1249, 2754, 1042, 1263, 2764, 1060, 1278, 
        2773, 1075, 2659, 1293, 1090, 2668, 1308, 1105, 2679, 1321, 1118, 
        2688, 1333, 2798, 1131, 1345, 2808, 1145, 1359, 2819, 1160, 1374, 
        2828, 1175, 2710, 1389, 1190, 2719, 1404, 1205, 2730, 1419, 1220, 
        2742, 1434, 1235}], 
       Line3DBox[{1043, 1250, 2755, 1044, 1264, 2765, 1061, 1279, 2774, 1076, 
        1294, 2781, 1091, 2669, 1309, 1106, 2680, 1322, 1119, 2689, 1334, 
        2799, 1132, 1346, 2809, 1146, 1360, 2820, 1161, 1375, 2829, 1176, 
        1390, 2836, 1191, 2720, 1405, 1206, 2731, 1420, 1221, 2743, 1435, 
        1236}], Line3DBox[{1045, 1251, 2756, 1046, 1265, 2766, 1062, 1280, 
        2775, 1077, 1295, 2782, 1092, 1310, 2787, 1107, 2681, 1323, 1120, 
        2690, 1335, 2800, 1133, 1347, 2810, 1147, 1361, 2821, 1162, 1376, 
        2830, 1177, 1391, 2837, 1192, 1406, 2842, 1207, 2732, 1421, 1222, 
        2744, 1436, 1237}], 
       Line3DBox[{1047, 1442, 1443, 2850, 1048, 1266, 2767, 1063, 1281, 2776, 
        1078, 1296, 2783, 1093, 1311, 2788, 1108, 1324, 2791, 1121, 2691, 
        1336, 2801, 1134, 1348, 2811, 1148, 1362, 2822, 1163, 1377, 2831, 
        1178, 1392, 2838, 1193, 1407, 2843, 1208, 1422, 2846, 1223, 2852, 
        1452, 1453, 1454}], 
       Line3DBox[{1224, 1423, 1451, 1209, 1408, 2721, 1194, 1393, 2711, 1179, 
        1378, 2703, 1164, 1363, 2697, 1149, 1349, 2693, 1135, 1337, 2692, 
        1122, 2792, 1325, 2682, 1109, 1312, 2670, 1094, 1297, 2660, 1079, 
        1282, 2652, 1064, 1267, 2646, 1049, 1252, 2642, 1020, 1238, 2640, 
        1441, 1455}], 
       Line3DBox[{1232, 1431, 2739, 1217, 1416, 2727, 1202, 1401, 2716, 1187, 
        1386, 2707, 1172, 1371, 2700, 1157, 1356, 2695, 1449, 1142, 1342, 
        2858, 1468, 1470, 1469, 1128, 2856, 1330, 1466, 1465, 1486, 2862, 
        1485, 1115, 1318, 2676, 1482, 1102, 1305, 2665, 1087, 1290, 2656, 
        1072, 1275, 2649, 1057, 1260, 2644, 1036, 1246, 2641, 
        1034}]}, {}, {}, {}, {}, {}}},
    VertexNormals->CompressedData["
1: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
trfnQPoBgP/GQ9Rov+F+RSHXuVIfu2bnip+vBDeMB42ew671G7wLaL9BKk/s
N0j1Z6clEPqNmHgOsfX2UGJMBNB+Q0NL69p6+8kxwS/RfoN0vUg9JfQbmlqU
Mev9g8HoE/oNUn8S++fT9u6Wly7YAV7CyCiX0D9LyvB7mGOngTyxfz5tPyqU
ukUJ6F/GUxD6ZymZd5nCJ3RU1vCV/jk2vnQrdR0XsH8Bj/+K9s/IvLhnND4P
4MT+GdHv/xaiX8fTrvgZuT+QfCkKcGQebEf75yV86wZ5Yv9Mqp/YP5PaQ+yf
Y+M/pK23n9g/vyEc19ZL7J/fNNFt8A+xfyb1JwZzphWdB1my6hf2/a4BzymI
8yByXxy5XaMH5Jua5tPRefDAkNkRSDgG6F/ChxLmwfFjcV1Ot5KU1vDwNHQe
rPohnM4Q5QHs/IsfIMyDcfF/NttfZgTr+oPnKULnwds12yaNhs6uux9X/Fy0
M8nvy3AQwGkw1v3oPKhfsnOD/CaMH2EeNA8n37Jev6nRZcI8SGoPcR4ktf9B
/NAddB6k6RrRW79eCkwVYR40Cx8+vt4/GIywNDoPkvoTg6FRQ/kNQ6P9l46e
qZZZw1f4jaYmi+emd3SAPJHfcL9S/IrNKBo8vyDyG/HxIn9OvHwGzpuSVkbg
N6RlZPbPhLmvuy6toii/ERfvKVovywDWReQ3DI0C07Jgh3X5bcXPQcHCrHoT
gQCnxVTtQfkNUnlKTBsG5TdS0xw36CfyG3y7NDfYQ+Q3+Hbt2mB/W9PfCyi/
MT2N27BeIr9B6h8MRl0N5Tf+1Z9Evo4uBFNvLUXEiXwdBpPo05T2BTzfXOPr
eJUz42TA83oiX2dvL4+XpdsHzrvG17GU/irfBuwk8nX29jev93NnApzI1zU3
Od9/MEL1v3jv3e/8Ht7dACfydaTya3xd2Ab9a3zdRnuIfF1CvNIG+4l8Hel6
iXydjMw7j/X+WePrNvqz62im8I+IGnjkyCs3abkueB7bnGN7eQp69veTGIJD
jSr97ih++DwjAX80MiiAyktfdr+M4NAW2kcEvPdMrgQq77NtDwFXeAYRcJXc
Z3q0zcfzeX/7dx3xc1jHX7XF5MYF54X36uxJC3sAeMWPt5qPbG4+LuP9pKtn
ozxjRFZcsDSp/F0ZeqfgBjuY1SrkJ94pGq4cPnX1xPIMpFjYfJVb5glsXM6S
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
ROapt9vYgXQMv/rCon1mS7R+afMcr6RxxTnMDuxflxemLfupNILFgEnOhQmz
A05M40jdY7E+dX/o8hd+sG5FxBfJQEzux0TqJ6Udb7Lu9W5ofiWfRU2q+X+y
LORvjtZXol1PSUj6Wxb3K4oPxc9TrZ+uffxKUulFBdr3Pd992w7ud25ldqHS
m9YQ8ba99s4SM56Z+Z/s2tg8SfwSqtd7couq9eRqHc5XYuNTrG2RPlMVPA9V
n6nwHq3uL1lXy4buaF/i2J6GrT/6SlptZP7h8t71T97rurhj/jYTS545XK97
iGPSn7LfU85k4KZRu2jFTWvx43SnT2LyZX1u3VlpJ/0jAJPvN9nbDI1X7dso
RzV+A8u4INxPSjt/3JXS49B6VK5cLaVaj+ge2VXQ+pUzqhovU67//a36T3Bd
bk9O0GbK990zpPfhlPZOxYVQ+j+Uekvg19kX1JO7i1ZvI+EqlnU5baU+6twn
5gf6sXnSBoMj7Z8ZlnDeeCtwq/kYNk9o26HzJnr85VrhWz1M9KSxdZ5PvvwD
7jNNerECpOwzXS93SD7ow1RFfOPuwFqK/s2cJL8PAwlXKp1WxsrYaDzA5NZM
4hrvgVeV+wVSyr7uo8PO32U9/9izfuJIrwAmv8IkHgSNV6MdX5hUmw/Nr0Y7
f/GnhbJrH6ZUaddjmXz5N1xnnvyi9Rnl+o+2TfsY6fGraIZbOVO+b2l4p+6L
nDYlH3U5Kr3ZDA6rnXpmqEirN7AEb1ubz1eushDIz6cviM3DU38/2+d7bGnb
ds4Zvevx2DzNQmLgKN/Jijt7rnINPHIi8zJ9Kw8fKXGu/JnhvvLsp0vY+ofn
ePUqXZSr4nWS6Z0o+kz3HXFYvaa4rio2Dkf36MA3TJ7FGV3D38VOyI7Sk3Wp
0sD8pWU927C+yr0+YElYRM8RH26OEmg8nnZ8jMngS8biOvXSsv4VlPNL7Leu
rnBRVv8Ubk21nuH2E/bDJc5qmzKp17/6i1TwCN9JVVWa902fuNX/LJ9PxU9D
h0pvBo/s2ry+xyrR6q387paMGv4VFUo2vUaXri+Q+38L391dY+RTlhLE9f6i
6nnsOxq4s/dcdPq+yjey/vdqoL/L8v4PGu+ErQ2rLD7tkLKYJfOo6+syDp47
x08op9ssUr1LDNND1Gs7yX6uLILnbZ+vb2/UEO6ifTq7BlXC2jmnCapHE4r2
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
4ee7ElOwGGVDIhM81/9A0kV9
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{355.9373755269871, 232.00658414001117`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.2747297389291796, 3.1522248392608483`, 1.1991672666041377`},
  ViewVertical->{-0.030769633338502356`, -0.35304806419073986`, 
   0.9350990824695453}]], "Output",
 CellChangeTimes->{{3.873990321497046*^9, 3.873990360775103*^9}, {
   3.8739904473306847`*^9, 3.873990464200592*^9}, {3.873990872278893*^9, 
   3.873990919027059*^9}, 3.874159136663022*^9, {3.8755558482089767`*^9, 
   3.8755558932016897`*^9}, 3.8755559505015*^9, 3.875608779518321*^9, 
   3.8756088177909117`*^9, 3.875609114922443*^9, 3.875609219817253*^9, 
   3.8756092918127728`*^9, 3.875609407247745*^9, 3.875609923334978*^9, 
   3.8756100088746634`*^9, 3.8756100495201063`*^9, 3.875610324372719*^9, {
   3.8756308878810797`*^9, 3.875630909639102*^9}, {3.8756309723720417`*^9, 
   3.8756309839787493`*^9}, {3.875793688799498*^9, 3.875793762933404*^9}, 
   3.875793809674142*^9, {3.87579388026549*^9, 3.875793950754942*^9}, {
   3.875793983408401*^9, 3.875794009499598*^9}, 3.875794095587812*^9, 
   3.875794161135518*^9, {3.876262291859777*^9, 3.87626246603272*^9}, 
   3.876303016099277*^9, {3.876303046360381*^9, 3.876303060703002*^9}, 
   3.876303166841649*^9, {3.8763032965986233`*^9, 3.8763033484401903`*^9}, 
   3.876304488458064*^9, {3.8765854097658377`*^9, 3.8765854342919397`*^9}, 
   3.8766053438907347`*^9, 3.8766054325317383`*^9, {3.876605611999731*^9, 
   3.876605636894302*^9}, 3.876605824673028*^9, 3.876606187883404*^9, 
   3.878736297544449*^9, 3.878736353473523*^9, 3.8787403835661497`*^9, 
   3.878740773823769*^9, {3.884805682668947*^9, 3.884805699403215*^9}, 
   3.8848057473460407`*^9, 3.8848057949007483`*^9, 3.895320301884513*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"3baa1579-44a9-41d3-9595-a8191512f98b"]
}, Open  ]],

Cell["\<\
\[LineSeparator]\[LineSeparator]\[LineSeparator]Set parameters for the sandbox
\[LineSeparator]  xmin, xmax, ymin, and ymax define the borders of the sandbox
  nbox is the number of gridpoints on a side. The sandbox will be divided \
into an nbox x nbox grid and sand will be moved between those gridpoints.\
\>", "Text",
 CellChangeTimes->{{3.718713496465699*^9, 3.718713510617713*^9}, {
  3.7187138394293213`*^9, 3.718713844168648*^9}, {3.71871396171179*^9, 
  3.718714028208855*^9}, {3.884805685859312*^9, 
  3.884805693940857*^9}},ExpressionUUID->"1bb1f213-cb72-49cc-b2d9-\
4588364d7295"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xmin", "=", 
    RowBox[{"-", "3.747"}]}], ";", 
   RowBox[{"xmax", "=", "3.747"}], ";", 
   RowBox[{"ymin", "=", 
    RowBox[{"-", "3.747"}]}], ";", 
   RowBox[{"ymax", "=", "3.747"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "running", " ", "40", " ", "nboxes", " ", "causes", " ", 
    "findminimumcostflow", " ", "to", " ", 
    RowBox[{"stall", ".", " ", "50"}], " ", "nboxes", " ", "finishes", " ", 
    RowBox[{"running", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nbox", "=", "30"}], ";"}]}], "Input",
 CellChangeTimes->{{3.718713513661891*^9, 3.718713530016432*^9}, {
   3.718713846896575*^9, 3.7187138489240103`*^9}, {3.718713887380218*^9, 
   3.7187138879316025`*^9}, {3.7187141179093075`*^9, 
   3.7187141263052235`*^9}, {3.718714370879244*^9, 3.7187143931580024`*^9}, {
   3.718837776609479*^9, 3.7188378312984858`*^9}, {3.7320306658514137`*^9, 
   3.732030669358096*^9}, {3.7320311116333337`*^9, 3.732031112117734*^9}, {
   3.7320311560831895`*^9, 3.7320312028903494`*^9}, {3.7320314071613874`*^9, 
   3.7320314080677214`*^9}, {3.73203150154478*^9, 3.732031504086841*^9}, {
   3.7320315454472227`*^9, 3.732031546419386*^9}, {3.7320458525475364`*^9, 
   3.7320458529452667`*^9}, {3.7326326839670534`*^9, 3.732632685008771*^9}, {
   3.73263274972233*^9, 3.7326327835315876`*^9}, 3.733231966505395*^9, {
   3.7332320039813833`*^9, 3.733232005643506*^9}, {3.7332321125974092`*^9, 
   3.733232113331465*^9}, {3.733232145644101*^9, 3.7332321461597514`*^9}, {
   3.7332321860642796`*^9, 3.733232186445855*^9}, {3.73323221920685*^9, 
   3.7332322520727825`*^9}, {3.733232290109403*^9, 3.733232318874716*^9}, 
   3.733232540569396*^9, {3.7337936188054357`*^9, 3.7337936487083664`*^9}, {
   3.7338383631922035`*^9, 3.7338383639750013`*^9}, {3.748914448810422*^9, 
   3.7489144505583835`*^9}, {3.748914875540037*^9, 3.7489148800757647`*^9}, {
   3.841479224685567*^9, 3.8414792250605726`*^9}, {3.8414793421775713`*^9, 
   3.841479342417571*^9}, {3.8414801070125427`*^9, 3.841480107211527*^9}, {
   3.87555592001357*^9, 3.875555920158445*^9}, {3.8756099159884777`*^9, 
   3.875609916096182*^9}, {3.875610043855516*^9, 3.875610043974502*^9}, {
   3.875793682680879*^9, 3.875793721473713*^9}, {3.875793875586993*^9, 
   3.875793948476336*^9}, {3.8757940069226294`*^9, 3.8757940069971533`*^9}, {
   3.8757940928913403`*^9, 3.875794092991233*^9}, {3.875794140097681*^9, 
   3.8757941564047956`*^9}, {3.8762623771585283`*^9, 
   3.8762623772471237`*^9}, {3.876262433417536*^9, 3.876262433544656*^9}, {
   3.876585405505458*^9, 3.8765854058776283`*^9}, {3.87660518827043*^9, 
   3.876605188399829*^9}, {3.876605340498394*^9, 3.876605340838002*^9}, {
   3.87660559796305*^9, 3.876605598071498*^9}, {3.876605633217105*^9, 
   3.87660563331977*^9}, {3.8766057335684757`*^9, 3.876605733755821*^9}, {
   3.876606176507572*^9, 3.8766061766473217`*^9}, {3.876924163356978*^9, 
   3.87692416376956*^9}, {3.8779842095968437`*^9, 3.877984211167688*^9}, {
   3.87873630937062*^9, 3.878736331168005*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"c46fd729-895e-44ae-9525-59dd9bf3d2c2"],

Cell["\<\
Set parameters for the optimization
  gridboxcutoff is the minimum amount of sand that a box must contain to be \
included. Specifically, if the difference between initial and final amounts \
of sand in that box is less than gridboxcutoff then the box is excluded from \
the calculation. Set this to 0 to include all boxes.\
\>", "Text",
 CellChangeTimes->{{3.718714837186059*^9, 3.718714877180376*^9}, {
  3.718838284211881*^9, 
  3.718838346993821*^9}},ExpressionUUID->"04339642-b964-4f9e-ad5d-\
8ef64a024b98"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gridboxcutoff", "=", 
   RowBox[{".001", "/", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["nbox", "20"], ")"}], "2"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "scale", " ", "to", " ", "nbox", "\[IndentingNewLine]", "divide", " ", 
    "by", " ", "nbox", " ", "square"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7187155840273438`*^9, 3.718715593315936*^9}, 
   3.718837834737796*^9, 3.7338383153381925`*^9, {3.8414934264833436`*^9, 
   3.8414934476196184`*^9}, {3.875608785270916*^9, 3.8756088112454576`*^9}, {
   3.878736336563113*^9, 3.87873634798517*^9}, {3.8787380687525*^9, 
   3.8787380708966227`*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"2a5d1af2-5d1e-4a5a-85f3-30db64d15748"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate Derived Quantities", "Section",
 CellChangeTimes->{{3.718713923550826*^9, 
  3.718713930889989*^9}},ExpressionUUID->"61a6fe87-0b2e-482d-8c84-\
753eac290ab7"],

Cell["\<\
Normalize the initial and final sand distributions within the total box.\
\>", "Text",
 CellChangeTimes->{{3.718713478992344*^9, 
  3.7187134885471244`*^9}},ExpressionUUID->"ad0732b7-e6df-451c-980d-\
51a684a42f77"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"finitnorm", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"finit", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "/", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"finit", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", " ", 
      RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ffinalnorm", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"ffinal", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "/", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"ffinal", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", " ", 
      RowBox[{"WorkingPrecision", "\[Rule]", "10"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7187132897194853`*^9, 3.718713321111663*^9}, {
  3.7187135349379406`*^9, 3.7187136370391617`*^9}, {3.7187144047611823`*^9, 
  3.718714411501978*^9}, {3.7489103073135967`*^9, 3.7489103183341403`*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"0f22cf90-5a25-4ce3-a902-6c597856a554"],

Cell["\<\
Calculate the amount of sand that needs to be moved from each box of the grid \
and store the results in an nbox x nbox grid called diffarray.
This is the difference between the initial and final amounts of sand, so a \
positive amount means sand needs to be moved away from this box (sources) and \
a negative amount means sand needs to be moved into this box (targets)\
\>", "Text",
 CellChangeTimes->{{3.7187140698282948`*^9, 3.7187140763068504`*^9}, {
   3.7187149943912573`*^9, 3.7187150387746525`*^9}, {3.7187152642361326`*^9, 
   3.718715281446309*^9}, 3.747570827784646*^9, {3.747570864771738*^9, 
   3.7475709001404667`*^9}, {3.747571046420991*^9, 
   3.7475710917247972`*^9}},ExpressionUUID->"36e4f744-d1a7-444b-b926-\
cdbac989a41a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dx", "=", 
   FractionBox[
    RowBox[{"xmax", "-", "xmin"}], "nbox"]}], ";", 
  RowBox[{"dy", "=", 
   FractionBox[
    RowBox[{"ymax", "-", "ymin"}], "nbox"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffarray", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"finitnorm", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "-", 
        RowBox[{"ffinalnorm", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"xmin", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
         RowBox[{"xmin", "+", 
          RowBox[{"i", "*", "dx"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"ymin", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"j", "-", "1"}], ")"}], "*", "dy"}]}], ",", 
         RowBox[{"ymin", "+", 
          RowBox[{"j", "*", "dy"}]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "nbox"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "nbox"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.718714081814747*^9, 3.7187141129027367`*^9}, {
  3.7187141544741526`*^9, 3.7187143172783017`*^9}, {3.718714421055709*^9, 
  3.7187144213419113`*^9}, {3.7187144546094537`*^9, 3.718714464540495*^9}, {
  3.7187147534778547`*^9, 3.718714755470257*^9}, {3.7187149653917446`*^9, 
  3.7187149895938635`*^9}, {3.718715133954979*^9, 3.7187151581871185`*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"3304fdb8-6edc-4663-b71c-762e2a83631b"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "precw", 
   "\"The precision of the argument function \
(\\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"-\\\", \
\\\"0.63679565482062874609504957260903247049`10.\\\"}], \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\
\"8.125`34.692339425437005\\\"}], \\\" \\\", SuperscriptBox[\\\"x\\\", \
\\\"2\\\"]}], \\\"-\\\", RowBox[{\\\"15.75`34.67876661824773\\\", \\\" \\\", \
\\\"x\\\", \\\" \\\", \\\"y\\\"}], \\\"-\\\", \
RowBox[{\\\"8.125`34.692339425437005\\\", \\\" \\\", \
SuperscriptBox[\\\"y\\\", \\\"2\\\"]}]}]]}], \\\"+\\\", \
RowBox[{\\\"0.63662170449745962316667558602601303912`10.\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
SuperscriptBox[\\\"x\\\", \\\"2\\\"]}], \\\"-\\\", \
RowBox[{\\\"4.`34.69897000433602\\\", \\\" \\\", SuperscriptBox[\\\"y\\\", \\\
\"2\\\"]}]}]]}]}]\\)) is less than WorkingPrecision \
(\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)).\"", 2, 163, 12, 
   29588862054409120966, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.895320302242732*^9},
 CellLabel->
  "During evaluation of \
In[162]:=",ExpressionUUID->"f3cadbef-0cb5-4015-ab30-801be7a87247"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "precw", 
   "\"The precision of the argument function \
(\\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"-\\\", \
\\\"0.63679565482062874609504957260903247049`10.\\\"}], \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\
\"8.125`34.692339425437005\\\"}], \\\" \\\", SuperscriptBox[\\\"x\\\", \
\\\"2\\\"]}], \\\"-\\\", RowBox[{\\\"15.75`34.67876661824773\\\", \\\" \\\", \
\\\"x\\\", \\\" \\\", \\\"y\\\"}], \\\"-\\\", \
RowBox[{\\\"8.125`34.692339425437005\\\", \\\" \\\", \
SuperscriptBox[\\\"y\\\", \\\"2\\\"]}]}]]}], \\\"+\\\", \
RowBox[{\\\"0.63662170449745962316667558602601303912`10.\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
SuperscriptBox[\\\"x\\\", \\\"2\\\"]}], \\\"-\\\", \
RowBox[{\\\"4.`34.69897000433602\\\", \\\" \\\", SuperscriptBox[\\\"y\\\", \\\
\"2\\\"]}]}]]}]}]\\)) is less than WorkingPrecision \
(\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)).\"", 2, 163, 13, 
   29588862054409120966, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.895320302264326*^9},
 CellLabel->
  "During evaluation of \
In[162]:=",ExpressionUUID->"a558cfd4-2935-41c6-88dc-69d551ac7d63"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "precw", 
   "\"The precision of the argument function \
(\\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"-\\\", \
\\\"0.63679565482062874609504957260903247049`10.\\\"}], \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\
\"8.125`34.692339425437005\\\"}], \\\" \\\", SuperscriptBox[\\\"x\\\", \
\\\"2\\\"]}], \\\"-\\\", RowBox[{\\\"15.75`34.67876661824773\\\", \\\" \\\", \
\\\"x\\\", \\\" \\\", \\\"y\\\"}], \\\"-\\\", \
RowBox[{\\\"8.125`34.692339425437005\\\", \\\" \\\", \
SuperscriptBox[\\\"y\\\", \\\"2\\\"]}]}]]}], \\\"+\\\", \
RowBox[{\\\"0.63662170449745962316667558602601303912`10.\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
SuperscriptBox[\\\"x\\\", \\\"2\\\"]}], \\\"-\\\", \
RowBox[{\\\"4.`34.69897000433602\\\", \\\" \\\", SuperscriptBox[\\\"y\\\", \\\
\"2\\\"]}]}]]}]}]\\)) is less than WorkingPrecision \
(\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)).\"", 2, 163, 14, 
   29588862054409120966, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.895320302280957*^9},
 CellLabel->
  "During evaluation of \
In[162]:=",ExpressionUUID->"db8e956c-8cd0-4e57-b599-751f0cc131cb"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"precw\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 163, 15, 29588862054409120966, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8953203022976418`*^9},
 CellLabel->
  "During evaluation of \
In[162]:=",ExpressionUUID->"85537dbe-d54b-4763-8439-1902f3d63e99"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Create Necessary Inputs to run FindMinimumCostFlow", \
"Section"]], "Section",
 CellChangeTimes->{{3.747572405771767*^9, 
  3.7475724495852785`*^9}},ExpressionUUID->"4947032e-3eea-44ff-891d-\
6adbdff643a9"],

Cell["\<\

Create lists of all the boxes from which sand needs to be moved out \
(outboxes) and to which sand needs to be moved in (inboxes).
Each entry in one of those lists will be a list of two numbers: the x and y \
coordinates of the center of the grid box.\
\>", "Text",
 CellChangeTimes->{{3.718715393471553*^9, 3.7187154746689825`*^9}, {
   3.7187155475985956`*^9, 3.7187155707979794`*^9}, {3.7187159199009247`*^9, 
   3.7187159375484276`*^9}, {3.718716818132281*^9, 3.718716839031063*^9}, {
   3.7320481965056753`*^9, 3.7320482074735203`*^9}, {3.732048253913473*^9, 
   3.732048254874402*^9}, {3.732048302752951*^9, 3.7320483353762054`*^9}, {
   3.74757182790379*^9, 3.747571829334055*^9}, 3.747572078460015*^9, {
   3.7475721406199784`*^9, 3.747572143906324*^9}, 3.747572220252279*^9, {
   3.7489098635711136`*^9, 
   3.748909867670958*^9}},ExpressionUUID->"929b6fe4-4875-415a-98ef-\
9a3e8fa4434e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"outboxes", "=", 
    RowBox[{"{", "}"}]}], ";", 
   RowBox[{"inboxes", "=", 
    RowBox[{"{", "}"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", "nbox"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nbox"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diffarray", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "gridboxcutoff"}], 
          ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"outboxes", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"xmin", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", ".5"}], ")"}], "*", "dx"}]}], ",", 
              RowBox[{"ymin", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"j", "-", ".5"}], ")"}], "*", "dy"}]}]}], "}"}]}], 
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diffarray", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "<", 
           RowBox[{"-", "gridboxcutoff"}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"inboxes", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"xmin", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", ".5"}], ")"}], "*", "dx"}]}], ",", 
              RowBox[{"ymin", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"j", "-", ".5"}], ")"}], "*", "dy"}]}]}], "}"}]}], 
           "]"}]}], "]"}]}]}], "]"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7187151011727943`*^9, 3.718715117019005*^9}, {
   3.718715160978093*^9, 3.7187152354207497`*^9}, {3.7187152967701454`*^9, 
   3.718715389759921*^9}, {3.7187156660373745`*^9, 3.718715666405613*^9}, {
   3.7187158859058685`*^9, 3.7187159117441483`*^9}, {3.718716801836755*^9, 
   3.7187168126474085`*^9}, {3.7320454350464597`*^9, 3.732045475137607*^9}, {
   3.7320457835063353`*^9, 3.7320457839907713`*^9}, {3.7320459096176043`*^9, 
   3.732045914589596*^9}, {3.7320464038568344`*^9, 3.732046435487783*^9}, {
   3.732046561441983*^9, 3.7320465621295185`*^9}, {3.7320472556593637`*^9, 
   3.732047292387204*^9}, {3.7320473932194576`*^9, 3.7320474334639626`*^9}, 
   3.7320483527897673`*^9, {3.732632461103332*^9, 3.732632483734434*^9}, 
   3.7326325609955654`*^9, 3.7337936572063227`*^9, 3.7475711172050734`*^9, {
   3.747571190786585*^9, 3.747571242142131*^9}, {3.747571329054353*^9, 
   3.747571378354741*^9}, {3.7475714173245277`*^9, 3.7475714285559196`*^9}, {
   3.7475714797340403`*^9, 3.747571530544854*^9}, {3.7475718018644857`*^9, 
   3.747571819019231*^9}, 3.7475719317060776`*^9, 3.747571992940705*^9, 
   3.7475720498855886`*^9, 3.747572148700659*^9, 3.747572215160716*^9},
 CellLabel->
  "In[164]:=",ExpressionUUID->"b47c93fe-f966-4cca-abb6-4d4e4ad0a41d"],

Cell["\<\
The variables nout and nin are the numbers of boxes from which sand will be \
moved out or in.
 Their product, nvars, represents the total number of possible sand movements.\
\>", "Text",
 CellChangeTimes->{
  3.747572202183044*^9},ExpressionUUID->"aec06be4-0abb-4209-98bd-\
cd2962e311fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nout", "=", 
   RowBox[{"Length", "[", "outboxes", "]"}]}], ";", 
  RowBox[{"nin", "=", 
   RowBox[{"Length", "[", "inboxes", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nvars", "=", 
   RowBox[{"nout", "*", "nin"}]}], ";"}]}], "Input",
 CellLabel->
  "In[166]:=",ExpressionUUID->"50c77fc6-14e1-4ac5-bfa4-f03dc7c276a1"],

Cell["\<\
 
Creating a graph of vertices and edges contributing to the flow (bipartite \
graph of two sets of vertices: source set and target sets) 
EdgeCost: Assigning cost to each edge which is calculated by the Euclidean \
Distance between the two vertices. \
\>", "Text",
 CellChangeTimes->{{3.7475721628591304`*^9, 
  3.7475721776949883`*^9}},ExpressionUUID->"555ba4a0-0cc1-4dcc-a180-\
33e6cc1cd530"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.732632593343721*^9, 3.7326326650452313`*^9}, {
   3.7475718419541245`*^9, 3.747571856638435*^9}, 3.747571982263337*^9},
 CellLabel->
  "In[168]:=",ExpressionUUID->"41283e83-57dc-4bb7-b9c8-4fa2593fecf7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nout", "+", "nin"}]], "Input",
 CellChangeTimes->{{3.875793799868103*^9, 3.875793802614621*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"275892e6-15d7-4bc5-ba5d-5a64948be5a2"],

Cell[BoxData["182"], "Output",
 CellChangeTimes->{
  3.875793820835017*^9, {3.875793888002529*^9, 3.875793952134191*^9}, 
   3.875793984998168*^9, 3.875794019713022*^9, 3.875794102587914*^9, 
   3.875794169302956*^9, {3.876262298902234*^9, 3.8762624729171753`*^9}, 
   3.876303023061964*^9, {3.876303053307283*^9, 3.8763030675195103`*^9}, 
   3.876303173715815*^9, {3.876303303336472*^9, 3.8763033552100153`*^9}, 
   3.876304495365291*^9, {3.8765854203638*^9, 3.8765854444276037`*^9}, 
   3.8766053546908083`*^9, 3.876605443268002*^9, 3.876605619214157*^9, 
   3.87660565196585*^9, 3.876605844734748*^9, 3.876606202738798*^9, 
   3.878736358207883*^9, 3.878740388750732*^9, 3.878740778781474*^9, 
   3.884805753730761*^9, 3.8848058015120897`*^9, 3.895320308947543*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"398a362e-4660-47b9-b71c-b826a85cb326"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7320488798519497`*^9, 3.7320488811962485`*^9}},
 NumberMarks->False,
 CellLabel->
  "In[170]:=",ExpressionUUID->"9e1c6c9f-d0f4-4319-a17d-4e3a5ec7daea"],

Cell["\<\
Create lists of the amount of sand that needs to be moved out (supplyamount \
with positive values), and moved in (demandamount with negative values)\
\>", "Text",
 CellChangeTimes->{{3.732048402335739*^9, 3.732048457991173*^9}, {
  3.747571741412285*^9, 
  3.7475717430986366`*^9}},ExpressionUUID->"88f9deac-6a44-4609-bd3d-\
f79761a7858e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"supplyamount", " ", "=", 
   RowBox[{"{", "}"}]}], ";", " ", 
  RowBox[{"demandamount", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "nbox"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "\[LessEqual]", "nbox"}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"diffarray", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "gridboxcutoff"}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"supplyamount", ",", 
          RowBox[{"diffarray", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"diffarray", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "<", 
         RowBox[{"-", "gridboxcutoff"}]}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"demandamount", ",", 
          RowBox[{"diffarray", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.732047307722587*^9, {3.732047369000198*^9, 3.732047396097019*^9}, 
   3.73204744306359*^9, {3.7320483605694847`*^9, 3.732048361937667*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"851fa3d7-0006-44e1-8b12-6fd1cdcc9bc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["New codes begin here", "Section",
 CellChangeTimes->{{3.8413586497106695`*^9, 
  3.8413586567506685`*^9}},ExpressionUUID->"e36a8e42-632d-439a-88a9-\
bbf3b66f071b"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "mat0", ",", "i", ",", "j", ",", "mat", ",", "k", ",", "l", ",", "m", ",", 
   "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.8414455693714323`*^9, 3.841445573032248*^9}, {
  3.841446523782212*^9, 3.8414465288888655`*^9}, {3.8414467553688374`*^9, 
  3.841446758540719*^9}, {3.841447872694888*^9, 3.8414478747358923`*^9}, {
  3.8414801748109426`*^9, 3.8414802033999434`*^9}, {3.841481094388789*^9, 
  3.8414810992017703`*^9}, {3.84148121384779*^9, 3.8414812146497726`*^9}, {
  3.841481352167692*^9, 3.8414813523376937`*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"3222929b-4701-4498-bcb5-33aa4590e6be"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Create", " ", "the", " ", "cost", " ", "matrix", " ", "with", " ", "rows",
     " ", "being", " ", "all", " ", "supplying", " ", "boxes", " ", "and", 
    " ", "columns", " ", "being", " ", "all", " ", "demanding", " ", 
    RowBox[{"boxes", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"mat", " ", "=", " ", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EuclideanDistance", "[", 
        RowBox[{
         RowBox[{"outboxes", "[", 
          RowBox[{"[", "o", "]"}], "]"}], ",", " ", 
         RowBox[{"inboxes", "[", 
          RowBox[{"[", "q", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"o", ",", 
         RowBox[{"Length", "@", "outboxes"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"q", ",", " ", 
         RowBox[{"Length", "@", "inboxes"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "FindMinimumCostFlow", " ", "method", " ", "requires", " ", "the", " ", 
      "columns", " ", "and", " ", "the", " ", "rows", " ", "to", " ", 
      "contain", " ", "all", " ", "boxes"}], ",", 
     RowBox[{
     "no", " ", "matter", " ", "supplying", " ", "or", " ", "demanding"}], 
     ",", " ", 
     RowBox[{
     "though", " ", "I", " ", "think", " ", "the", " ", "method", " ", "will",
       " ", "not", " ", "actually", " ", "use", " ", "the", " ", "diagonally",
       " ", "lower", " ", "half", " ", "of", " ", "the", " ", "matrix"}], ",",
      " ", 
     RowBox[{
      RowBox[{
      "so", " ", "we", " ", "can", " ", "keep", " ", "elements", " ", "in", 
       " ", "that", " ", "part", " ", "quatiling", " ", "to", " ", "0.", " ", 
       "\[IndentingNewLine]", "Now", " ", "create", " ", "a", " ", "zero", 
       " ", "matrix", " ", "with", " ", "#", " ", "of", " ", "columns"}], "=", 
      RowBox[{
       RowBox[{"#", " ", "of", " ", "rows"}], "=", 
       RowBox[{"#", " ", "of", " ", "all", " ", "boxes"}]}]}], ",", " ", 
     RowBox[{
     "and", " ", "put", " ", "the", " ", "cost", " ", "matrix", " ", "from", 
      " ", "previous", " ", "section", " ", "onto", " ", "the", " ", "upper", 
      " ", "right", " ", "part", " ", "of", " ", "the", " ", "zero", " ", 
      "matrix"}], ",", 
     RowBox[{
     "where", " ", "the", " ", "rows", " ", "are", " ", "supplying", " ", 
      "boxes", " ", "and", " ", "columns", " ", "are", " ", "demanding", " ", 
      RowBox[{"boxes", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "@", "outboxes"}], "+", 
         RowBox[{"Length", "@", "inboxes"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "@", "outboxes"}], "+", 
         RowBox[{"Length", "@", "inboxes"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", 
      RowBox[{"Length", "@", "outboxes"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", 
        RowBox[{
         RowBox[{"Length", "@", "outboxes"}], "+", "1"}]}], ",", 
       RowBox[{"j", "\[LessEqual]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "@", "inboxes"}], "+", 
          RowBox[{"Length", "@", "outboxes"}]}], ")"}]}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"mat", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", 
           RowBox[{"j", "-", 
            RowBox[{"Length", "@", "outboxes"}]}]}], "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"m", "=", 
      RowBox[{
       RowBox[{"Length", "@", "outboxes"}], "+", "1"}]}], ",", 
     RowBox[{"m", "\[LessEqual]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "@", "inboxes"}], "+", 
        RowBox[{"Length", "@", "outboxes"}], "-", "1"}], ")"}]}], ",", 
     RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "@", "outboxes"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "m"}], "]"}], "]"}], "=", 
        RowBox[{"mat", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", 
           RowBox[{"m", "-", 
            RowBox[{"Length", "@", "outboxes"}]}]}], "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", "//", "MatrixForm"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8414481719044375`*^9, 3.841448263199439*^9}, {
   3.8414482987994437`*^9, 3.8414483691114388`*^9}, {3.8414485856880803`*^9, 
   3.8414486575770683`*^9}, 3.8414793839445667`*^9, {3.8414796056779747`*^9, 
   3.8414796184409695`*^9}, {3.8414796666909957`*^9, 
   3.8414796693719974`*^9}, {3.8414797189669995`*^9, 3.841479736503998*^9}, {
   3.8414797957833433`*^9, 3.841479808655347*^9}, {3.8414798408483453`*^9, 
   3.8414798409783597`*^9}, {3.84147992159634*^9, 3.8414800628595266`*^9}, {
   3.841481328512048*^9, 3.8414813388010445`*^9}, 3.875793730245781*^9, {
   3.87660389009202*^9, 3.8766039646544323`*^9}, {3.8766040101822023`*^9, 
   3.876604013907318*^9}, {3.876604069481089*^9, 3.876604084193413*^9}, {
   3.876604188980917*^9, 3.876604207241887*^9}, {3.876604251078076*^9, 
   3.876604256005031*^9}, {3.8766046287970743`*^9, 3.8766046377635937`*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"c1d9eed1-0022-4222-8bd2-904ac3fed851"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "mat0", "]"}]], "Input",
 CellChangeTimes->{{3.87660465674741*^9, 3.8766046585749807`*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"6c16e990-8c98-496e-a1f7-d6286a98117c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"182", ",", "182"}], "}"}]], "Output",
 CellChangeTimes->{{3.8766046405721188`*^9, 3.8766046699643087`*^9}, 
   3.876605355140252*^9, 3.876605443781749*^9, 3.8766056199260406`*^9, 
   3.876605652961513*^9, 3.876605846385687*^9, 3.876606204224636*^9, 
   3.8787363588898907`*^9, 3.878740389499848*^9, 3.8787407789147997`*^9, 
   3.8848057538446293`*^9, 3.8848058016202383`*^9, 3.895320309097662*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"1db60dff-a965-4f8c-aeec-edfc227dbc60"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Then", " ", "put", " ", "in", " ", "the", " ", "numbers", " ", "for", " ",
     "the", " ", "upper", " ", "left", " ", "section"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "1"}], ",", 
     RowBox[{"k", "<=", 
      RowBox[{"Length", "@", "outboxes"}]}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"l", "=", 
        RowBox[{"k", "+", "1"}]}], ",", 
       RowBox[{"l", "\[LessEqual]", 
        RowBox[{"Length", "@", "outboxes"}]}], ",", 
       RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "l"}], "]"}], "]"}], "=", 
        RowBox[{"EuclideanDistance", "[", 
         RowBox[{
          RowBox[{"outboxes", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", " ", 
          RowBox[{"outboxes", "[", 
           RowBox[{"[", "l", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]",
       "]"}]}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", "//", "MatrixForm"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.841479395850571*^9, 3.8414793960655684`*^9}, {
   3.841479742842001*^9, 3.8414797697763433`*^9}, {3.841479816531345*^9, 
   3.841479843832347*^9}, 3.875793734593319*^9},
 CellLabel->
  "In[180]:=",ExpressionUUID->"d2571b6a-7e27-40e3-bd15-ef1cf9d52163"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"For", " ", "the", " ", "lower", " ", "right"}], ".."}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"m", "=", 
      RowBox[{
       RowBox[{"Length", "@", "outboxes"}], "+", "1"}]}], ",", 
     RowBox[{"m", "\[LessEqual]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "@", "inboxes"}], "+", 
        RowBox[{"Length", "@", "outboxes"}], "-", "1"}], ")"}]}], ",", 
     RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"n", "=", 
        RowBox[{"m", "+", "1"}]}], ",", 
       RowBox[{"n", "\[LessEqual]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "@", "inboxes"}], "+", 
          RowBox[{"Length", "@", "outboxes"}]}], ")"}]}], ",", 
       RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mat0", "[", 
         RowBox[{"[", 
          RowBox[{"m", ",", "n"}], "]"}], "]"}], "=", 
        RowBox[{"EuclideanDistance", "[", 
         RowBox[{
          RowBox[{"inboxes", "[", 
           RowBox[{"[", 
            RowBox[{"m", "-", 
             RowBox[{"Length", "@", "outboxes"}]}], "]"}], "]"}], ",", " ", 
          RowBox[{"inboxes", "[", 
           RowBox[{"[", 
            RowBox[{"n", "-", 
             RowBox[{"Length", "@", "outboxes"}]}], "]"}], "]"}]}], "]"}]}]}],
       "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mat0", "//", "MatrixForm"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.841479846079341*^9, 3.841479878728359*^9}, {
   3.841481153466199*^9, 3.841481159092202*^9}, 3.8757939306154327`*^9, {
   3.876262330300892*^9, 3.87626235304852*^9}, {3.87630306970643*^9, 
   3.876303071201099*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"f105721a-a752-41d7-85c8-e05cffc9d29b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "mat0", "]"}]], "Input",
 CellLabel->
  "In[184]:=",ExpressionUUID->"75386c27-017d-4a2f-b2f6-31115e6697fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"182", ",", "182"}], "}"}]], "Output",
 CellChangeTimes->{3.8766046889535093`*^9, 3.876605355358542*^9, 
  3.8766054440529633`*^9, 3.8766056201624107`*^9, 3.876605653444491*^9, 
  3.8766058472473087`*^9, 3.876606204718449*^9, 3.878736359102524*^9, 
  3.878740389698071*^9, 3.878740779010634*^9, 3.8848057539167*^9, 
  3.884805801672473*^9, 3.895320309197703*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"bd048782-7fbf-4941-9a83-04ca48d0c870"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<supplyamount.csv\>\"", ",", "supplyamount", ",", "\"\<CSV\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<demandamount.csv\>\"", ",", "demandamount", ",", "\"\<CSV\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<mat0.csv\>\"", ",", "mat0", ",", "\"\<CSV\>\""}], 
  "]"}]}], "Input",
 CellLabel->
  "In[190]:=",ExpressionUUID->"0e344b13-1464-458f-af48-a2b6e71e1a49"],

Cell[BoxData["\<\"supplyamount.csv\"\>"], "Output",
 CellChangeTimes->{3.876605444090106*^9, 3.876605620220331*^9, 
  3.8766056535138807`*^9, 3.876605847319927*^9, 3.876606204790926*^9, 
  3.8787363591559362`*^9, 3.878740389740293*^9, 3.878740779050255*^9, 
  3.884805754349661*^9, 3.884805801698073*^9, 3.895320309215954*^9, 
  3.8953203771936007`*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"5d1c6c2e-4a75-4e45-bbd9-a3ed05407521"],

Cell[BoxData["\<\"demandamount.csv\"\>"], "Output",
 CellChangeTimes->{3.876605444090106*^9, 3.876605620220331*^9, 
  3.8766056535138807`*^9, 3.876605847319927*^9, 3.876606204790926*^9, 
  3.8787363591559362`*^9, 3.878740389740293*^9, 3.878740779050255*^9, 
  3.884805754349661*^9, 3.884805801698073*^9, 3.895320309215954*^9, 
  3.89532037719837*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"59ea58d4-0a0a-4f76-9772-4ecb17e1f454"],

Cell[BoxData["\<\"mat0.csv\"\>"], "Output",
 CellChangeTimes->{3.876605444090106*^9, 3.876605620220331*^9, 
  3.8766056535138807`*^9, 3.876605847319927*^9, 3.876606204790926*^9, 
  3.8787363591559362`*^9, 3.878740389740293*^9, 3.878740779050255*^9, 
  3.884805754349661*^9, 3.884805801698073*^9, 3.895320309215954*^9, 
  3.895320377647828*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"2f31e559-4ed5-4b79-a240-4fae0e4cf0c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Find", " ", "the", " ", "minimum", " ", "cost", " ", "flow"}], 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"FindMinimumCostFlow", "[", " ", 
   RowBox[{"mat0", ",", " ", 
    RowBox[{"Join", "[", 
     RowBox[{"supplyamount", ",", "demandamount"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.841479871470343*^9, 3.8414798990173435`*^9}, {
   3.8762622784028587`*^9, 3.8762623497679367`*^9}, {3.876262407259721*^9, 
   3.876262409381081*^9}, 3.8762624633824673`*^9, {3.8763029991594877`*^9, 
   3.876302999420178*^9}, {3.876303041838646*^9, 3.876303057947942*^9}, {
   3.876303192509048*^9, 3.876303195754176*^9}, {3.8763032640470037`*^9, 
   3.876303345178494*^9}, {3.876304469196013*^9, 3.8763044811269207`*^9}, {
   3.876304640583706*^9, 3.8763046407153883`*^9}, 3.8765854310417347`*^9},
 CellLabel->
  "In[188]:=",ExpressionUUID->"46ec8bcc-cb89-4095-9bfc-e7e1ecd4e719"],

Cell[BoxData["0.732196594586213`"], "Output",
 CellChangeTimes->{{3.8762623709534893`*^9, 3.8762624219059963`*^9}, {
   3.876303024203535*^9, 3.876303067926257*^9}, 3.8763031744978313`*^9, {
   3.876303287815226*^9, 3.876303290712359*^9}, {3.876304470531726*^9, 
   3.876304479291031*^9}, {3.876585420906397*^9, 3.876585445007853*^9}, 
   3.8766053554254293`*^9, 3.876605620717754*^9, 3.876605655805501*^9, 
   3.876606207228194*^9, 3.878736359627205*^9, 3.878740389891325*^9, 
   3.878740779177042*^9, 3.884805754730887*^9, 3.8848058019106817`*^9, 
   3.895320309725438*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"53d2f36b-03e5-402c-b7fc-a6ae6415e682"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Emma\[CloseCurlyQuote]s New Code", "Section",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.89532837960601*^9, 
  3.8953283863652678`*^9}},ExpressionUUID->"2e0a7122-44dc-441d-be7f-\
c411f33d90e0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"session", " ", "=", " ", 
  RowBox[{"StartExternalSession", "[", "\"\<Python\>\"", "]"}]}]], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"01a49b53-f170-4a9f-87e5-69995dede95f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ExternalSessionObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.05], {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}, {1, 3, 3}}}, {{{7.5718000000000005`, 17.7334}, {7.0998, 
                 17.7334}, {6.7168, 17.342399999999998`}, {6.7168, 16.8624}, {
                 6.7168, 16.3854}, {7.0998, 15.997399999999999`}, {
                 7.5718000000000005`, 15.997399999999999`}, {
                 8.043800000000001, 15.997399999999999`}, {8.4268, 16.3854}, {
                 8.4268, 16.8624}, {8.4268, 17.342399999999998`}, {
                 8.043800000000001, 17.7334}, {7.5718000000000005`, 
                 17.7334}}, CompressedData["
1:eJxTTMoPSmViYGBQAWIQvXD12hvxZbwODSxH+w2/izl86QsuUZnOAuezVHCr
aNT9se+5ncGQzyjl8EZ2+QsPve/2X6bfndzeKu/Qst2h6dHxD/ZfvSLbLMSU
4fz1U1I7kmVV4erNVtuFRxdqOCRs3P9mns0fe98WXv/1ItoOR9qWh58yYnP4
+AVowA4dh6z8D60nQwTg/EsTY/45/1KG87O1v02/K6zi8O7kYae1L3UdBLi3
Lqs8Lubw+zRQhEnPwdnuxc01v8QcGtQOtS2fbgDng2w5ctHQgc1E0MzGVsLB
+wS77exSIwfP/bWyFunyDs2BnnMbjhk5+CzjclP9quCwVMdZ5vUjI4cJhuW6
ivFKDqbvLVzdPxk5JIYEqS84qezgLyeW5fvZyGHaJp7CNacRfAOQAamqcD63
m2op0y01h3aQA54YOZx6ar/kvp0G3D4rZa/q5vVaEPMnQe0v1XG4bgIUWG4I
58P8A+M/mCO4dC+jJpy/M5vz54Llag73gLESNVkLEm/7VBwOWgItcNaA86PE
t19kiJOH80OmKfaVFkrC+ZbpLpn5BSIOx3JNGrY7KMH5UZf3PBaZKwfnw9IH
AO506oE=
                 "], {{12.401800000000001`, 4.1044}, {11.9298, 4.1044}, {
                 11.5458, 3.7164}, {11.5458, 3.2394}, {11.5458, 
                 2.7593999999999994`}, {11.9298, 2.369399999999999}, {
                 12.401800000000001`, 2.369399999999999}, {
                 12.872800000000002`, 2.369399999999999}, {13.2568, 
                 2.7593999999999994`}, {13.2568, 3.2394}, {13.2568, 3.7164}, {
                 12.872800000000002`, 4.1044}, {12.401800000000001`, 
                 4.1044}}, CompressedData["
1:eJxTTMoPSmViYGBQAWIQ/Uei+LrQJ2UHhUNty8NPfbBfaXrW2m+iEpyvdVrg
+C4LRYcC3899wSWf7M+tOn81LEfe4cBGvbzFjN/sb635FZPrKuPgUPST/+X2
n/bOdi9urvkl5sARP8NHtIfRAcY/smKJn4MwD5y/aIv5j0MpcnB+rknDdocm
RQepRxHi2y9KOeyeNoG/qkzZIQrIY4iTh/MPWip7VTtrwPkuv96+PmCpDedf
mhjzz3mXroPFtaO5JgxqcP6DOYJL9zJqwvldfU8+yV/ScWBbPMmKMdfA4eMX
r8i2HToOE/mrzFbXGcL5GnU9O7M1jRympHYkx8ZoO9z8AJIwcjBbbRceXajh
0Pzo+Izd34wc3p087LT2pQqcL7R070HxNCWH+TY6V2YB1SeEBKkv6JR3kKlJ
NAoVAKo/APTIb0kHkDMbphs6NLAc7Tf8LgZ3D4wPdu8vZTgfSJbrPlR2WNC5
4eHLqSIOz+yX3N/Xp+OQF1a7bluSiIPPMi431VIdeHjD+CLAYLzHxOQwi0N6
XpymlsMFzgylnIpf9lURK4AxrgGPT3B47lRzWNAU6Dm34ZP94ZRVQKerwtMD
enoBAPI7A7I=
                 "]}]}, {
               FaceForm[{
                 RGBColor[0.20800000000000002`, 0.514, 0.6859999999999999], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}}}, {{{7.5718000000000005`, 
                 17.6836}, {8.014800000000001, 17.6836}, {8.3778, 17.3156}, {
                 8.3778, 16.862599999999997`}, {8.3778, 16.4116}, {
                 8.014800000000001, 16.046599999999998`}, {
                 7.5718000000000005`, 16.046599999999998`}, {7.1268, 
                 16.046599999999998`}, {6.7658000000000005`, 16.4116}, {
                 6.7658000000000005`, 16.862599999999997`}, {
                 6.7658000000000005`, 17.3156}, {7.1268, 17.6836}, {
                 7.5718000000000005`, 17.6836}}, CompressedData["
1:eJxTTMoPSmViYGBQBWIQnRgSpL7gpLLDYxHZk0//GzmYnbX2uxio5NBvWK6r
COQ7nU+7+vyVgsOa7tsZDO+NHKLEt19kiJN3EPMI+CNx2cgh6fBl7VRJCYd/
zr/evm4wchDg3rqs8riYQ2vU5T2PrxjC+XxzjBdtmW4A59fKWqS7vNR1uDQx
BqhVGYMPVKRpdUkHrh7Gb5l3dtX5UAE4v+gn/8vt69ng/DOHndZm3vttD+YH
aTt8OAkS+Gb/aUNA9qxyDQeec5KBt6Q/2N/XnbDgh6GqgwTQ2/ZL3tt77Ae6
QF0Zrv6Nhat7UaW8wxWXGx++eP223xet4PgxWcqBJ0Mpp6KK2aFlefgpoyNi
DgtXr70RX8YL5wcBbZmzSASDP2llU6DnXDk4/4fhs3WqKkoOb/V3q/N3Szq0
nQw5uGKJCjx8YfyDlspe1c4acL5XdbO+zzItOP+Z/ZL7+/p0HJR2/mn/MlsN
zgfybl9n1ITzYeEP4wNjvXPDQUOHa8+ztL9N13IARW/+QiO4fbD4haQPNYfO
DQ9fTv1k5NADUueoColvBmMH9PQDAFGHDrQ=
                 "]}]}, {
               FaceForm[{
                 RGBColor[0.976, 0.8430000000000001, 0.353], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{12.4014, 4.0552}, {12.846400000000001`, 4.0552}, {
                 13.2074, 3.6902}, {13.2074, 3.2392000000000003`}, {13.2074, 
                 2.7862}, {12.846400000000001`, 2.4182}, {12.4014, 2.4182}, {
                 11.958400000000001`, 2.4182}, {11.595400000000001`, 
                 2.7862}, {11.595400000000001`, 3.2392000000000003`}, {
                 11.595400000000001`, 3.6902}, {11.958400000000001`, 
                 4.0552}, {12.4014, 4.0552}}, CompressedData["
1:eJxTTMoPSmViYGBQBGIQ3bszm/PnAl2HgsWMe1gv6TjA+Ec26uUtZtSE819t
X8/8nEfNISJ64/43ctoOlq7uRT/7lR06k2PvuDlrwPkvs7S/TY+Vh/MvpF19
nrVaCs6fH6d5WuC4mMNLkHk9inB+1r3Crr4UOTi/LerynsciPAh5hvxGlqNM
Dr8OpaxKuCLlcO96Y7HblF/2MPtesZgImtl8tde5MuuZbLqSw52tLTUXNr+1
/3363cnDTKoOCo4fk8/EvraHuRem3j4c6KEcLQel5HdRTna/7Ndlghyi4zCL
Q3penCaTA4wPcw+Mn7H5VfHWqSIO6sGsiyf9UsbgG2itFL5wRAyuHsYH+zvH
AM6PATlsjSGcbwwKeGUjhzV2QIfZSzn8sSo41zHJyKGuBxgRlfIOGUo5FVWs
xg62s0Pnr85VcljVFOg5l8HYoX15+CkjFlW4+l23uv6mlms4/OIH2uhs5BAg
J5bl+1kLYj/QPlh8w9wD4wMA37PnHw==
                 "]}]}}, {
             ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], AspectRatio -> Automatic, 
              ImageSize -> {20., 20.}, PlotRange -> {{0., 20.}, {0., 20.}}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"3.9.12\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"139f9cac-515c-4457-bed8-421241e8494b\"", "SummaryItem"]}],
                "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.05], {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}, {1, 3, 3}}}, {{{7.5718000000000005`, 17.7334}, {7.0998, 
                 17.7334}, {6.7168, 17.342399999999998`}, {6.7168, 16.8624}, {
                 6.7168, 16.3854}, {7.0998, 15.997399999999999`}, {
                 7.5718000000000005`, 15.997399999999999`}, {
                 8.043800000000001, 15.997399999999999`}, {8.4268, 16.3854}, {
                 8.4268, 16.8624}, {8.4268, 17.342399999999998`}, {
                 8.043800000000001, 17.7334}, {7.5718000000000005`, 
                 17.7334}}, CompressedData["
1:eJxTTMoPSmViYGBQAWIQvXD12hvxZbwODSxH+w2/izl86QsuUZnOAuezVHCr
aNT9se+5ncGQzyjl8EZ2+QsPve/2X6bfndzeKu/Qst2h6dHxD/ZfvSLbLMSU
4fz1U1I7kmVV4erNVtuFRxdqOCRs3P9mns0fe98WXv/1ItoOR9qWh58yYnP4
+AVowA4dh6z8D60nQwTg/EsTY/45/1KG87O1v02/K6zi8O7kYae1L3UdBLi3
Lqs8Lubw+zRQhEnPwdnuxc01v8QcGtQOtS2fbgDng2w5ctHQgc1E0MzGVsLB
+wS77exSIwfP/bWyFunyDs2BnnMbjhk5+CzjclP9quCwVMdZ5vUjI4cJhuW6
ivFKDqbvLVzdPxk5JIYEqS84qezgLyeW5fvZyGHaJp7CNacRfAOQAamqcD63
m2op0y01h3aQA54YOZx6ar/kvp0G3D4rZa/q5vVaEPMnQe0v1XG4bgIUWG4I
58P8A+M/mCO4dC+jJpy/M5vz54Llag73gLESNVkLEm/7VBwOWgItcNaA86PE
t19kiJOH80OmKfaVFkrC+ZbpLpn5BSIOx3JNGrY7KMH5UZf3PBaZKwfnw9IH
AO506oE=
                 "], {{12.401800000000001`, 4.1044}, {11.9298, 4.1044}, {
                 11.5458, 3.7164}, {11.5458, 3.2394}, {11.5458, 
                 2.7593999999999994`}, {11.9298, 2.369399999999999}, {
                 12.401800000000001`, 2.369399999999999}, {
                 12.872800000000002`, 2.369399999999999}, {13.2568, 
                 2.7593999999999994`}, {13.2568, 3.2394}, {13.2568, 3.7164}, {
                 12.872800000000002`, 4.1044}, {12.401800000000001`, 
                 4.1044}}, CompressedData["
1:eJxTTMoPSmViYGBQAWIQ/Uei+LrQJ2UHhUNty8NPfbBfaXrW2m+iEpyvdVrg
+C4LRYcC3899wSWf7M+tOn81LEfe4cBGvbzFjN/sb635FZPrKuPgUPST/+X2
n/bOdi9urvkl5sARP8NHtIfRAcY/smKJn4MwD5y/aIv5j0MpcnB+rknDdocm
RQepRxHi2y9KOeyeNoG/qkzZIQrIY4iTh/MPWip7VTtrwPkuv96+PmCpDedf
mhjzz3mXroPFtaO5JgxqcP6DOYJL9zJqwvldfU8+yV/ScWBbPMmKMdfA4eMX
r8i2HToOE/mrzFbXGcL5GnU9O7M1jRympHYkx8ZoO9z8AJIwcjBbbRceXajh
0Pzo+Izd34wc3p087LT2pQqcL7R070HxNCWH+TY6V2YB1SeEBKkv6JR3kKlJ
NAoVAKo/APTIb0kHkDMbphs6NLAc7Tf8LgZ3D4wPdu8vZTgfSJbrPlR2WNC5
4eHLqSIOz+yX3N/Xp+OQF1a7bluSiIPPMi431VIdeHjD+CLAYLzHxOQwi0N6
XpymlsMFzgylnIpf9lURK4AxrgGPT3B47lRzWNAU6Dm34ZP94ZRVQKerwtMD
enoBAPI7A7I=
                 "]}]}, {
               FaceForm[{
                 RGBColor[0.20800000000000002`, 0.514, 0.6859999999999999], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}}}, {{{7.5718000000000005`, 
                 17.6836}, {8.014800000000001, 17.6836}, {8.3778, 17.3156}, {
                 8.3778, 16.862599999999997`}, {8.3778, 16.4116}, {
                 8.014800000000001, 16.046599999999998`}, {
                 7.5718000000000005`, 16.046599999999998`}, {7.1268, 
                 16.046599999999998`}, {6.7658000000000005`, 16.4116}, {
                 6.7658000000000005`, 16.862599999999997`}, {
                 6.7658000000000005`, 17.3156}, {7.1268, 17.6836}, {
                 7.5718000000000005`, 17.6836}}, CompressedData["
1:eJxTTMoPSmViYGBQBWIQnRgSpL7gpLLDYxHZk0//GzmYnbX2uxio5NBvWK6r
COQ7nU+7+vyVgsOa7tsZDO+NHKLEt19kiJN3EPMI+CNx2cgh6fBl7VRJCYd/
zr/evm4wchDg3rqs8riYQ2vU5T2PrxjC+XxzjBdtmW4A59fKWqS7vNR1uDQx
BqhVGYMPVKRpdUkHrh7Gb5l3dtX5UAE4v+gn/8vt69ng/DOHndZm3vttD+YH
aTt8OAkS+Gb/aUNA9qxyDQeec5KBt6Q/2N/XnbDgh6GqgwTQ2/ZL3tt77Ae6
QF0Zrv6Nhat7UaW8wxWXGx++eP223xet4PgxWcqBJ0Mpp6KK2aFlefgpoyNi
DgtXr70RX8YL5wcBbZmzSASDP2llU6DnXDk4/4fhs3WqKkoOb/V3q/N3Szq0
nQw5uGKJCjx8YfyDlspe1c4acL5XdbO+zzItOP+Z/ZL7+/p0HJR2/mn/MlsN
zgfybl9n1ITzYeEP4wNjvXPDQUOHa8+ztL9N13IARW/+QiO4fbD4haQPNYfO
DQ9fTv1k5NADUueoColvBmMH9PQDAFGHDrQ=
                 "]}]}, {
               FaceForm[{
                 RGBColor[0.976, 0.8430000000000001, 0.353], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{12.4014, 4.0552}, {12.846400000000001`, 4.0552}, {
                 13.2074, 3.6902}, {13.2074, 3.2392000000000003`}, {13.2074, 
                 2.7862}, {12.846400000000001`, 2.4182}, {12.4014, 2.4182}, {
                 11.958400000000001`, 2.4182}, {11.595400000000001`, 
                 2.7862}, {11.595400000000001`, 3.2392000000000003`}, {
                 11.595400000000001`, 3.6902}, {11.958400000000001`, 
                 4.0552}, {12.4014, 4.0552}}, CompressedData["
1:eJxTTMoPSmViYGBQBGIQ3bszm/PnAl2HgsWMe1gv6TjA+Ec26uUtZtSE819t
X8/8nEfNISJ64/43ctoOlq7uRT/7lR06k2PvuDlrwPkvs7S/TY+Vh/MvpF19
nrVaCs6fH6d5WuC4mMNLkHk9inB+1r3Crr4UOTi/LerynsciPAh5hvxGlqNM
Dr8OpaxKuCLlcO96Y7HblF/2MPtesZgImtl8tde5MuuZbLqSw52tLTUXNr+1
/3363cnDTKoOCo4fk8/EvraHuRem3j4c6KEcLQel5HdRTna/7Ndlghyi4zCL
Q3penCaTA4wPcw+Mn7H5VfHWqSIO6sGsiyf9UsbgG2itFL5wRAyuHsYH+zvH
AM6PATlsjSGcbwwKeGUjhzV2QIfZSzn8sSo41zHJyKGuBxgRlfIOGUo5FVWs
xg62s0Pnr85VcljVFOg5l8HYoX15+CkjFlW4+l23uv6mlms4/OIH2uhs5BAg
J5bl+1kLYj/QPlh8w9wD4wMA37PnHw==
                 "]}]}}, {
             ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], AspectRatio -> Automatic, 
              ImageSize -> {20., 20.}, PlotRange -> {{0., 20.}, {0., 20.}}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"3.9.12\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"139f9cac-515c-4457-bed8-421241e8494b\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "139f9cac-515c-4457-bed8-421241e8494b", "Exists"]], 
                    ExternalSessionObject[
                    "139f9cac-515c-4457-bed8-421241e8494b"]["Active"], False],
                     StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/emmadavis/opt/anaconda3/bin/python3.9\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"139f9cac-515c-4457-bed8-421241e8494b\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Process: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["ProcessObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"python3.9\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2049", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"python3.9\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2049", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parent PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["741", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"emmadavis\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/emmadavis/opt/anaconda3/bin/python3.9\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Memory:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"22.888448`", "\"MB\"", "megabytes", 
                    "\"Megabytes\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Threads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Start Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"\"Fri 9 Jun 2023 15:41:00\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2023", ",", "6", ",", "9", ",", "15", ",", "41", 
                    ",", "0.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "4.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"System Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.2434620000000000117`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.5297809999999999464`5.", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Real Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.`5.", "\"s\"", "seconds", "\"Seconds\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   
                   ProcessObject[<|
                    "ManagedProcess" -> True, "UID" -> 9, "PID" -> 2049, 
                    "PPID" -> 741, "Program" -> "python3.9", "Path" -> 
                    "/Users/emmadavis/opt/anaconda3/bin/python3.9", "User" -> 
                    "emmadavis", "StartTime" -> 
                    DateObject[{2023, 6, 9, 15, 41, 0.}, "Instant", 
                    "Gregorian", -4.]|>], Selectable -> False, Editable -> 
                   False, SelectWithContents -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["50008", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"1537ba62-80a2-4db1-8b4d-203c486418f1\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["50008", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"1537ba62-80a2-4db1-8b4d-203c486418f1\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"tcp://127.0.0.1:50008\"", "SummaryItem"]}], 
                    "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   SocketObject["1537ba62-80a2-4db1-8b4d-203c486418f1"], 
                   Selectable -> False, Editable -> False, SelectWithContents -> 
                   True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"EvaluationCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "139f9cac-515c-4457-bed8-421241e8494b", "Exists"]], 
                    ExternalSessionObject[
                    "139f9cac-515c-4457-bed8-421241e8494b"][
                    "EvaluationCount"], None], StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ProcessMemory: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "139f9cac-515c-4457-bed8-421241e8494b", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "139f9cac-515c-4457-bed8-421241e8494b"]["ProcessMemory"], 
                    UpdateInterval -> 5], 
                    Missing["NotAvailable"]], StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ProcessThreads: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "139f9cac-515c-4457-bed8-421241e8494b", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "139f9cac-515c-4457-bed8-421241e8494b"]["ProcessThreads"],
                     UpdateInterval -> 5], 
                    Missing["NotAvailable"]], StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"SessionTime: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "139f9cac-515c-4457-bed8-421241e8494b", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "139f9cac-515c-4457-bed8-421241e8494b"]["SessionTime"], 
                    UpdateInterval -> 1], 
                    Missing["NotAvailable"]], StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ExternalSessionObject["139f9cac-515c-4457-bed8-421241e8494b"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.895328462159608*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"de74ff55-a3bb-4368-8309-e0e4257dc205"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExternalEvaluate", "[", 
  RowBox[{"session", ",", 
   RowBox[{
   "File", "[", 
    "\"\</Users/emmadavis/Documents/ResearchFelder/py_emd_test.py\>\"", 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.895328527127695*^9, 3.895328540011013*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"79f9eea0-18e4-476a-963f-b63804565120"],

Cell[CellGroupData[{

Cell[BoxData["\<\"0.14920592308044434\"\>"], "Print",
 CellChangeTimes->{3.895328546793316*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"4106a5b8-d208-4ff8-be48-09d071c415c5"],

Cell[BoxData["\<\"0.7368105441067163\"\>"], "Print",
 CellChangeTimes->{3.89532854680905*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"ad9cf6c2-95d3-4839-bd51-cfaa2a6c301c"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NumericArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Real64\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"182", ",", "182"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Real64\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"182", ",", "182"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.`", "\", \"", "0.2498`", "\", \"", "0.4996`", "\", \"", 
                    "0.7494`", "\", \"", "0.35327054788079915`", "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompressedData["
1:eJztnQm0nVV1xxMyvQSSN+U9IqMiVGBh0SrDAsn7DNIAKuOSIQWEgCAlLSyC
i0kcigwrwhIIBWMtQ8GiVJGKqQgiIIhCUSoYkDEOZdQWsIkQIFBd9/1vvPtl
s/f5ztl3v2H/11LWzZ2++33n/N/5fv99znnb/OP3O3qdcePGLez44//td8TJ
7z/xxCNO3X/ynx587IgF27/3Y3968j8G/wc9v+Nuc09cdd9A47/LB254buHS
vlefHtjy+BN7XvunBwfwPB4ffezlN/9k+a8Gvvzc8uVbzX124IYb3v7d6057
ofnv+Bw8brzvqYF/P3/O6jn3/27w319sPm5+zuD34jGeP+yBZdNXr3ih+T58
X+N7niff/+LAJbt+fsHTr/7fwBf2eWDPN85aOfC5yz4/ZccjVjT/HY/xfOP7
Vg08sOMF0+/c++XB43ip+RjPLz1v0eFPzFo98Ptpneu/Oue1gZ9deMjru77y
avPxe+fd++hFG42rup/68MrH3zW+ahzXuAr/jsefOG7/26f0jq8axzu+umfZ
r877yCPrVN/fbLvnvjJrnerRWR8+6soF61Qrn3/6mI+uXKd66Zeb3nHxdROq
Gc/MnrPF4onVC3c+dMZxfROrxu+YWF37+5c23OrxiVXj90yqbtv1nK1vP3By
tfmlb1zwqVcnVT03nnnYDT2Tm/++16nbbjPl7snVubde8pYJR02p5l31jXEX
bdFRNX73lOr1eR/d+dCujqrx+zuq885f2jf5xo6qcR6mVnNmP/Pw11+ZWn35
P//xsv1mTBvyeNU5m933292nVUevmHrZyV+bVr3n+Eu/e8Rfrlv961t/esKZ
661XNc7bmseN87deNf9vttnosS+vVzXO8/Tq8Cf/a7NHV02v7vxQ/xO/mTaj
6t/i2E/ducuM6q6/23fdn184o3k8+Hz8Lhwvvh/nE+cL5wG/D9cH5x/nF+cN
17nR3t4YmPJC/+77vDa+arSnCc3zjPZC2wP9XNru0K7QPnC8aK9fmvTo9pvs
9dLABpscv+Tb970yMG/7Z2fuc8LrA2hHjf71h4HnLv6HO8+/dNVgv1nz/Xg/
nsfxdfz1jVt9aIc3BtBe8fl4P57H8eF7cR7w+The/E6cH7RHtE+cf5wHnD+0
Q1w/XB+c/2b7GrzeuL64fmivaD9XXLR6uyuXrdtsF2gHaJcLXz6g46tzO6vG
75lRvT7ryUUHLJ3ebHf4nIG7Hlv6ude6qrnX3b9qq0Vd1YJPbnLKpzfvqnZ9
8qEDV3yxszrh5L3vnTi5c7Afd1fTt3z8mN0Wdg/27+7qd5tvc90zt3ZV8z6z
59X77thbHXzjvl9a8cOeap9XXvvp9w7rqb7wxT2eOHZCz2C/nlktPqB34Y82
nDnY33urB7uPeuodJ/VVZx33ndl3j++rxhFR3271W9m34cta34YPa30b7Vfr
22inkm+jnUq+jfbK+TaeRztGf9L6Ntq55Nto55Jvo71rfRvtXuvbaP9a34Yv
a30bPs35No4bx4PfT32b+iD1bclf0Q4k30Z7knwb7VPybfQPybfxPOfb+B7J
t3Ec1LfxOhwffg/OA9on9W2cX8m3MV7gfLtxPNNE3/7F4Vt/c9Fnp4u+3Tj+
LtG33/OBzb92yWndom+/fN42F911YA/r2x/vuObp7qW9rG8v3vLKE8fP7Bvi
2/OPXbTykef7mr5N/Zr6NvxS69vwVa1vo51pfRvtUevbaJeSb6NdSr6Ndsr5
Nh2HwIfhy3RcQn2bjk8436bjE8636ThF8m06XpF8m45bJN9GP9L6NnyZ8234
APo5zg/1bW78ivMl+SvaieTbaHeSb9P7TM636biG8216X0l9m95Pcr5N7yfx
+fQ+ko4/MI6gvt34nimib1945k6XbjdtKuvb+83+9vW73LGu6Ns/OPf0a/s/
O0P07cd+3bls7pVdom9j/Cv5duP+uIf17f2f7ZzziZ1nsr6923Mv7vKtf+4b
4tvjDz1kl91P6m/6NufXENpfmm+/qPZttButb6N9aX0b7UvybYwvJN/GfaPW
t8E54Nt0XEJ9m7uvpL7N3VdS3+buLznf5u4zOd/m7jc536b3m5Jvg3twvg2f
gA/g7x71bYk7SP6K9iT5NuWD3OdyfJD6NscFqW9zPJD2E8m3OQ5I7yPpfSM4
HfXt//ng25beflSH6NtoH5xvN37/eqJvY7wr+XajH3eLvt3xb9cv67qkR/Tt
S2bf+oerj+5lfXv5gTMevu2emaxv33rPOrss3rZ/iG+v/uYpkx4et37TtyW/
lvg2bcdazo12k8q7tZy72a+UnFvi22jXEt+G7zeOY1wl8RL4P3xD4tvwZYlv
N677JDXnRn/Scm70q1TereXc6FcS38brMB6iPBuv4zhJKb6N3+/FuXP5NtoZ
x0lS+Qgec5yEjkNy+TbOqxfntuLblGdr/Vrr26n5ZCrvtsonS+WSXE7D8RLq
26VzSS3nrptPpvLu1HxS4tv4HPQ7yrPxORwnKcW3cb68OHcu35ZyyVQ+gt/N
cZLUXFLi2zj/Xpzbim9Tnp3q15Jvp+aTqbzbKp8slUvScYiWc0ucpG4uqeXc
dfPJVN6dmk9KfBv9GJ9DeTb6K8dJSvHt1vPcfs6dy7elXDKVj+D4OU6SmktK
fBvv9+LcVnyb8uy6fs35dmo+mcq7rfLJUrkkHYdQzk3HJXV9W5tLajl33Xwy
lXen5pMS38bxoB9Tnt28HyB8oDTfxvn34ty5fFvKJel9JB1/0Fwd5w9cTvLt
XL6N9ujFua34NuXZuX5NfTs1n0S70Pq2VT5ZOpfEY8o5uLpt6hOlckmJC+bm
kxInpL6dmk9KuSR8AMcD36C+zXFd+IbEG7TjYS7Xob4t5Tr4fCnPaT1uPseR
8hspl6T3kfS+kebqOL9oT5JvS7kk2o3k28ihJd8euH6HBfOO7BJ9u2P/Kx/8
8D3dom9LuWTjvPayvn3wNTtc/v75fUN8m+aQpfwawnXW+jb6h9a30e+0vg1f
lXwbPiz5NnJEzrfpOAS+Cd+W5ttw95V1cxztfAU81uY6qfMY4NtSvkN9W6on
gU/AB2h+Bl+Q8jiJN2jHw1Iej/ahzeO1ObyU4+Tm7nQ8Qu8b0Y6ob+P6S77d
6G9TWd8+++G3/rzrmPVE3270y07Rty++9JGOqRO7Rd9u9K8e0bevf/6I/a99
dy/r25dfseCYeUtmsr49+96bOvca3z/Etxvnrb/p26X9GtLWk1jPn9TmkqXq
SGiuLvFtWk8i5ZGpdSTaXLJuPUm75k9yeSR8HPelNH9s1tEyXLtUHonf4ZVL
5uaRUh1JKs8uPf7Qjju8ckmrPJLmj1Z+rfVt6/mT2lyyVB0Jl6tzfJv6duk6
Em0uWbeexHr+pOTb6HdN3yb5I/oXx7VL5ZGtvt3+XDI3j5TqSFJ5div3Gcq1
U+tItPMkvXJJqzyS5o/Wfi35tvX8SW0uWaqOhI5DtLkkfLtUHol+os0l69aT
WM+flPJI9E/0O5o/4n0c1y6bR050yyVz80ipjiSVZ+O4OK6dWkeinSfplUta
5ZE0f2yXX7O+bTx/UptLlqojoeMQiW9T35byyFTf1uaSdetJrOdPSnkk+jH6
J80f0V85rl0qj2zlVO3PJXPzSKmOJJVn4/xwXDu1jkQ7T9Irl7TKI2n+2G6/
pr6dmk9a1ZOUriPBY5pL5q7/l1pHos0l69aTpOaTqfUkUh6Jfo5+TPNHHA83
n69UHonz7ZVL5uaRUh0JvY+k943cOg1nTZ50/9zZkyrJt3PzSPi2Vy5plUfS
/NHLryG0Y61vW9WTlKojoeMQWk+Su/5fao6jnV9Wt55Em++kzheGb0t1JDge
9HP4BvVtaR62xHW181a04+HS6ztIOU5u7k7HI/S+kdZB4fw2jmNyJfm2VEfy
vwO7fev7v54m+jZ4seTb50/93l7rfqBL9O2DdvqHq077Rrfo21IdyYZvn3/X
kct6Wd9unJ++Ib5N60a8/RqyWp+kVD2Uto6V+oGUR2rXH4bvo19I9SO7vm3z
Cz754wnqOhL0J20dCfqV9fokUg6J+01wQFovgjyHyyFL1Y/g74lXHUlu/Yi0
Dklq/lj6frH0eKN0HYlV/QitF/H2aarS65No60hK1f3RcZyUR2rXH65b96et
I6lb/9eu9Uk438b9KPrDkHqRwf7B5ZCl6kdwXF51JLn1I1LdX2r+WPp+UXuf
6FVHYlU/QutFvP2ZU6n1SVLr/3Lr/rhxSO76w3Xr/rR1JHXr/6zXJ5HqR9Cf
0F9ovQj6D5dDlqofwXF71ZHk1o9IdX+p+aN2vXht3Z92HRKvOhKr+hFaL+Lt
y5Jy1yfR1pGUqvuj4xBtHYm0/nDduj/r+j/r9Umk+hH0O/QnWi+C/sXlkKXq
R1r/LrW/jqRM/Qhf95eaP6auF59bP4Lz6lVHYlU/QutFvP1Yq7rrk2jrSErV
/dFxiJRHpq6vnVr3p60jqVv/Z70+iVQ/gv6JfkfrRdAPuRyyVP0IzodXHUlu
/YhU95eaP+J3czlkat2fdh0SrzoSq/oRWi/i7cOpsqr/K133h8e0jqRd+/7i
eW0dSd36P+v1SaT6EXwO+ietF0F/pblu6foRnGevOpLc+hEpd6f3kfS+kVtP
B7m35Nu59SPwba86Eqv6EVov4u2/ddXueihtHQntxxLfLr2PNa0j0eaSdetJ
rNcnkfJIjE/A+2j+iNyG49ql8kj0d69cMjePlOpIUnl26fFH6frV0rmkVR5J
80dv381VqXqSUnkkHX9JfLv0PtbcfmRW9STtWp+E822MX9Deaf6I9s9x7VJ5
JPqnVy6Zm0dKdSSpPFu7v4e2jkS7DolXLmmVR9L80dtvSym3nqRUHQk3Dsld
L75uHYk2l6xbT2K9PomUR+K+FP2B5o/oHxzXLpVHov965ZK5eaRUR5LKs7X7
e2jrSLTrkHjlklZ5JM0fvX22tOrWk5SqI6HjEG0uWWofa25fVKt6Euv1SaQ8
Ev0J/YXmj+g/HNculUein3vlkrl5pFRHksqzU/f3yM0jcb68ckmrPJLmj97+
aqXUepJSdSR0HEJ9OHd97dQ6Em0uWbeexHp9EimPRL9Df6L5I/oXvt8qj4Qf
+OaS9fNIqY5k7etprhl/1N3fQ1tHol2HxCuXtMojaf7o7avW0taTlK4jwWNa
T5K7vnZqjqOdX1a3nsR6fRKpjgT9E/0O/Zr6Ns1hqW9zuS58QcqJ4Rvadaa1
9dBp6y7wOU5u7k7vI+l9I7eeDs635NtSHYl2HZLpt9x28enHTxV9G/sUSb79
0EGHLjmtv1P0bamORFqH5NCrJixf2d87xLdp3Yi3n7ZL1u251a//7L5W4Nva
9eLr1pFoc8m69STW892lPBL3jeB7NH9ETsNx7VJ5JHIjr1wyN4+U6khSeXbp
8Yd23OGVS1rlkTR/9PbRdovz7VJ1JLT9SXxbu1583ToSbS5Zt56kXfPdOd/G
+AS+TfNHtHeOa5fKI9H/vHLJ3DxSqiNJ5dna/T20dSTaee1euaRVHknzR2//
9BL17VJ1JNw4JHe9+Lp1JNpcsm49ifV8dymPxH0n2jvNH9H+Oa5dKo9E//TK
JXPzSKmOJJVna/f30NaRaOe1e+WSVnkkzR+9fdNb8OVSdSR0HKLNJbV5ZGod
iTaXrFtPYj3fXcojwRPRH2j+iP7Bce1SeST6r1cumZtHSnUkqTw7dX+P3DwS
58Erl7TKI2n+6O2Xw0Wl6kjoOITmku3apx39QptL1q0nsZ7vLuWR6E/oLzR/
RP8Bb7fKI9HPvXLJ3DxSqiOh95F0/FF3fw9tHYl2XrtXLmmVR9L80dsnh5ty
c0luvR6Ol2jXs6ybS2o5d9180nr+pMS3Me5AfSrl2cghOU5Sim8jH/Li3Ll8
W8olU/mIdv1hbS6pnSfpxbmt+Dbl2d7+OFxVN5ek/ULiJaX3seb2S7DKJ9s1
f5LzbYxD4NuUZ8O3OU5Sim+jf3lx7ly+LeWSqXxEu/6wNpfUzpP04txWfJvy
bG9fHO5KzSW5cYi0jlSpfaypb2s5d9180nr+pMS3cX8J36Y8G+2d4ySl+HYr
p2w/587l21IumcpHtOsPa3NJ7TxJL85txbcpz/b2w5EibS5J+4WWczfbcaF9
JOm+TVb5pPX8SYlvgxuivVOejfYPrmnFt9E/vTh3Lt+Wckl6H0nvG3PXH87l
2/idXpzbim9Tnu3tgyNNUi659nrtNflk7vp/qbmkdr5C3XzSev6klEsiD0J/
QP+ivo1+yfk2nQdEfZvj99S3pXyglc/L+YOWj0n3bWXmSa65j6TjD26+L36P
5NtSLqmdJ4nrJvk2rr/k22hHkm9LuaQ0T7Lxu7qG+DbNIb39b6SKa9drn4fA
85LS++xRH9Vy7rr5pPV8HIlvIzfH+gqUZyOH5DhJKb6NPMiLc+fybSmXTOUj
pfdF1c678eLcVnyb8mxv3xvpor5NcxqJl5TeZ49bf9sqn2zXfBzOtzHuaPo2
4dnwbY6TlOLb6E9enDuXb0u5ZCofweNS+6Jq5914cW4rvk15trffjRa1+vbQ
cUju+mh1c0kt566bT1rPx5H4Nu4f4duUZ8O3OU5Sim+jf3lx7ly+LeWSqXxE
u56lNpfUzrvx4txWfJvybG+fG22i4xAt5y69LxndB8Qqn7SejyP5NrggfJvy
bLR39Ccrvo3+58W5c/m2lEvS+0h635i7nmUu38bv8OLcVnyb8mxvfxutQjuG
b619/Gy3b4I074zzce19Z2qdVSo31O4DhXEI2jfaP/oD+gdd9w/9Cf2Lm6+D
/qldr1DL8bX3L9q/s9Lfb64dUR/n2iXex60rj99N1yXGdcP5w3mhPo7z35qz
rvFlXD9cH5x/6uMYr+I603lXOP+4H0J7QXugPg4OgXaGdkV9HONftEOaU+I+
rzl+GPRl+Dh4Hu4T4dOY34jc0dvXRrvWvn+X/b4J6L/aeir4gva+s/X75fvP
VG6o3QcK/Q79Cf2V+ja3Xiv6qTTPUpuPajm+9v5Fe38k5Xna/e64dtl637i8
edw4nlaessa3kbdJvo3rw/k2OK/k28gHJN9G3iD5NvJmybeRg3C+jRyF823k
5dS3se41fNvbz8aKOL5dep89yiO1uWTdehLr+ZM6n+xptush+eNgP+C4dqk8
Ev3aK5fMzSN1dSR6ns39HahbR1L6/rD0+MIqj6T5o7ePjTVZ77PHrb9tVU/S
rvmTnG/jPhG+TfNH+DbHtUvlkfBtr1wyN4+U6khSeXZpvlf6/rB0LmmVR9L8
0du/xqqs901ona+gn4ejXZ+H9n/tvBztuj10fMflk/Bd+HRznb5BX0aOw3Ft
+DjHteHjHNemPi7xbbxPu56W9r5F+vuq/bvNtaNUnt3aXodyberjHNfGcXJc
m/q4xLfxPolv430S38b7OK6N13NcG6/nuDbaNdqxt2+NdVntm4DntbkkXf9V
69up+aQ2l9TuA4XxL9o7zR/R/jmuXSqPRP/0yiVz88jWdQ6GtqNUno3v4bg2
9e3cPBK/0yuXtMojaf7o7VehhkrvmyDNEy5VT5KaT6bWk0h5JDgE+gPNH9E/
wHmt8kj0X69cMjePlOpI1t4en29+Hq2DwnEgF5Z8OzePxHnwyiWt8kiaP3r7
VKhVpfZNQH/T1r/WrSfR1sWmckPtPlDoT+gv6IfUt+k+vdS3pX1/tet1a+dt
ajm+th5eug/S3l9x7Yi2R7ruGK2DwnHSdQXq1pHg+km+jXn8km9jXQDJt7HO
gOTbUh0J1j3gfBvrJgzxbVI34u1PobUrd98Euk6xdh6OdhyWyk3qrj8l8W2M
O5A7Up6NdXQ4TlKKb+P1Xpw7l2/j89/8Ouv5CP6d4yR0HJLLt/F6L85txrcJ
z/b2pdCbKzeXTK2nSs0nU307NZ+U+DbGIfBtyrPh2xwnKcW30b+8OHcu35Zy
yVQ+gtdznCQ1l5T4divPaT/ntuLblGd7+1FIp7q5ZOp8idR80nr+pMS3cX8J
36Y8G+2d4ySl+Db6nxfnzuXbUi6ZykfwORwnSc0ltfMkvTi3Fd+mPNvbh0Jp
Ss0ltZy7bj5pPX9S4tvghmjvlGej/YNrWvFt9E8vzp3Lt6VckrYb6rc4Turb
+D2Sb+fy7dZ21H7ObcW3Kc/29p9QPWlzSYkL5uaTEiekvp2aT0q5JPIg9Af0
L+rb2NeU823si8r5trTvL/qvdl9K7TpX2nW0JK6k5VVvfp3XtBvqt819eYlv
Y18JybelXBLXR/JtXGfJt7HvseTb2EdZ8m0pl8S+zpxvY19o6ts0h/T2nVCe
pFxSy7nr5pPW83EkH0JujvmNlGcjh+Q4SSm+jTzIi3Pn8m0pl0zlI2hnHCdJ
zSW18268OLcV36Y829tvQmXE+baWc9fNJ63n40h8G+MO+Dbl2fBtjpOU4tvo
T16cO5dvS7lkKh9p/jvDSVJzSe28Gy/ObcW3Kc/29plQWVHfTuPc6fmk9Xwc
iW/j/hG+TXk2fJvjJKX4NvqXF+fO5dtSLpnKR/B6jpOk5pLaeTdenNuKb1Oe
7e0vIRtJ6zqUyiet5+NIfBtcEL5NeTbaO3ilFd9G//Pi3Ll8W8ol6fWk7YTz
WewzIfl2Lt/G7/Di3FZ8m/Jsb18J2Uo7X6FuPqmdx9DKRfT5pJRLLnz5gI6v
zu1stnfkQ9S3G98/lfVtjHM4326cx4mibyNfk3yb2y+H+rZ2Hx4pl9TWu3N/
N+n1pK/nfBb72Uu+rcslJw7Zh5n6Nq6j5NtoD5JvX3HR6u2uXLau6NtSLol2
yvn2wF2PLf3ca11DfJvmkN5+EmqPpFyydbwj55J0vxyr+ZNSHol1rzd8+/y7
jlzWW9H88dCrJixf2d/Lcu1SeSTmSXrlkrl5pDRPMpVnN9uZcpyQm0fi87xy
Sas8kuaP3j4Saq9K15NYz5+U8kisrwDfpvkjfJvj2qXySPi2Vy6Zm0dKdSSp
PBvXX+uzuXkkPs8rl7TKI2n+6O0fIR+Vqiexnj8p5ZGoT4Vv0/wRvs1x7VJ5
ZHPdHqdcMjePlOpIUnk2rrfWZ3PzyNZxRPtzSas8kuaP3r4R8lVuPYn1/Ekp
jwTfg2/T/BG+zXHtUnkk+pNXLpmbR0p1JKk8G/+u9dncPBKf55VLWuWRNH/0
9ovQ8FDdehLr+ZNSHomcBr5N80f4NnIjqzwS/csrl8zNI6U6Enre6fXjxrFa
ny2TR65wyyWt8kiaP3r7RGh4KbWeRJvv4P2p9SRSHcnc6+5ftdWirma+3uhn
M4b4Nsa/nG+fd/7Svsk3drC+jf4n+fYLdz50xnF9E0XfRt2E5NvwJ8m3pToS
aZ1DqY6Ennd6/bhxrNZnpToSnFfp83B+Jd/G9ZZ8u7nfreDbUh0J2iXn22jH
1Ldp3Yi3P4SGp7T1JNbz3XV1JL3V5VcsOGbekpkVzR9RN8Jx7VJ5JOpIvHLJ
3DxSqiNJ5dmteYh835WbR6L9eeWSVnkkzR+9fSE0vCX5tvV8d3F+++xb/3D1
0b0VfJvmj/BtjmuXyiPh2165ZG4eKdWRpPJsXCftfVduHol25JVLWuWRNH/0
9oPQyBDn29bz3SXfbrT7ngq+TfNH+DbHtUvlkfBtr1wyN4+U6khSeXbrdZN5
WW4eiXbhlUta5ZE0f/T2gdDI0hDfNp7vLuWRL5+3zUV3HdhTwbdp/gjf5rh2
qTwSvu2VS+bmkVIdSSrPxnXTcofcPBK+7ZVLWuWRNH/07v+hkanUeWd157tL
eWTj9d0VfJvmj/BtcGOrPBL9ySuXzM0jpToSmkPS/JfjulrukJtH4vu8ckmr
PJLmj979PjSypc13UucLa9eTmr7l48fstrC7gm8v+OQmp3x6864hvt3of9NZ
3z56xdTLTv7aNNa3G7+zQ/TtnhvPPOyGnsmib4MrS74N35F8W6ojgf/UrSOh
67bQuh2O62q5g+SvOF+Sb+P863x7jV9yvo12Ifm2VEeCdsf5Ntot9W1aN+Ld
30OjQ9brk3D1Iwdfs8Pl75/fV82+96bOvcb3V7RepFEf0cfmkKXqR7AOiVcd
SW79iLQOSWr+iMf19gOtvw6JVx2JVf0IrRfx7ueh0aXS65NIOeTyA2c8fNs9
Myv4Nq0XgW9zOWSp+hH4tlcdSW79iFT3l5o/0r/Tkm/n1o+gHXnVkVjVj9B6
Ee/+HRqdKrU+iVQ/sv+znXM+sfPMCr5N60Xg21wOWap+BL7tVUeSWz8i1f2l
5o90vwnJt3PrR9AuvOpIrOpHaL2Id78OjW7lrk8i1Y98vOOap7uX9lbwbVov
At/mcshS9SPwba86ktz6EanuLzV/hO+mzWetXz+CduVVR2JVP0LrRbz7c2hs
qO76JBLXnPeZPa/ed8feCr5N60Xg21wOWap+BL7tVUeSWz8i1f2l5o/wR+06
07n1I2hXXnUkVvUjtF7Eux+HxpZS6/8krnnwjft+acUP/zg+HvRtWi8C38b4
16p+BL7tVUeSWz8i1f3RuhG63w+3jr92Pndu/Ugrn2l/HYlZ/QipF/Huv6Gx
qdT1Sbg88tZ71tll8bb9g/2kv6L5I+pGOK5dKo9EHYlXLpmbR0p1JKk8mz6W
1jHPzSPRjrxySas8kuaP3v02NLYl+baURzZ8p6+Cb9P8Eb7Nce1SeSR82yuX
zM0jpTqSVJ7d+vdW3lc5N49Eu/DKJa3ySJo/evfXUOhP4nxbyiMXb3nlieNn
9lXwbZo/wrc5rl0qj4Rve+WSuXmkVEeSyrPhZ9p9lXPzSPi2Vy5plUfS/NG7
n4ZCfy7q21Ie2fCbmRV8m+aP8G2Oa5fKI+HbXrlkbh4p1ZGk8mz4Kse1U+tI
tPNWvHJJqzyS5o/e/TMUWpta90Pg88jFB/Qu/NGGMyv4Ns0f4duNftFtlkfC
t71yydw8UqojoTkk/BX+ieepb0v7imvrSLTzVrxySas8kuaP3v0yFHozSblR
w2d6K/j2Pq+89tPvHdYzxLd/t/k21z1zaxfr2yecvPe9Eyd3sr4Nv5V8e9U5
m933292nib6NfE/y7c0vfeOCT706SfRtqY4kdx0Suv4I/Bf+inX3qW9L87C1
dSTaeSva8TDOq+TbuE6Sb0t1JNI6JGhX1Ldp3Yh3fwyFNOL49vhDD9ll95P6
q9XfPGXSw+PWryjPRg7JcZJSfBu5pBfnzuXbUi6ZykcwPuU4SWouqZ0n6cW5
rfg25dne/TAUShH17fnHLlr5yPN9FXyb8mz4NsdJSvFt+LYX587l21IumcpH
4FccJ0nNJbXzJL04txXfpjzbu/+FQnUE336w+6in3nFSXwXfpjwbvs1xklJ8
G77txblz+baUS6byEfglx0lSc0ntPEkvzm3FtynP9u53oVCOzjruO7PvHt9X
wbcpz4ZvY/xrxbfh216cO5dvS7kk5drwT/gifJn6Nt1Xtm4uqZ0n6cW5rfg2
5dne/S0UKiFa55e6DonERbV1xNrxJPpp4/vGVZzfYZ1T7F+O98EH4QdYvxqv
h79gvsv0W267+PTjpzb9H36AumtwaqynjXmR4Nr4u4P5lI3j7mqu533oVROW
r+zvbf49xHrgWH/83Kdu/vxpn5k5+Dt6m6/HvNBtv3rIg5Of66u22/2D+77v
r9a8HuuT91990yFL9l9/8Hf2N1+Pz8c81Xeedvb0d98yq9rgkiUP3DxpVvN9
B0382Oy51/Q357tusvupPT/5iw0Gz8tbmu9rnJ9Z1dnv3XPTU49dv3qkf/vb
F1ywYfXGb57+yM4Pb9B83xZn//3Us099S7XnGVtvff/PZg36/EbN1zfO4wbV
j7s3vnvfnTao/vvd2//ipq9vXC25+ZILOl/ZqLqh48YHJ35oo2qPryzs//2/
bFg9dNChS07r37SaMndF19IjNxk83xtXj91yxlOH/GTT6si9Zr3vW5tsWnn3
s1CopOquQyJxUW0dsXY8CT+VfBu+Kvk2fJjzbfiw5NuN411viG83/KSz6dvw
Y/g2fJX6NvxR8m34Kefb8FHJt+Gjkm/DTyXfhq9Kvg0f5nwbPsz5NnyZ+vaT
A3PeuXH11ubz3v0rFLJQ6ryb3PE36lW8xuG542/U3XE+nurfGHdzPo7XYz2V
3PE31nnxGodbjb/peNu7X4VCltLOu8kdf7fua9X+cXju+FviJnTcDT+Gb8NX
qW/DHyXfzh1/4/O9xuFW42863vbuT6FQOyTNu5HqdbX1ZNr5fHSfPs636f59
nG9L3ATj4rrcBONo+DbGxfBtjG+pb2O9Lcm3JW6Ccazk2xjPSr6Nca3k2+DL
km9L3ATjY863waepb1NO4t2PQqF2qu66UtI+N3heu7+sdt06bf0yx0lQF8Fx
ElrnwXGSVD6CXJLjJFgvFusQcpwE6xlynATrImIeksRLMK9J4iVYt1HiJfh7
xHESrPPLcZJn9jjrb7d41yyWk9Bc0rv/hEIeKs238diLc+fybfg2x0lS+Qh8
m+Mk1Ldz+TZ824tzW/FtyrO9+00o5KlSfBu+7cW5c/m2lEum8hH4NsdJUnNJ
bV2gF+e24tuUZ3v3l1BoOCiXb+P1Xpw7l29LuSTl2hgXw7cxvqW+Da4g+XYu
38brvTi3Fd+mPNu7n4RCw0l1+XYrl24/587l25jPx3GSVD4Crs1xEvBtzN/L
5tuD8069OLcV36Y827t/hELDUal8G897ce5cvi3lkql8BL7NcZLUXFLi2/Bt
L85txbcpz/buF6HQcJaWb7f6dvs5dy7flnLJVD4C3+Y4SWouqZ1348W5rfg2
5dne/SEUGgmS+DZ824tz5/JtKZekXBvjYvg2xrdDuPYgV5B8O5dv4/VenNuK
b1Oe7d0PQqGRJGk/dy/Oncu38X6Ok6TyEXBtjpPQ9aRy+Tb2bfDi3FZ8m/Js
7/YfCo1Ecb7txblz+baUS6byEfg2x0lSc0ntvBsvzm3FtynP9m73odBIFvVt
L86dy7elXDKVj8C3OU6Smktq5914cW4rvk15tnd7D4VGg+DHXpw7l29LuSTl
2nQ9EoxvqW+DK0i+ncu38Xovzm3FtynP9m7nodBoErdvK/Vt7b6w2n2wpFwy
d94NnW8DrgzfBhemvo19fSTflnJJ7bwb7fpSqHuWfBvre0i+LeWS0rwbbl0p
mkN6t+9QaDSq3blkbh5J9yGnXDuVZ5faJ0GbR2IfeK9c0iqPpPmjd7sOhUaz
2pVL5uaRUh1JKs+Gb3NcO7WORDtP0iuXtMojaf7o3Z5DobEg61yy1P6THNdO
5dnwbY5rp9aRaOdJeuWSVnkkzR+923EoNJZklUuW2n+S49qpPBs+zHHt1DoS
7TxJr1zSKo+k+aN3+w2FxqJK55K5eaRUR0JzSHBl+Da4MPXtx37duWzulV2i
b+fmkfBtr1zSKo+k+aN3uw2FxrJK5ZK5eSSe57h2Ks8utW+kNo9sHN8Ut1zS
Ko+k+aN3ew2FQvm5ZG4eKdWRpPLsUvtGps5r98olrfJImj96t9NQKLRGdXPJ
3DxSqiNJ5dnwbY5rp9aRaOe1e+WSVnkkzR+922coFBqq1FwyN4+U6khSeTZ8
mOPaqXUk2nntXrmkVR5J80fvdhkKhXhpc8ncPFKqI6E5JLgyfBtcmPr2D849
/dr+z84QfTs3j2zWkTjlklZ5JM0fvdtjKBSSJeWS1nlkKs8utc+vNo+c8czs
OVssnuiWS1rlkTR/9G6HoVBIr7r7S+bOa0/l2aX2+U2d1+6VS1rlkTR/9G5/
oVAoXan7S+bOa0/l2fBtjmun1pFo57V75ZJWeSTNH73bXSgUqi/t/pK589pT
eTZ8mOPaqXUk2nntXrmkVR5J80fv9hYKhfKVm0fq6kjW8A+6Piu4MPXt/WZ/
+/pd7lhX9O3cPBK+7ZVLWuWRNH/0bmehUKic6vJtKZdM5SOl9vlNnSfpxbmt
+Dbl2d7tKxQKlVcq35ZyyVQ+At/mOElqLqmdJ+nFua34NuXZ3u0qFArZScu3
pVwylY/AhzlOkppLaudJenFuK75NebZ3ewqFQvbKnSdJuTZd7w/1z9S3Lzxz
p0u3mzaV5dvaXFI7T9KLc1vxbcqzvdtRKBRqn+rOu0nlI6X2+U2dd+PFua34
NuXZ3u0nFAq1X6m5ZCofKbXPb+q8Gy/ObcW3Kc/2bjehUMhP2lwylY/AhzlO
kppLaufdeHFuK75NebZ3ewmFQv6ScknKten6UY3n13AJ+PZtu56z9e0HTq4k
387l2/BtN85txLcpz/ZuJ6FQaPiIyyXpfJt52z87c58TXm/69ku/3PSOi6+b
UFHfnnfVN8ZdtEVHJfm2lEtq591o1wPU7lP2hS/u8cSxE3qy9yuT5t1w6wDS
HNK7fYRCoeEnyklS+UipfSNT5914cW4rvk15tne7CIVCw1etdX56PtK6nt9Q
TpKaS2rn3Xhxbiu+TXm2d3sIhULDX6l8BL7NcZLUXFI778aLc1vxbcqzvdtB
KBQaOdKOt0vta5Nax+3FTax4CeUj3tc/FAqNPEnjbfgwN+5O5dzaOm4vbmLF
Sygf8b7uoVBo5Iobb5dad1vaB5juUyaNv/F3RRp/4+9Lu/Yz48bdNJf0vt6h
UGjky3bdbZmX4PO9uIkVL6F8xPs6h0Kh0aPS67hK+5TRfYGl8TfWSZHG39iX
Xhp/N753zf6VdNwNHsSNu5HDcuNuuk6J9/UNhUKjT6XWcdXyEvi2Fzex4iWU
j3hf11AoNHqVu46rlpfg8724iRUvoXzE+3qGQqHRr7rruEr7lMHXWzk3z0vw
vMRL8FjiJfgcjpM8sOMF0+/c++UBjpMsPW/R4U/MWj3AcRJwEdSne1/HUCg0
dlR3f0mJb+N5L85txbcpz/a+fqFQaOwpNZeU+Pabr8ttz7mt+Dbl2d7XLRQK
jV1pc0ltHbcX57bi25Rne1+vUCgUknJJbR23dv67dt3Adu2Pw82fpDmk93UK
hUIhqC7fbuXS7efcVnyb8mzv6xMKhUJUdefdeHFuK75Nebb3dQmFQiFOqfNu
vDi3Fd+mPNv7eoRCoZAk7bwbL85txbcpz/a+DqFQKKSVNO/Gi3Nb8W3Ks73P
fygUCqWK820vzm3FtynP9j7voVAoVFfUt704txXfpjzb+3yHQqFQruDHXpzb
im9Tnu19nkOhUKiUwIMl30bds+Tb7drPjNvHjOaQ3uc3FAqFSqvduaRVHknz
R+/zGgqFQlZqVy5plUfS/NH7fIZCoZC1rHNJqzyS5o/e5zEUCoXaJatc0iqP
pPmj9/kLhUKhdqt0LmmVR9L80fu8hUKhkJdK5ZJWeSTNH73PVygUCnkrN5e0
yiNp/uh9nkKhUGi4qG4uaZVH0vzR+/yEQqHQcFNqLmmVR9L80fu8hEKh0HCV
Npe0yiNp/uh9PkKhUGi4S8olrfJImj96n4dQKBQaKaq7v2TdPJLmj96/PxQK
hUaaUveXrJtH0vzR+3eHQqHQSJV2f8m6eSTNH71/bygUCo10WeWRNH/0/p2h
UCg0WlSab1Oe7f37QqFQaLSpFN+mPNv7d4VCodBoVS7fpjzb+/eEQqHQaFdd
vk15tvfvCIVCobGiunwbr/c+/lAoFBprSuPba3i293GHQqHQWJXEtynP9j7e
UCgUGuvi+Dbl2d7HGQqFQqGGKCehPNv7+EKhUCjUKurTeOx9XKFQKBRauyjP
9j6eUCgUCr25YnwdCoVCI0v/D82JvbM=
  "],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.895328546865553*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"49271831-424a-4c6e-98b1-2d8e413e15b1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 766},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.15 Inherited,
FrontEndVersion->"13.2 for Mac OS X x86 (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"eef218c7-b927-412f-9534-85522efa9333"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 240, 4, 113, "Title",ExpressionUUID->"db21e94a-4d5b-44de-85a4-2189ac2807bc"],
Cell[665, 21, 789, 21, 65, "Text",ExpressionUUID->"b7678db6-d45f-455b-85ec-513458b119c0"],
Cell[1457, 44, 363, 7, 39, "Text",ExpressionUUID->"41db1386-6c3a-4e02-80a7-437487129e45"],
Cell[CellGroupData[{
Cell[1845, 55, 161, 3, 77, "Section",ExpressionUUID->"6b7c1d83-4d3a-49ff-8eba-e2fc473f6487"],
Cell[2009, 60, 306, 7, 39, "Text",ExpressionUUID->"20bc7c2e-b83f-4d5b-8aa9-ecd013b816cc"],
Cell[2318, 69, 1802, 32, 97, "Input",ExpressionUUID->"b6d1e559-02c0-4274-956a-6b1a937d77b2"],
Cell[CellGroupData[{
Cell[4145, 105, 3298, 110, 332, "Input",ExpressionUUID->"1f2696b0-e746-46e3-b02b-7f37f5ad28ef"],
Cell[7446, 217, 1415, 25, 64, "Output",ExpressionUUID->"8488d0b6-dbed-4fb7-a469-f91c18ab4a94"],
Cell[8864, 244, 1535, 27, 64, "Output",ExpressionUUID->"20a3e2f5-5707-4a15-a6d5-455cc26d56ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10436, 276, 751, 20, 34, "Input",ExpressionUUID->"aa317fa4-c1f8-449a-a609-2ea7db5867da"],
Cell[11190, 298, 684, 14, 33, "Message",ExpressionUUID->"0a8ff157-e92c-43f6-a0b7-cddecaa10f27"],
Cell[11877, 314, 147981, 2405, 287, "Output",ExpressionUUID->"3baa1579-44a9-41d3-9595-a8191512f98b"]
}, Open  ]],
Cell[159873, 2722, 602, 10, 218, "Text",ExpressionUUID->"1bb1f213-cb72-49cc-b2d9-4588364d7295"],
Cell[160478, 2734, 3162, 52, 83, "Input",ExpressionUUID->"c46fd729-895e-44ae-9525-59dd9bf3d2c2"],
Cell[163643, 2788, 522, 10, 116, "Text",ExpressionUUID->"04339642-b964-4f9e-ad5d-8ef64a024b98"],
Cell[164168, 2800, 782, 19, 105, "Input",ExpressionUUID->"2a5d1af2-5d1e-4a5a-85f3-30db64d15748"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164987, 2824, 173, 3, 77, "Section",ExpressionUUID->"61a6fe87-0b2e-482d-8c84-753eac290ab7"],
Cell[165163, 2829, 224, 5, 39, "Text",ExpressionUUID->"ad0732b7-e6df-451c-980d-51a684a42f77"],
Cell[165390, 2836, 1437, 39, 155, "Input",ExpressionUUID->"0f22cf90-5a25-4ce3-a902-6c597856a554"],
Cell[166830, 2877, 753, 12, 116, "Text",ExpressionUUID->"36e4f744-d1a7-444b-b926-cdbac989a41a"],
Cell[CellGroupData[{
Cell[167608, 2893, 1721, 45, 129, "Input",ExpressionUUID->"3304fdb8-6edc-4663-b71c-762e2a83631b"],
Cell[169332, 2940, 1230, 23, 111, "Message",ExpressionUUID->"f3cadbef-0cb5-4015-ab30-801be7a87247"],
Cell[170565, 2965, 1230, 23, 111, "Message",ExpressionUUID->"a558cfd4-2935-41c6-88dc-69d551ac7d63"],
Cell[171798, 2990, 1230, 23, 111, "Message",ExpressionUUID->"db8e956c-8cd0-4e57-b599-751f0cc131cb"],
Cell[173031, 3015, 460, 10, 33, "Message",ExpressionUUID->"85537dbe-d54b-4763-8439-1902f3d63e99"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[173540, 3031, 230, 4, 77, "Section",ExpressionUUID->"4947032e-3eea-44ff-891d-6adbdff643a9"],
Cell[173773, 3037, 908, 16, 116, "Text",ExpressionUUID->"929b6fe4-4875-415a-98ef-9a3e8fa4434e"],
Cell[174684, 3055, 3407, 78, 227, "Input",ExpressionUUID->"b47c93fe-f966-4cca-abb6-4d4e4ad0a41d"],
Cell[178094, 3135, 299, 7, 65, "Text",ExpressionUUID->"aec06be4-0abb-4209-98bd-cd2962e311fa"],
Cell[178396, 3144, 372, 10, 59, "Input",ExpressionUUID->"50c77fc6-14e1-4ac5-bfa4-f03dc7c276a1"],
Cell[178771, 3156, 405, 9, 116, "Text",ExpressionUUID->"555ba4a0-0cc1-4dcc-a180-33e6cc1cd530"],
Cell[179179, 3167, 251, 4, 34, "Input",ExpressionUUID->"41283e83-57dc-4bb7-b9c8-4fa2593fecf7"],
Cell[CellGroupData[{
Cell[179455, 3175, 203, 4, 34, "Input",ExpressionUUID->"275892e6-15d7-4bc5-ba5d-5a64948be5a2"],
Cell[179661, 3181, 851, 13, 39, "Output",ExpressionUUID->"398a362e-4660-47b9-b71c-b826a85cb326"]
}, Open  ]],
Cell[180527, 3197, 200, 4, 34, "Input",ExpressionUUID->"9e1c6c9f-d0f4-4319-a17d-4e3a5ec7daea"],
Cell[180730, 3203, 350, 7, 65, "Text",ExpressionUUID->"88f9deac-6a44-4609-bd3d-f79761a7858e"],
Cell[181083, 3212, 1756, 46, 179, "Input",ExpressionUUID->"851fa3d7-0006-44e1-8b12-6fd1cdcc9bc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182876, 3263, 169, 3, 77, "Section",ExpressionUUID->"e36a8e42-632d-439a-88a9-bbf3b66f071b"],
Cell[183048, 3268, 656, 12, 34, "Input",ExpressionUUID->"3222929b-4701-4498-bcb5-33aa4590e6be"],
Cell[183707, 3282, 6104, 142, 611, "Input",ExpressionUUID->"c1d9eed1-0022-4222-8bd2-904ac3fed851"],
Cell[CellGroupData[{
Cell[189836, 3428, 216, 4, 34, "Input",ExpressionUUID->"6c16e990-8c98-496e-a1f7-d6286a98117c"],
Cell[190055, 3434, 520, 9, 39, "Output",ExpressionUUID->"1db60dff-a965-4f8c-aeec-edfc227dbc60"]
}, Open  ]],
Cell[190590, 3446, 1530, 39, 203, "Input",ExpressionUUID->"d2571b6a-7e27-40e3-bd15-ef1cf9d52163"],
Cell[192123, 3487, 1929, 51, 179, "Input",ExpressionUUID->"f105721a-a752-41d7-85c8-e05cffc9d29b"],
Cell[CellGroupData[{
Cell[194077, 3542, 149, 3, 34, "Input",ExpressionUUID->"75386c27-017d-4a2f-b2f6-31115e6697fd"],
Cell[194229, 3547, 484, 9, 39, "Output",ExpressionUUID->"bd048782-7fbf-4941-9a83-04ca48d0c870"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194750, 3561, 494, 13, 83, "Input",ExpressionUUID->"0e344b13-1464-458f-af48-a2b6e71e1a49"],
Cell[195247, 3576, 436, 7, 39, "Output",ExpressionUUID->"5d1c6c2e-4a75-4e45-bbd9-a3ed05407521"],
Cell[195686, 3585, 433, 7, 39, "Output",ExpressionUUID->"59ea58d4-0a0a-4f76-9772-4ecb17e1f454"],
Cell[196122, 3594, 426, 7, 39, "Output",ExpressionUUID->"2f31e559-4ed5-4b79-a240-4fae0e4cf0c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196585, 3606, 957, 17, 83, "Input",ExpressionUUID->"46ec8bcc-cb89-4095-9bfc-e7e1ecd4e719"],
Cell[197545, 3625, 658, 10, 39, "Output",ExpressionUUID->"53d2f36b-03e5-402c-b7fc-a6ae6415e682"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[198252, 3641, 244, 5, 77, "Section",ExpressionUUID->"2e0a7122-44dc-441d-be7f-c411f33d90e0"],
Cell[CellGroupData[{
Cell[198521, 3650, 204, 3, 34, "Input",ExpressionUUID->"01a49b53-f170-4a9f-87e5-69995dede95f"],
Cell[198728, 3655, 42055, 798, 70, "Output",ExpressionUUID->"de74ff55-a3bb-4368-8309-e0e4257dc205"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240820, 4458, 352, 8, 59, "Input",ExpressionUUID->"79f9eea0-18e4-476a-963f-b63804565120"],
Cell[CellGroupData[{
Cell[241197, 4470, 200, 4, 29, "Print",ExpressionUUID->"4106a5b8-d208-4ff8-be48-09d071c415c5"],
Cell[241400, 4476, 198, 4, 29, "Print",ExpressionUUID->"ad9cf6c2-95d3-4839-bd51-cfaa2a6c301c"]
}, Open  ]],
Cell[241613, 4483, 20363, 357, 92, "Output",ExpressionUUID->"49271831-424a-4c6e-98b1-2d8e413e15b1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

